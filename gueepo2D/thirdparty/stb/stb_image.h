





<!DOCTYPE html>
<html lang="en" data-color-mode="dark" data-light-theme="light" data-dark-theme="dark_dimmed">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">
  <link rel="preconnect" href="https://github.githubassets.com" crossorigin>
  <link rel="preconnect" href="https://avatars.githubusercontent.com">



  <link crossorigin="anonymous" media="all" integrity="sha512-klQdb3t14AYaRMkB0v9buaf5Ftfbec/sbxdkvyQpG6oBvzZxxH6N5QwA4llOyZsoyjqiZaTra2ci5TgInnLqQg==" rel="stylesheet" href="https://github.githubassets.com/assets/dark_dimmed-92541d6f7b75e0061a44c901d2ff5bb9.css" /><link data-color-theme="light" crossorigin="anonymous" media="all" integrity="sha512-1G4rYJktwRTQKn7fVfJUxH8RRZFUJlGo77xMZfBfIhZPx4BHVrzPE1VgnafttXI8G3y/PywH3uXyhNkSLp3+oA==" rel="stylesheet" data-href="https://github.githubassets.com/assets/light-d46e2b60992dc114d02a7edf55f254c4.css" /><link data-color-theme="dark" crossorigin="anonymous" media="all" integrity="sha512-hI5b2oqTE9njfjYrfuzXqA4bSGSNrE5OMc9IiFhZy+RDGg9Qn4Si1A97o0MlinlwFt3xAifvoLX0s7jHmHSvVw==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark-848e5bda8a9313d9e37e362b7eecd7a8.css" /><link data-color-theme="dark_high_contrast" crossorigin="anonymous" media="all" integrity="sha512-CBsfpBvg1D/Hvn8FFY4JwUVgoKjgynOSFKwgThDHrHASVid/Isgz0ueab5xSuSVx8vEvNL9UfYcpWIJRJYTCjg==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_high_contrast-081b1fa41be0d43fc7be7f05158e09c1.css" /><link data-color-theme="dark_colorblind" crossorigin="anonymous" media="all" integrity="sha512-09ipkynAtzCqasl2D2//N51bUOVnOzBFdadcXdMWyphI81s1FWmJ9AD1NRq3e0PMfiJEiVSm9mjTYd7gv2xtWA==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_colorblind-d3d8a99329c0b730aa6ac9760f6fff37.css" /><link data-color-theme="light_colorblind" crossorigin="anonymous" media="all" integrity="sha512-OJwnC/pGdOV3QMoWud8vp0nxtQhtzAcpNWB7mSSh/e7fPslExSb07EOdNTAJsBAS4bN7Yrdxm2F7htANgTIMsA==" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_colorblind-389c270bfa4674e57740ca16b9df2fa7.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-T3N453hWCYsL8yKfu3yye2yyO/D51Lq2iT5svAdl7UKvV2rBPcV7iOgr3fihzB9vYV7YFIK3PxpyTTkfxAshog==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-4f7378e77856098b0bf3229fbb7cb27b.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-86nXK7G/1oWlRy1vPOOQk1LE0Bom64aEW+v5THHCA+8mxZ3bLwUUh5fUND/8b8hkArmzVw9ga1PQVgrjt75bzg==" rel="stylesheet" href="https://github.githubassets.com/assets/behaviors-f3a9d72bb1bfd685a5472d6f3ce39093.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-MCJFYfbQoT4EXC6aWx5Wghs8FC/jslHEeN2iWXphliccmede2dQlhIBTAUCBq9Yu5poltu4askungzvyCsycGg==" rel="stylesheet" href="https://github.githubassets.com/assets/tab-size-fix-30224561f6d0a13e045c2e9a5b1e5682.css" />
    
    
    
    <link crossorigin="anonymous" media="all" integrity="sha512-qRZXNzipxvtgjvL3aOguJ2wmKSN3A9hBN2AK8UvO79Ss2UiUtAjZ2tTSQljbs4Fw9iN63kdXTuROvJEHVVsGFw==" rel="stylesheet" href="https://github.githubassets.com/assets/github-a916573738a9c6fb608ef2f768e82e27.css" />

  <script crossorigin="anonymous" defer="defer" integrity="sha512-K/kjAAGVhlckApEbskyYOB+ASq3m0GKyJk3y0JoEafwknEbUpmilodEuQQJG09c0v1eCRlX7mSQp+GLGtXmWQg==" type="application/javascript" src="https://github.githubassets.com/assets/environment-2bf92300.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-oBDjsGOOnyhlA5UdJdsqQzoij+eSWL6RSaWwVH1rDeFBEF4uXgY2qvYkGz7GGEXL43PMXoO+HJk3pOOTnW7Snw==" type="application/javascript" src="https://github.githubassets.com/assets/chunk-frameworks-a010e3b0.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-0V9Fd8M3m9Oyyf9rHecTlZSRgbXXBHpY/Ah7zt+gaahbB9q3KX4TghmHg+2Gxlxabiu7HsrhyHEWFMJ88Oukpw==" type="application/javascript" src="https://github.githubassets.com/assets/chunk-vendor-d15f4577.js"></script>
  
  <script crossorigin="anonymous" defer="defer" integrity="sha512-D+Tu4q5TuFQNcJ4q2nJ77l+ejAgE7Lr7+lpvWHgshjTgP8SSARNyRh8RnDJphR5fAiuNEjlxkaF/gJi1IYPaqw==" type="application/javascript" src="https://github.githubassets.com/assets/behaviors-0fe4eee2.js"></script>
  
    <script crossorigin="anonymous" defer="defer" integrity="sha512-ODZJzCJpaOfusrIka5QVZQcPiO9LBGyrrMYjhhJWSLuCN5WbZ5xiEiiOPOKVu71dqygyRdB2TY7AKPA1J5hqdg==" type="application/javascript" data-module-id="./chunk-unveil.js" data-src="https://github.githubassets.com/assets/chunk-unveil-383649cc.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-emPgUbSwW9ezLCgRnTE7n4fbbfc/MqEEDHmnkmG61dTyjWKHTYKN4wN3OPS7SY0fwmSJ8mB5+gng2nZw4/HsUg==" type="application/javascript" data-module-id="./chunk-animate-on-scroll.js" data-src="https://github.githubassets.com/assets/chunk-animate-on-scroll-7a63e051.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-x6L94lNXrnj4GyXhVug6j63GettxBVe/yQmgJU42IbfJet6sW2RBDG4tbZVkLbOCiYrNy+1Zwvoc1gA6uzSPow==" type="application/javascript" data-module-id="./chunk-input-demux.js" data-src="https://github.githubassets.com/assets/chunk-input-demux-c7a2fde2.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-d9zLk770daEV3pV4uNV22h2h49h/QxYstihxVyOEMetKZVhZcWW9bbqXOp2e1I7sIpuIj3xcpUSdlZKJxdl3tw==" type="application/javascript" data-module-id="./chunk-ref-selector.js" data-src="https://github.githubassets.com/assets/chunk-ref-selector-77dccb93.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-qD/5tz/GcwW3JIAEWlYOhr1tAQARpth6oFJ4ZpDWSpBgCiX4yh9FyUAGwuJtpPpMdp09fAjM6yh6r98Tw4/iRw==" type="application/javascript" data-module-id="./chunk-filter-input.js" data-src="https://github.githubassets.com/assets/chunk-filter-input-a83ff9b7.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-ynV5nM8UuCr4KZ/msFeRxRL6LnG+XUKzIfh6LNIzQ21ecjLVPvm53ghTE54aIuSUaHJWHnsYg8FRzycZIcRHiA==" type="application/javascript" data-module-id="./chunk-edit.js" data-src="https://github.githubassets.com/assets/chunk-edit-ca75799c.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-GhqHDMwaAgqUsjVyltYVhaaLYy2G887rPRXXNbsdaI+Xm3dh0fbaHLhZns70EjFAEpXBgCAYFYdnlG1IQFmz1A==" type="application/javascript" data-module-id="./chunk-responsive-underlinenav.js" data-src="https://github.githubassets.com/assets/chunk-responsive-underlinenav-1a1a870c.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-gmw7obKL/JEHWPp6zWFh+ynbXUFOidj1DN2aPiTDwP8Gair0moVuDmA340LD84A29I3ZPak19CEiumG+oIiseg==" type="application/javascript" data-module-id="./chunk-tag-input.js" data-src="https://github.githubassets.com/assets/chunk-tag-input-826c3ba1.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-Ao9llFIlj54ApuKf2QLboXukbu2h7MHfMmtYHrrsVe1lprKNLiA0usVcRpvruKhfT5STDuWm/GGmyx8ox27hWQ==" type="application/javascript" data-module-id="./chunk-notification-list-focus.js" data-src="https://github.githubassets.com/assets/chunk-notification-list-focus-028f6594.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-SPWd3rzrxmU6xW6vy1JPWCd+3uWFWmnd0MVGpmw/TpHWUAdLWDqL8kWyC/sBIZJmda4mTtUO1DHJQzAXRSrC+g==" type="application/javascript" data-module-id="./chunk-cookies.js" data-src="https://github.githubassets.com/assets/chunk-cookies-48f59dde.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-4vVRplWFI7P4m3RHQ0QAhkq6eZUdtIE8PBhsKYJRwDkhQw9iK/U1st1/fM1tQZFuBFwGMyqaZblbWtQ+2ejcqQ==" type="application/javascript" data-module-id="./chunk-slug.js" data-src="https://github.githubassets.com/assets/chunk-slug-e2f551a6.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-MK53GXbb2BPV+ADlEbJbkrvg34WPcAd5RC2nBJhUH1tR/Mjr9xrsf56ptBajfWcIWKRKbqqRtLktgr0wAbB3zw==" type="application/javascript" data-module-id="./chunk-async-export.js" data-src="https://github.githubassets.com/assets/chunk-async-export-30ae7719.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-tw9SApiMkftVBYeb6/VGhEwGNw8tlyBhXc9RVXH4UbCD6u+48uuCMvXf3bxvBdOld0OoYg83SnD2mgJWhdaTiQ==" type="application/javascript" data-module-id="./chunk-premium-runners.js" data-src="https://github.githubassets.com/assets/chunk-premium-runners-b70f5202.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-D576CjzS9sbDqFBJdq0Y6+KVMHXkO6mLFO/GRL1NtoE8jgXjAvmdjoZ4nNMWyDwqbtBHspvupORzE9L+YoBLYQ==" type="application/javascript" data-module-id="./chunk-get-repo-element.js" data-src="https://github.githubassets.com/assets/chunk-get-repo-element-0f9efa0a.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-xhSAO0KtnFAlRqAK+mg8BPj/J334ccvnCmmjmBQBCgZcsoO9teHJSS6oAn3XOWYFsWPU2JehwG7S3OVEbLwdUg==" type="application/javascript" data-module-id="./chunk-color-modes.js" data-src="https://github.githubassets.com/assets/chunk-color-modes-c614803b.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-jitxouuFY6SUcDZV5W3jhadVEIfFBfCQZxfPV3kxNnsWEBzbxMJFp0ccLb7+OlBjSs1zU/MNtuOV6T9Ay7lx4w==" type="application/javascript" data-module-id="./chunk-copy.js" data-src="https://github.githubassets.com/assets/chunk-copy-8e2b71a2.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-sAeL7y7Tbq5g07u3/0pJIS9IegVGfOVwfX7LQfKPna4UYzOQtcjfAJnwXSHWbAG7jSy4jQKtsukdRuQLX8JrGQ==" type="application/javascript" data-module-id="./chunk-voting.js" data-src="https://github.githubassets.com/assets/chunk-voting-b0078bef.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-HDsLJf6gAN+WDFaJneJwmIY82XkZKWqeX7tStBLRh1XM53K8vMV6JZvjq/UQXszaNVWxWcuYtgYTG6ZWo8+QSw==" type="application/javascript" data-module-id="./chunk-confetti.js" data-src="https://github.githubassets.com/assets/chunk-confetti-1c3b0b25.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-Jm91haHZxrhZUNUTJjxVpQdGcJwkbXkupgnVWT/GunQM8NN7k9a48rWrF3rf9/ElJ9sOmP54OzFXiPy82TjCgg==" type="application/javascript" data-module-id="./chunk-codemirror.js" data-src="https://github.githubassets.com/assets/chunk-codemirror-266f7585.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-Gr3ZcJt5t73JeBM3NwOEziKyDZ3HpHwzqZL/c1pgTUfo+6QC5f88XXRw/RT6X2diwqvaa3OVFh0oWsZ9ZxhtdQ==" type="application/javascript" data-module-id="./chunk-tip.js" data-src="https://github.githubassets.com/assets/chunk-tip-1abdd970.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-EdQvlnI4Pu5Q6K0HCvp+mi0Vw9ZuwaEuhbnCbmFKX+c0xwiUWY0L3n9P0F6doLhaHhfpvW3718+miL11WG4BeA==" type="application/javascript" data-module-id="./chunk-line.js" data-src="https://github.githubassets.com/assets/chunk-line-11d42f96.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-4zSHP2sQXPKoN9jFy8q2ThHsQNej8s4qhubSR4g0/2dTexAEnoTG+RbaffdIhmjfghGjpS/DlE0cdSTFEOcipQ==" type="application/javascript" data-module-id="./chunk-array.js" data-src="https://github.githubassets.com/assets/chunk-array-e334873f.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-g8fb6U7h9SkWgiK69nfNMn4aN5D2YBYPZUbCIuLpemWoOw8NOaZY8Z0hPq4RUVs4+bYdCFR6K719k8lwFeUijg==" type="application/javascript" data-module-id="./chunk-band.js" data-src="https://github.githubassets.com/assets/chunk-band-83c7dbe9.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-6oWCu7ltWLHlroIRg8mR6RloC1wqKS9aK9e5THWgzaE2GNPAdoC+MLZEYD/TdIiZxsQRev0RInyonsXGBK0aMw==" type="application/javascript" data-module-id="./chunk-toast.js" data-src="https://github.githubassets.com/assets/chunk-toast-ea8582bb.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-miaiZ1xkDsWBUsURHOmeYtbgVKQGnm1octCo/lDXUmPzDyjtubnHULRVw1AK+sttwdwyB0+LOyhIVAWCNSGx+A==" type="application/javascript" data-module-id="./chunk-delayed-loading-element.js" data-src="https://github.githubassets.com/assets/chunk-delayed-loading-element-9a26a267.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-GD25CNhMGDMzEmeFhUT0FILBupAkx5/CHohnYXOP1togy40O0iu/lASaSp3gV8ue0nwscalJVQqR5gKDRHHDVg==" type="application/javascript" data-module-id="./chunk-three.module.js" data-src="https://github.githubassets.com/assets/chunk-three.module-183db908.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-Ofk7ddnMsJ6F9d2vCuPQav+FG9Rg8i6WRG2KmbzwT01S9H4y58Fl42zYxDh/lJjOWeSyOB9KJyfIkdpCCTYG9A==" type="application/javascript" data-module-id="./chunk-invitations.js" data-src="https://github.githubassets.com/assets/chunk-invitations-39f93b75.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-vFR+IqThljOLrAWmjhOL/kiQrjgZZg95uPovX0J7kRH5p7Y049LDRZaXLMDijfeqqk71d3MMn9XP5bUcH+lB9w==" type="application/javascript" data-module-id="./chunk-profile.js" data-src="https://github.githubassets.com/assets/chunk-profile-bc547e22.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-FeRujRzXPfs03roBR3mnHvWukfFpu27XbyZPQri9jcCY0AdUWSM5R4drHTJUDQ62Pz/aX0rSS5xORvTu7NsjlQ==" type="application/javascript" data-module-id="./chunk-overview.js" data-src="https://github.githubassets.com/assets/chunk-overview-15e46e8d.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-xqw233932eUGcGURAPuwUWZpC5Km/9Btq7/2Jnkt1rSWnPSVfMl+JKpr9eLtCoQmrpgP8vaghEuX8bWAS8fzTg==" type="application/javascript" data-module-id="./chunk-advanced.js" data-src="https://github.githubassets.com/assets/chunk-advanced-c6ac36df.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-6Rmd0BBAsJ9ouvb/pgrkToMPs5ogcqi8rcQ7R3GDPPHIjlu0NZ0Bx6HUn/aOruMCECETHm4Exfs5gjYdHs66RQ==" type="application/javascript" data-module-id="./chunk-runner-groups.js" data-src="https://github.githubassets.com/assets/chunk-runner-groups-e9199dd0.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-5H5N/3G/20nmVKntphXb9z0H9q3URFDmHSccLhFkMSA8ILAA9mYlRKCWAWoDcl/W437jtGw1tIxjWStfInvidw==" type="application/javascript" data-module-id="./chunk-profile-pins-element.js" data-src="https://github.githubassets.com/assets/chunk-profile-pins-element-e47e4dff.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-LrD2kFGlUY4JxKVeN3dgYfuhfq0akTPGHtqW0gxkM2sDqVY6pauK2k57tmMHw4TQdcUrs+RQnBc1HPD+ou+ZfQ==" type="application/javascript" data-module-id="./chunk-emoji-picker-element.js" data-src="https://github.githubassets.com/assets/chunk-emoji-picker-element-2eb0f690.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-EvJ2Fip59DXgARNuwTWgjdVqoCjhXQL73SP9yexijlWStKq92sfbKeGK5R4wIP0QOr39WsnW/Kaw3Wpl1QPfog==" type="application/javascript" data-module-id="./chunk-edit-hook-secret-element.js" data-src="https://github.githubassets.com/assets/chunk-edit-hook-secret-element-12f27616.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-W0EihGBOA1mE3orR7s2squ9xVaLXrwd2bOYY9SSslfZHrovrS6KenJU+XXn+CaykddON6/aFEd/FbuQ/FltI9Q==" type="application/javascript" data-module-id="./chunk-insights-query.js" data-src="https://github.githubassets.com/assets/chunk-insights-query-5b412284.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-D/5Ad6jlKQNRPSHbVN5ShlFXOTyRsKbT7O0cWbVHwtOZ/UrwOC5bHKaQFHTq46qeMBbFKyDG+oIdtm5G8NifDA==" type="application/javascript" data-module-id="./chunk-remote-clipboard-copy.js" data-src="https://github.githubassets.com/assets/chunk-remote-clipboard-copy-0ffe4077.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-SUjF5sI77QngAIQUwKJRgZuIM4qggFBMtOZJ3EFS7ecv4uq4BQQJivDVxNBG9api9/rWrpw0d6RzvTCz2GrbdA==" type="application/javascript" data-module-id="./chunk-series-table.js" data-src="https://github.githubassets.com/assets/chunk-series-table-4948c5e6.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-nrfktuuo7BZhPpJxM4fVi62vPbZu6VJZ7ykfarxBExTTDnchXEalCJOq2O3GrVdfWu9cdn9kR/J8+oeTAjdHlA==" type="application/javascript" data-module-id="./chunk-line-chart.js" data-src="https://github.githubassets.com/assets/chunk-line-chart-9eb7e4b6.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-IOMGagwchKC7UeWHK/bV/rO1F1/RZAH0fNNouWV2boLOtE1a9LUbesoRsYK7sz6aFXslPC8fLfow+yWpT1eZzQ==" type="application/javascript" data-module-id="./chunk-stacked-area-chart.js" data-src="https://github.githubassets.com/assets/chunk-stacked-area-chart-20e3066a.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-GohDpVrxfHqlavb8Zabvj+y/s6CHegYwyGpQxKtzR2MkQsynBC98LdLongRFMHI+TKAECLavp200Lsy9JbV5TQ==" type="application/javascript" data-module-id="./chunk-presence-avatars.js" data-src="https://github.githubassets.com/assets/chunk-presence-avatars-1a8843a5.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-TpHTIXhA/2bI21CVmFL1oS3dv+8zveJVZLOVVAZwXNAAI94Hy70L9vT3Q1Vvkyu4Z2gi2iFdy1a53pfYlEDgnQ==" type="application/javascript" data-module-id="./chunk-pulse-authors-graph-element.js" data-src="https://github.githubassets.com/assets/chunk-pulse-authors-graph-element-4e91d321.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-aNAcFMlIdG1ocY5LnZylnN/6KXiJxyPvKg7y1Jnai732wdnrjXazcvNiQkRnj5FY8WP6JRa3K4doCReA4nhj7w==" type="application/javascript" data-module-id="./chunk-stacks-input-config-view.js" data-src="https://github.githubassets.com/assets/chunk-stacks-input-config-view-68d01c14.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-MXXdKvrDUhz9jfXB1/McrPebK8VbV5haYcxcNt5WXgbUym55dZattmCIAK2pJFAD2h4aBUFHo7CzpjmDYf7EkQ==" type="application/javascript" data-module-id="./chunk-community-contributions.js" data-src="https://github.githubassets.com/assets/chunk-community-contributions-3175dd2a.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-cet9hnkE+vaMPz2lGw4InoQD4ZuVWd+S0JRTspISoRSd2xj9qYD2E7Fnpne5Ic3z6vutruWIuZlzF30ecrFVew==" type="application/javascript" data-module-id="./chunk-discussion-page-views.js" data-src="https://github.githubassets.com/assets/chunk-discussion-page-views-71eb7d86.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-5+v3VN/rhJv/1iAOVphuCGs1FM9eUlSB43CJLw1txGMLvuPNNz/xHQbzTOIW+t2NKFpTnptRvKbuicQ3Jp28UQ==" type="application/javascript" data-module-id="./chunk-discussions-daily-contributors.js" data-src="https://github.githubassets.com/assets/chunk-discussions-daily-contributors-e7ebf754.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-/PSS3erY5t+SZL9B5T6Edgzy2pLD3jx7G/ZqQE+UCPhaaMEEc8Qrhv5XTREOOX0e3DquvxVDDM/KVa6SK/BPcA==" type="application/javascript" data-module-id="./chunk-discussions-new-contributors.js" data-src="https://github.githubassets.com/assets/chunk-discussions-new-contributors-fcf492dd.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-cFe9WuBCDrJOiGiTm4+TEi7fPqhRTxRZbqng2GxfPrENGiyxllCL2NDjwgANC1PTe8UU6ATCFnK9JAgcph2rtA==" type="application/javascript" data-module-id="./chunk-tweetsodium.js" data-src="https://github.githubassets.com/assets/chunk-tweetsodium-7057bd5a.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-AVKfqEKBF/JCvS2PoakItu304k6gGt9oSMBW2R/eEfGsGuTmC9QeiQw//IJJKFRQdrzpha/FoC/cws9v6dsujQ==" type="application/javascript" data-module-id="./chunk-jump-to.js" data-src="https://github.githubassets.com/assets/chunk-jump-to-01529fa8.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-rgB4C/XatEIjEvdEJWsKRyOYwe2rj4WTWtCzlKT6jA8fR4xgjPnpcl4/QeQOprsfPE7R2BycawtlzHzh/xG0JQ==" type="application/javascript" data-module-id="./chunk-user-status-submit.js" data-src="https://github.githubassets.com/assets/chunk-user-status-submit-ae00780b.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-4xtjUJAtGhsZOLk+SHoir8MWF0vKHoR4tGlR36xsg1kGrE9ftN4BHe21k2TT5jSkqz5x8z7BfZKj/eUuwcZMEQ==" type="application/javascript" data-module-id="./chunk-launch-code-element.js" data-src="https://github.githubassets.com/assets/chunk-launch-code-element-e31b6350.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-NilVxyBbQNJ61v85EVcC3VjOsz5tz+bOlaR1h1R+jIFXNT8VhoalRgPXREht+R3JIZF5fiqkkHZy3+01pX4ZDg==" type="application/javascript" data-module-id="./chunk-metric-selection-element.js" data-src="https://github.githubassets.com/assets/chunk-metric-selection-element-362955c7.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-Gz9BhNH9Dl0I9vfifm3AZ7LBZ/pUynlfr2043a5/vq4F8lKX/2fxnRJ/8o9VdQGhZ3zlGSKq6fdRP4UehhEYLA==" type="application/javascript" data-module-id="./chunk-severity-calculator-element.js" data-src="https://github.githubassets.com/assets/chunk-severity-calculator-element-1b3f4184.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-yXHkwiNZgB6O0iSDKE8jrZzTtTyF8YdFFXHcemhWEPuN3sWs1PQrSwEh0Gw4/B9TIzUfvogbqlJ71yLLuqyM+Q==" type="application/javascript" data-module-id="./chunk-readme-toc-element.js" data-src="https://github.githubassets.com/assets/chunk-readme-toc-element-c971e4c2.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-WtxFYpyZyznX2bQr5Za6UNxUXn7RheDqolsoKRcOTvUA3hxrMym/nWB3FiaNxjI4ZH7ZeF5e2l/PM3Yaj8f1Sg==" type="application/javascript" data-module-id="./chunk-feature-callout-element.js" data-src="https://github.githubassets.com/assets/chunk-feature-callout-element-5adc4562.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-yxNOcJg4rvGRpQr6+SEa/h1pLruduSOJbs4dgMMJwtOzVsB7rnUjUmWA38lXw8UpWPzudIIdESY0SgO0HVFiAA==" type="application/javascript" data-module-id="./chunk-action-list-element.js" data-src="https://github.githubassets.com/assets/chunk-action-list-element-cb134e70.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-Pvx3rTrXcH5VI/XimZxFgsSzMLnRTMXnFd4laAZYre6JAI7349Swv+B1vh+YwFgR1LbZweTCKV1XBovUHhxc/A==" type="application/javascript" data-module-id="./chunk-sortable-behavior.js" data-src="https://github.githubassets.com/assets/chunk-sortable-behavior-3efc77ad.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-6JUQHgkTqBaCCdDugMcO4fQ8YxUHk+m6rwVp2Wxa4FMVz6BbBMPOzGluT4wBq8NTUcFv6DnXSOnt5e85jNgpGg==" type="application/javascript" data-module-id="./chunk-drag-drop.js" data-src="https://github.githubassets.com/assets/chunk-drag-drop-e895101e.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-28pipPJZvizfcYYETJWBBeDHsrDEz7A06d7Y5swgY/OWmsX0ZJW6mkZVFRO7Z/xZh1D1qFbPHGNixfCd1YpBnA==" type="application/javascript" data-module-id="./chunk-contributions-spider-graph.js" data-src="https://github.githubassets.com/assets/chunk-contributions-spider-graph-dbca62a4.js"></script>
    <script crossorigin="anonymous" defer="defer" integrity="sha512-y0yuiXfWuIeCCcUBT1jacp25vWnFCJWgwLM5G1VM4tmCHdoQbiVjvW/vuSuEXUjtS8WwdioTD5hVv9UULiUlww==" type="application/javascript" data-module-id="./chunk-webgl-warp.js" data-src="https://github.githubassets.com/assets/chunk-webgl-warp-cb4cae89.js"></script>
  
  <script crossorigin="anonymous" defer="defer" integrity="sha512-qZbRIypXkWZB1E/lrcPh1h/YbWO1VctTEhpxlDqoaP7dc3guToNpKxykwdCjgTFBg1IOYhnrYISKHXxiID7Mbg==" type="application/javascript" src="https://github.githubassets.com/assets/repositories-a996d123.js"></script>
<script crossorigin="anonymous" defer="defer" integrity="sha512-brCi3S09RayM2lqbfSG9CtkGcIL/MFHJWntC4Us28cfuvXV82NleMai/VAbNbqpbD43K7Zy2rYYY4lx3zNZHiA==" type="application/javascript" src="https://github.githubassets.com/assets/diffs-6eb0a2dd.js"></script>

  <meta name="viewport" content="width=device-width">
  
  <title>stb/stb_image.h at master · nothings/stb</title>
    <meta name="description" content="stb single-file public domain libraries for C/C++. Contribute to nothings/stb development by creating an account on GitHub.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">
  <meta name="apple-itunes-app" content="app-id=1477376905" />
    <meta name="twitter:image:src" content="https://opengraph.githubassets.com/9c966d15d2267f3bea3e23b1342f59e4e3f905aaec5c9bd9a863626b1131d810/nothings/stb" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary_large_image" /><meta name="twitter:title" content="stb/stb_image.h at master · nothings/stb" /><meta name="twitter:description" content="stb single-file public domain libraries for C/C++. Contribute to nothings/stb development by creating an account on GitHub." />
    <meta property="og:image" content="https://opengraph.githubassets.com/9c966d15d2267f3bea3e23b1342f59e4e3f905aaec5c9bd9a863626b1131d810/nothings/stb" /><meta property="og:image:alt" content="stb single-file public domain libraries for C/C++. Contribute to nothings/stb development by creating an account on GitHub." /><meta property="og:image:width" content="1200" /><meta property="og:image:height" content="600" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="stb/stb_image.h at master · nothings/stb" /><meta property="og:url" content="https://github.com/nothings/stb" /><meta property="og:description" content="stb single-file public domain libraries for C/C++. Contribute to nothings/stb development by creating an account on GitHub." />
    



    

  <link rel="assets" href="https://github.githubassets.com/">
    <link rel="shared-web-socket" href="wss://alive.github.com/_sockets/u/5924123/ws?session=eyJ2IjoiVjMiLCJ1Ijo1OTI0MTIzLCJzIjo2NjMzNjExMTcsImMiOjEwMDIyNTYwOTYsInQiOjE2Mzc0NDI5OTZ9--d46490ef6216ca3041e2a74e28560525cf7133c6fa5e85b87dacdadc5903042b" data-refresh-url="/_alive" data-session-id="d599a01e21b08973d6a5695915bc8719b394ece4981a73e14ad1ba6b94ef29d3">
    <link rel="shared-web-socket-src" href="/assets-cdn/worker/socket-worker-5ba606f2.js">
  <link rel="sudo-modal" href="/sessions/sudo_modal">

  <meta name="request-id" content="D1F4:62B3:63EC19:A759FF:619965AF" data-pjax-transient="true" /><meta name="html-safe-nonce" content="da4d303502bb9753fe086f462f08b35b9d7e44f3ab7409af89e41491970699c5" data-pjax-transient="true" /><meta name="visitor-payload" content="eyJyZWZlcnJlciI6Imh0dHBzOi8vZ2l0aHViLmNvbS9ub3RoaW5ncy9zdGIiLCJyZXF1ZXN0X2lkIjoiRDFGNDo2MkIzOjYzRUMxOTpBNzU5RkY6NjE5OTY1QUYiLCJ2aXNpdG9yX2lkIjoiMjQyNzU1NDA0NzQ2NTQ2NzI1NCIsInJlZ2lvbl9lZGdlIjoiaWFkIiwicmVnaW9uX3JlbmRlciI6ImlhZCJ9" data-pjax-transient="true" /><meta name="visitor-hmac" content="736f8f70a309ec284d956eee0a89e44f48f8d9057b1d6a24c02b830aeee033d2" data-pjax-transient="true" />

    <meta name="hovercard-subject-tag" content="repository:20159867" data-pjax-transient>


  <meta name="github-keyboard-shortcuts" content="repository,source-code" data-pjax-transient="true" />

  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY">
  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

<meta name="octolytics-url" content="https://collector.githubapp.com/github/collect" /><meta name="octolytics-actor-id" content="5924123" /><meta name="octolytics-actor-login" content="guilhermepo2" /><meta name="octolytics-actor-hash" content="6151614706e103a0668b6c2d103978f2aee151a69c68d7027262da882368a8ac" />

  <meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />

  



  <meta name="optimizely-datafile" content="{&quot;version&quot;: &quot;4&quot;, &quot;rollouts&quot;: [], &quot;typedAudiences&quot;: [], &quot;anonymizeIP&quot;: true, &quot;projectId&quot;: &quot;16737760170&quot;, &quot;variables&quot;: [], &quot;featureFlags&quot;: [], &quot;experiments&quot;: [{&quot;status&quot;: &quot;Running&quot;, &quot;audienceIds&quot;: [], &quot;variations&quot;: [{&quot;variables&quot;: [], &quot;id&quot;: &quot;20438636352&quot;, &quot;key&quot;: &quot;control&quot;}, {&quot;variables&quot;: [], &quot;id&quot;: &quot;20484957397&quot;, &quot;key&quot;: &quot;treatment&quot;}], &quot;id&quot;: &quot;20479227424&quot;, &quot;key&quot;: &quot;growth_ghec_onboarding_experience&quot;, &quot;layerId&quot;: &quot;20467848595&quot;, &quot;trafficAllocation&quot;: [{&quot;entityId&quot;: &quot;20484957397&quot;, &quot;endOfRange&quot;: 1000}, {&quot;entityId&quot;: &quot;20484957397&quot;, &quot;endOfRange&quot;: 3000}, {&quot;entityId&quot;: &quot;20484957397&quot;, &quot;endOfRange&quot;: 5000}, {&quot;entityId&quot;: &quot;20484957397&quot;, &quot;endOfRange&quot;: 6000}, {&quot;entityId&quot;: &quot;20484957397&quot;, &quot;endOfRange&quot;: 8000}, {&quot;entityId&quot;: &quot;20484957397&quot;, &quot;endOfRange&quot;: 10000}], &quot;forcedVariations&quot;: {&quot;85e2238ce2b9074907d7a3d91d6feeae&quot;: &quot;control&quot;}}, {&quot;status&quot;: &quot;Running&quot;, &quot;audienceIds&quot;: [], &quot;variations&quot;: [{&quot;variables&quot;: [], &quot;id&quot;: &quot;20667381018&quot;, &quot;key&quot;: &quot;control&quot;}, {&quot;variables&quot;: [], &quot;id&quot;: &quot;20680930759&quot;, &quot;key&quot;: &quot;treatment&quot;}], &quot;id&quot;: &quot;20652570897&quot;, &quot;key&quot;: &quot;project_genesis&quot;, &quot;layerId&quot;: &quot;20672300363&quot;, &quot;trafficAllocation&quot;: [{&quot;entityId&quot;: &quot;20667381018&quot;, &quot;endOfRange&quot;: 5000}, {&quot;entityId&quot;: &quot;20680930759&quot;, &quot;endOfRange&quot;: 10000}], &quot;forcedVariations&quot;: {&quot;83356e17066d336d1803024138ecb683&quot;: &quot;treatment&quot;, &quot;18e31c8a9b2271332466133162a4aa0d&quot;: &quot;treatment&quot;, &quot;10f8ab3fbc5ebe989a36a05f79d48f32&quot;: &quot;treatment&quot;, &quot;1686089f6d540cd2deeaec60ee43ecf7&quot;: &quot;treatment&quot;}}], &quot;audiences&quot;: [{&quot;conditions&quot;: &quot;[\&quot;or\&quot;, {\&quot;match\&quot;: \&quot;exact\&quot;, \&quot;name\&quot;: \&quot;$opt_dummy_attribute\&quot;, \&quot;type\&quot;: \&quot;custom_attribute\&quot;, \&quot;value\&quot;: \&quot;$opt_dummy_value\&quot;}]&quot;, &quot;id&quot;: &quot;$opt_dummy_audience&quot;, &quot;name&quot;: &quot;Optimizely-Generated Audience for Backwards Compatibility&quot;}], &quot;groups&quot;: [], &quot;sdkKey&quot;: &quot;WTc6awnGuYDdG98CYRban&quot;, &quot;environmentKey&quot;: &quot;production&quot;, &quot;attributes&quot;: [{&quot;id&quot;: &quot;16822470375&quot;, &quot;key&quot;: &quot;user_id&quot;}, {&quot;id&quot;: &quot;17143601254&quot;, &quot;key&quot;: &quot;spammy&quot;}, {&quot;id&quot;: &quot;18175660309&quot;, &quot;key&quot;: &quot;organization_plan&quot;}, {&quot;id&quot;: &quot;18813001570&quot;, &quot;key&quot;: &quot;is_logged_in&quot;}, {&quot;id&quot;: &quot;19073851829&quot;, &quot;key&quot;: &quot;geo&quot;}, {&quot;id&quot;: &quot;20175462351&quot;, &quot;key&quot;: &quot;requestedCurrency&quot;}, {&quot;id&quot;: &quot;20785470195&quot;, &quot;key&quot;: &quot;country_code&quot;}], &quot;botFiltering&quot;: false, &quot;accountId&quot;: &quot;16737760170&quot;, &quot;events&quot;: [{&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;17911811441&quot;, &quot;key&quot;: &quot;hydro_click.dashboard.teacher_toolbox_cta&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18124116703&quot;, &quot;key&quot;: &quot;submit.organizations.complete_sign_up&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18145892387&quot;, &quot;key&quot;: &quot;no_metric.tracked_outside_of_optimizely&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18178755568&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.add_repo&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18180553241&quot;, &quot;key&quot;: &quot;submit.repository_imports.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18186103728&quot;, &quot;key&quot;: &quot;click.help.learn_more_about_repository_creation&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18188530140&quot;, &quot;key&quot;: &quot;test_event.do_not_use_in_production&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18191963644&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.transfer_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18195612788&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.import_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18210945499&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.invite_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18211063248&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.create_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18215721889&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.update_profile&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18224360785&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.dismiss&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18234832286&quot;, &quot;key&quot;: &quot;submit.organization_activation.complete&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18252392383&quot;, &quot;key&quot;: &quot;submit.org_repository.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18257551537&quot;, &quot;key&quot;: &quot;submit.org_member_invitation.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18259522260&quot;, &quot;key&quot;: &quot;submit.organization_profile.update&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18564603625&quot;, &quot;key&quot;: &quot;view.classroom_select_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18568612016&quot;, &quot;key&quot;: &quot;click.classroom_sign_in_click&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18572592540&quot;, &quot;key&quot;: &quot;view.classroom_name&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18574203855&quot;, &quot;key&quot;: &quot;click.classroom_create_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18582053415&quot;, &quot;key&quot;: &quot;click.classroom_select_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18589463420&quot;, &quot;key&quot;: &quot;click.classroom_create_classroom&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18591323364&quot;, &quot;key&quot;: &quot;click.classroom_create_first_classroom&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18591652321&quot;, &quot;key&quot;: &quot;click.classroom_grant_access&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18607131425&quot;, &quot;key&quot;: &quot;view.classroom_creation&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;18831680583&quot;, &quot;key&quot;: &quot;upgrade_account_plan&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19064064515&quot;, &quot;key&quot;: &quot;click.signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19075373687&quot;, &quot;key&quot;: &quot;click.view_account_billing_page&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19077355841&quot;, &quot;key&quot;: &quot;click.dismiss_signup_prompt&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19079713938&quot;, &quot;key&quot;: &quot;click.contact_sales&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19120963070&quot;, &quot;key&quot;: &quot;click.compare_account_plans&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19151690317&quot;, &quot;key&quot;: &quot;click.upgrade_account_cta&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19424193129&quot;, &quot;key&quot;: &quot;click.open_account_switcher&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19520330825&quot;, &quot;key&quot;: &quot;click.visit_account_profile&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19540970635&quot;, &quot;key&quot;: &quot;click.switch_account_context&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19730198868&quot;, &quot;key&quot;: &quot;submit.homepage_signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19820830627&quot;, &quot;key&quot;: &quot;click.homepage_signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19988571001&quot;, &quot;key&quot;: &quot;click.create_enterprise_trial&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20036538294&quot;, &quot;key&quot;: &quot;click.create_organization_team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20040653299&quot;, &quot;key&quot;: &quot;click.input_enterprise_trial_form&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20062030003&quot;, &quot;key&quot;: &quot;click.continue_with_team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20068947153&quot;, &quot;key&quot;: &quot;click.create_organization_free&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20086636658&quot;, &quot;key&quot;: &quot;click.signup_continue.username&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20091648988&quot;, &quot;key&quot;: &quot;click.signup_continue.create_account&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20103637615&quot;, &quot;key&quot;: &quot;click.signup_continue.email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20111574253&quot;, &quot;key&quot;: &quot;click.signup_continue.password&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20120044111&quot;, &quot;key&quot;: &quot;view.pricing_page&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20152062109&quot;, &quot;key&quot;: &quot;submit.create_account&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20165800992&quot;, &quot;key&quot;: &quot;submit.upgrade_payment_form&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20171520319&quot;, &quot;key&quot;: &quot;submit.create_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20222645674&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.discuss_your_needs&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20227443657&quot;, &quot;key&quot;: &quot;submit.verify_primary_user_email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20234607160&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.try_enterprise&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20238175784&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20239847212&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.continue_free&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20251097193&quot;, &quot;key&quot;: &quot;recommended_plan&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20438619534&quot;, &quot;key&quot;: &quot;click.pricing_calculator.1_member&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20456699683&quot;, &quot;key&quot;: &quot;click.pricing_calculator.15_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20467868331&quot;, &quot;key&quot;: &quot;click.pricing_calculator.10_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20476267432&quot;, &quot;key&quot;: &quot;click.trial_days_remaining&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20476357660&quot;, &quot;key&quot;: &quot;click.discover_feature&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20479287901&quot;, &quot;key&quot;: &quot;click.pricing_calculator.custom_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20481107083&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.apply_teacher_benefits&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20483089392&quot;, &quot;key&quot;: &quot;click.pricing_calculator.5_members&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;, &quot;20652570897&quot;], &quot;id&quot;: &quot;20484283944&quot;, &quot;key&quot;: &quot;click.onboarding_task&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20484996281&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.apply_student_benefits&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20486713726&quot;, &quot;key&quot;: &quot;click.onboarding_task_breadcrumb&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20490791319&quot;, &quot;key&quot;: &quot;click.upgrade_to_enterprise&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20491786766&quot;, &quot;key&quot;: &quot;click.talk_to_us&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20494144087&quot;, &quot;key&quot;: &quot;click.dismiss_enterprise_trial&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;, &quot;20652570897&quot;], &quot;id&quot;: &quot;20499722759&quot;, &quot;key&quot;: &quot;completed_all_tasks&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;, &quot;20652570897&quot;], &quot;id&quot;: &quot;20500710104&quot;, &quot;key&quot;: &quot;completed_onboarding_tasks&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20513160672&quot;, &quot;key&quot;: &quot;click.read_doc&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20516196762&quot;, &quot;key&quot;: &quot;actions_enabled&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20518980986&quot;, &quot;key&quot;: &quot;click.dismiss_trial_banner&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20535446721&quot;, &quot;key&quot;: &quot;click.issue_actions_prompt.dismiss_prompt&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20557002247&quot;, &quot;key&quot;: &quot;click.issue_actions_prompt.setup_workflow&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20595070227&quot;, &quot;key&quot;: &quot;click.pull_request_setup_workflow&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20626600314&quot;, &quot;key&quot;: &quot;click.seats_input&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20642310305&quot;, &quot;key&quot;: &quot;click.decrease_seats_number&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20662990045&quot;, &quot;key&quot;: &quot;click.increase_seats_number&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20679620969&quot;, &quot;key&quot;: &quot;click.public_product_roadmap&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20761240940&quot;, &quot;key&quot;: &quot;click.dismiss_survey_banner&quot;}, {&quot;experimentIds&quot;: [&quot;20479227424&quot;], &quot;id&quot;: &quot;20767210721&quot;, &quot;key&quot;: &quot;click.take_survey&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20795281201&quot;, &quot;key&quot;: &quot;click.archive_list&quot;}], &quot;revision&quot;: &quot;974&quot;}" />
  <!-- To prevent page flashing, the optimizely JS needs to be loaded in the
    <head> tag before the DOM renders -->
  <script crossorigin="anonymous" defer="defer" integrity="sha512-stPGyO+GUOomTBqs1Y5EJnkYCf8cb/wFveUz/ncDr9XaP9olIwZerGQr4wFA3nBNqhbaqHsYbf0NfWJZ6XHjrg==" type="application/javascript" src="https://github.githubassets.com/assets/optimizely-b2d3c6c8.js"></script>



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="guilhermepo2">


      <meta name="expected-hostname" content="github.com">

      <meta name="js-proxy-site-detection-payload" content="ODkzYzEwMDBlNzljMzczNWUwYzkwNDZlZDdmY2RhYmRmMDc4ZWE5ZjkzMGYxOTVjNzEwMjEwM2NhMzkwODY3N3x7InJlbW90ZV9hZGRyZXNzIjoiNjguMjA1LjIyNS4xNDQiLCJyZXF1ZXN0X2lkIjoiRDFGNDo2MkIzOjYzRUMxOTpBNzU5RkY6NjE5OTY1QUYiLCJ0aW1lc3RhbXAiOjE2Mzc0NDI5OTYsImhvc3QiOiJnaXRodWIuY29tIn0=">
      <meta name="keyboard-shortcuts-preference" content="all">
      <script type="application/json" id="memex_keyboard_shortcuts_preference">"all"</script>

    <meta name="enabled-features" content="ACTIONS_CALLABLE_WORKFLOWS,ACTIONS_TYPED_INPUTS,MARKETPLACE_PENDING_INSTALLATIONS,FILE_UPLOAD_CURSOR_POSITION,LINKIFY_SELECTED_TEXT_ON_URL_PASTE,PRESENCE_IDLE">

  <meta http-equiv="x-pjax-version" content="dc9de6850ae203d8690cb956d89e61e9ee14e559d8b5ac37aaf160f66699e7e0">
  <meta http-equiv="x-pjax-csp-version" content="9ea82e8060ac9d44365bfa193918b70ed58abd9413362ba412abb161b3a8d1b6">
  <meta http-equiv="x-pjax-css-version" content="229cdb98cd7fabf6f35a529008b3bc98da22d14236c950a4ec0bed7b1223270a">
  <meta http-equiv="x-pjax-js-version" content="59fc84afd383f86f05cde6c0b40f03d4a1eb7bdedf9071387a7c9e54dc11667f">
  

    
  <meta name="go-import" content="github.com/nothings/stb git https://github.com/nothings/stb.git">

  <meta name="octolytics-dimension-user_id" content="7525026" /><meta name="octolytics-dimension-user_login" content="nothings" /><meta name="octolytics-dimension-repository_id" content="20159867" /><meta name="octolytics-dimension-repository_nwo" content="nothings/stb" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="20159867" /><meta name="octolytics-dimension-repository_network_root_nwo" content="nothings/stb" />



    <link rel="canonical" href="https://github.com/nothings/stb/blob/master/stb_image.h" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <meta name="browser-optimizely-client-errors-url" content="https://api.github.com/_private/browser/optimizely_client/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="alternate icon" class="js-site-favicon" type="image/png" href="https://github.githubassets.com/favicons/favicon.png">
  <link rel="icon" class="js-site-favicon" type="image/svg+xml" href="https://github.githubassets.com/favicons/favicon.svg">

<meta name="theme-color" content="#1e2327">
<meta name="color-scheme" content="dark light" />


  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production page-responsive page-blob" style="word-wrap: break-word;">
    

    <div class="position-relative js-header-wrapper ">
      <a href="#start-of-content" class="p-3 color-bg-accent-emphasis color-text-white show-on-focus js-skip-to-content">Skip to content</a>
      <span data-view-component="true" class="progress-pjax-loader js-pjax-loader-bar Progress position-fixed width-full">
    <span style="width: 0%;" data-view-component="true" class="Progress-item progress-pjax-loader-bar color-bg-info-inverse"></span>
</span>      
      


        <script crossorigin="anonymous" defer="defer" integrity="sha512-18ADRS+iEo2KaRjmRMSvy59l6oUJtsMgahabrGMf45z3P3eLyMrmL+SVo7GMGifQdat4j82JSIRy8bkzkCFSzg==" type="application/javascript" src="https://github.githubassets.com/assets/command-palette-d7c00345.js"></script>

            <header class="Header js-details-container Details px-3 px-md-4 px-lg-5 flex-wrap flex-md-nowrap" role="banner" >
    <div class="Header-item mt-n1 mb-n1  d-none d-md-flex">
      <a
  class="Header-link "
  href="https://github.com/"
  data-hotkey="g d"
  aria-label="Homepage "
  data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to dashboard&quot;,&quot;label&quot;:&quot;icon:logo&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="23a2bf0742738247d29a2e5428b6e31fe2eb4b4382765478498bdc4beec4712b" data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to dashboard&quot;,&quot;label&quot;:&quot;icon:logo&quot;}"
>
  <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github v-align-middle">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>

    </div>

    <div class="Header-item d-md-none">
      <button aria-label="Toggle navigation" aria-expanded="false" type="button" data-view-component="true" class="Header-link js-details-target btn-link">
  
  
        <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-three-bars">
    <path fill-rule="evenodd" d="M1 2.75A.75.75 0 011.75 2h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 2.75zm0 5A.75.75 0 011.75 7h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 7.75zM1.75 12a.75.75 0 100 1.5h12.5a.75.75 0 100-1.5H1.75z"></path>
</svg>

  

</button>    </div>

    <div class="Header-item Header-item--full flex-column flex-md-row width-full flex-order-2 flex-md-order-none mr-0 mr-md-3 mt-3 mt-md-0 Details-content--hidden-not-important d-md-flex">
          



<div class="header-search flex-auto js-site-search position-relative flex-self-stretch flex-md-self-auto mb-3 mb-md-0 mr-0 mr-md-3 scoped-search site-scoped-search js-jump-to"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="20159867" data-scoped-search-url="/nothings/stb/search" data-owner-scoped-search-url="/users/nothings/search" data-unscoped-search-url="/search" action="/nothings/stb/search" accept-charset="UTF-8" method="get">
      <label class="form-control input-sm header-search-wrapper p-0 js-chromeless-input-container header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey=s,/
          name="q"
          data-test-selector="nav-search-input"
          placeholder="Search or jump to…"
          data-unscoped-placeholder="Search or jump to…"
          data-scoped-placeholder="Search or jump to…"
          autocapitalize="off"
          role="combobox"
          aria-haspopup="listbox"
          aria-expanded="false"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search or jump to…"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations"
          spellcheck="false"
          autocomplete="off"
        >
        <input type="hidden" value="HF4Z580UkwHgDBYAh9U0S77fujJMO/ZCcLKJRpm6JFKQ+Vbo/uK6eotE8kQwPIfZ88vhQ2H3JIHuk2CF5zW2Hg==" data-csrf="true" class="js-data-jump-to-suggestions-path-csrf" />
        <input type="hidden" class="js-site-search-type-field" name="type" >
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="20" aria-hidden="true" class="mr-1 header-search-key-slash"><path fill="none" stroke="#979A9C" opacity=".4" d="M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z"></path><path fill="#979A9C" d="M11.8 6L8 15.1h-.9L10.8 6h1z"></path></svg>


          <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
            
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="suggestion">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="color-fg-muted">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="scoped_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-owner-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="owner_scoped_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this user">
        In this user
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="global_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


    <li class="d-flex flex-justify-center flex-items-center p-0 f5 js-jump-to-suggestion">
      <span role="status">
  <span class="sr-only">Loading</span>
  <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="m-3 anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

    </li>
</ul>

          </div>
      </label>
</form>  </div>
</div>

        <nav class="d-flex flex-column flex-md-row flex-self-stretch flex-md-self-auto" aria-label="Global">
      <a class="Header-link py-md-3 d-block d-md-none py-2 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:dashboard:user" aria-label="Dashboard" href="/dashboard">
        Dashboard
</a>
    <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
        Pull<span class="d-inline d-md-none d-lg-inline"> request</span>s
</a>
    <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">
      Issues
</a>
      <div class="d-flex position-relative">
        <a class="js-selected-navigation-item Header-link flex-auto mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-octo-click="marketplace_click" data-octo-dimensions="location:nav_bar" data-selected-links=" /marketplace" href="/marketplace">
          Marketplace
</a>      </div>

    <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
      Explore
</a>
    <a class="js-selected-navigation-item Header-link d-block d-md-none py-2 py-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:workspaces context:user" data-selected-links="/codespaces /codespaces" href="/codespaces">
      Codespaces
</a>
      <a class="js-selected-navigation-item Header-link d-block d-md-none py-2 py-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:Sponsors" data-hydro-click="{&quot;event_type&quot;:&quot;sponsors.button_click&quot;,&quot;payload&quot;:{&quot;button&quot;:&quot;HEADER_SPONSORS_DASHBOARD&quot;,&quot;sponsorable_login&quot;:&quot;guilhermepo2&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="dcc6a0b9407c1ada2f813643d7e067f8c027238de6c5592367a96fdfbde60a04" data-selected-links=" /sponsors/accounts" href="/sponsors/accounts">Sponsors</a>

    <a class="Header-link d-block d-md-none mr-0 mr-md-3 py-2 py-md-3 border-top border-md-top-0 border-white-fade" href="/settings/profile">
      Settings
</a>
    <a class="Header-link d-block d-md-none mr-0 mr-md-3 py-2 py-md-3 border-top border-md-top-0 border-white-fade" href="/guilhermepo2">
      <img class="avatar avatar-user" loading="lazy" decoding="async" src="https://avatars.githubusercontent.com/u/5924123?s=40&amp;v=4" width="20" height="20" alt="@guilhermepo2" />
      guilhermepo2
</a>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/logout" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="9GngOsETTIiWfPOI46S8YHsmkecDPGrhZbWiD2SkwYLs9/wPWEFdxmm4TTwXca+3ndZt6pEVVbx52k1wh+LZrA==" />
      <button
        type="submit"
        class="Header-link mr-0 mr-md-3 py-2 py-md-3 border-top border-md-top-0 border-white-fade d-md-none btn-link d-block width-full text-left"
        style="padding-left: 2px;"
        data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;sign out&quot;,&quot;label&quot;:&quot;icon:logout&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="f6227eb24f6425b14a1aca77ef34c4caa3bdf277f879d5bc6c8a1dfcea092bb0" data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;sign out&quot;,&quot;label&quot;:&quot;icon:logout&quot;}"
      >
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-sign-out v-align-middle">
    <path fill-rule="evenodd" d="M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm10.44 4.5H6.75a.75.75 0 000 1.5h5.69l-1.97 1.97a.75.75 0 101.06 1.06l3.25-3.25a.75.75 0 000-1.06l-3.25-3.25a.75.75 0 10-1.06 1.06l1.97 1.97z"></path>
</svg>
        Sign out
      </button>
</form></nav>

    </div>

    <div class="Header-item Header-item--full flex-justify-center d-md-none position-relative">
        <a
  class="Header-link "
  href="https://github.com/"
  data-hotkey="g d"
  aria-label="Homepage "
  data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to dashboard&quot;,&quot;label&quot;:&quot;icon:logo&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="23a2bf0742738247d29a2e5428b6e31fe2eb4b4382765478498bdc4beec4712b" data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to dashboard&quot;,&quot;label&quot;:&quot;icon:logo&quot;}"
>
  <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github v-align-middle">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>

    </div>

    <div class="Header-item mr-0 mr-md-3 flex-order-1 flex-md-order-none">
        


      <notification-indicator
        class="js-socket-channel"
        data-test-selector="notifications-indicator"
        data-channel="eyJjIjoibm90aWZpY2F0aW9uLWNoYW5nZWQ6NTkyNDEyMyIsInQiOjE2Mzc0NDI5OTZ9--3fed9267124f7a4bf06354e46a5fe1a45708772593c718bbe3d82d388a5e2296">
        <a href="/notifications"
          class="Header-link notification-indicator position-relative tooltipped tooltipped-sw"
          
          aria-label="You have no unread notifications"
          data-hotkey="g n"
          data-ga-click="Header, go to notifications, icon:read"
          data-target="notification-indicator.link">
          <span class="mail-status  " data-target="notification-indicator.modifier"></span>
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell">
    <path d="M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path><path fill-rule="evenodd" d="M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z"></path>
</svg>
        </a>
      </notification-indicator>

    </div>


    <div class="Header-item position-relative d-none d-md-flex">
        <details class="details-overlay details-reset">
  <summary
    class="Header-link"
    aria-label="Create new…"
    data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;create new&quot;,&quot;label&quot;:&quot;icon:add&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="29ce72c93df6d9d94349cb9b19e6a85aff7d549d246817ef6e63efcdead73a67" data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;create new&quot;,&quot;label&quot;:&quot;icon:add&quot;}"
  >
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-plus">
    <path fill-rule="evenodd" d="M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z"></path>
</svg> <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw">
    
<a role="menuitem" class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a role="menuitem" class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a role="menuitem" class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a role="menuitem" class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  </details-menu>
</details>

    </div>

    <div class="Header-item position-relative mr-0 d-none d-md-flex">
        
  <details class="details-overlay details-reset js-feature-preview-indicator-container" data-feature-preview-indicator-src="/users/guilhermepo2/feature_preview/indicator_check">

  <summary
    class="Header-link"
    aria-label="View profile and more"
    data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;show menu&quot;,&quot;label&quot;:&quot;icon:avatar&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="4dd7da04f4e0ae68057c83bf68c0c32403aae5ef16d8cba1f1e10fafb5a23f4d" data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;show menu&quot;,&quot;label&quot;:&quot;icon:avatar&quot;}"
  >
    <img src="https://avatars.githubusercontent.com/u/5924123?s=40&amp;v=4" alt="@guilhermepo2" size="20" height="20" width="20" data-view-component="true" class="avatar avatar-small circle" />
      <span class="feature-preview-indicator js-feature-preview-indicator" style="top: 1px;" hidden></span>
    <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw" style="width: 180px" 
      src="/users/5924123/menu" preload>
      <include-fragment>
        <p class="text-center mt-3" data-hide-on-error>
          <span role="status">
  <span class="sr-only">Loading</span>
  <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

        </p>
        <p class="ml-1 mb-2 mt-2 color-fg-default" data-show-on-error>
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
          Sorry, something went wrong.
        </p>
      </include-fragment>
  </details-menu>
</details>

    </div>
</header>

            
    </div>

  <div id="start-of-content" class="show-on-focus"></div>






    <div data-pjax-replace id="js-flash-container">


  <template class="js-flash-template">
    <div class="flash flash-full  {{ className }}">
  <div class=" px-2" >
    <button class="flash-close js-flash-close" type="button" aria-label="Dismiss this message">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
    </button>
    
      <div>{{ message }}</div>

  </div>
</div>
  </template>
</div>


    

  <include-fragment class="js-notification-shelf-include-fragment" data-base-src="https://github.com/notifications/beta/shelf"></include-fragment>




      <details class="details-reset details-overlay details-overlay-dark js-command-palette-dialog">
  <summary class="command-palette-details-summary" aria-label="command palette trigger">
  </summary>
  <details-dialog class="command-palette-details-dialog d-flex flex-column flex-justify-center height-fit">
    <command-palette
      class="command-palette color-bg-default rounded-3"
      data-return-to=/nothings/stb/blob/master/stb_image.h
      data-user-id="5924123"
      >
      <input type="hidden" value="LfPQ1pGRQ+5RprCbqSpLkiKm0k0Fw5bfjMK0h37oBA8r71F9fnj+DEImJpf+Hfm1Dlo2imSIK/39V9yMIAH6Ng==" data-csrf="true" class="js-graphql-csrf" />
      <iframe class="d-none js-command-palette-commands" sandbox="allow-scripts allow-same-origin" srcdoc="<script crossorigin=&quot;anonymous&quot; defer=&quot;defer&quot; integrity=&quot;sha512-2Jz3lq/Gk0f8RePMFf+bUCfw6LwZ3nXfh3AQmMFOUj5cIW/rCeZcWRFO/q0l00bbLMcdXkpDj6KvP9Ny2qh8QA==&quot; type=&quot;application/javascript&quot; src=&quot;https://github.githubassets.com/assets/command-runner-d89cf796.js&quot;></script>
" aria-hidden="true" data-url="https://github.com"></iframe>
      <input type="hidden" name="color-mode-path" id="color-mode-path" value="/settings/appearance/color_mode" class="js-color-mode-path" autocomplete="off" />
      <input type="hidden" value="gAU8a47aR86g1caz4AcjRPPI5MYEO/dimZ66ZEzMj1Jv6+e1l98irYh6pSTUSirKVJNDnHxB7YniarMayROC2w==" data-csrf="true" class="js-color-mode-csrf" />

        <command-palette-mode
          data-char="#"
            data-scope-types="[&quot;&quot;]"
            data-placeholder="Search issues and pull requests"
        ></command-palette-mode>
        <command-palette-mode
          data-char="#"
            data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-placeholder="Search issues, pull requests, discussions, and projects"
        ></command-palette-mode>
        <command-palette-mode
          data-char="!"
            data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-placeholder="Search projects"
        ></command-palette-mode>
        <command-palette-mode
          data-char="@"
            data-scope-types="[&quot;&quot;]"
            data-placeholder="Search or jump to a user, organization, or repository"
        ></command-palette-mode>
        <command-palette-mode
          data-char="@"
            data-scope-types="[&quot;owner&quot;]"
            data-placeholder="Search or jump to a repository"
        ></command-palette-mode>
        <command-palette-mode
          data-char="/"
            data-scope-types="[&quot;repository&quot;]"
            data-placeholder="Search files"
        ></command-palette-mode>
        <command-palette-mode
          data-char="?"
        ></command-palette-mode>
        <command-palette-mode
          data-char="&gt;"
            data-placeholder="Run a command"
        ></command-palette-mode>
        <command-palette-mode
          data-char=""
            data-scope-types="[&quot;owner&quot;]"
            data-placeholder="Search or jump to..."
        ></command-palette-mode>
      <command-palette-mode
        class="js-command-palette-default-mode"
        data-char=""
        data-placeholder="Search or jump to..."
      ></command-palette-mode>

      <command-palette-input placeholder="Search or jump to..."
      >
          <command-palette-scope>
              <command-palette-token
                data-text="nothings"
                data-id="MDQ6VXNlcjc1MjUwMjY="
                data-type="owner"
                data-value="nothings"
                data-targets="command-palette-scope.tokens"
                >nothings</command-palette-token>
              <command-palette-token
                data-text="/stb"
                data-id="MDEwOlJlcG9zaXRvcnkyMDE1OTg2Nw=="
                data-type="repository"
                data-value="stb"
                data-targets="command-palette-scope.tokens"
                >/stb</command-palette-token>
          </command-palette-scope>
      </command-palette-input>

      <command-palette-item-stack id="command-palette-item-stack" class="item-stack-transition-height"  role="listbox" aria-label="Command palette results">
        <command-palette-tip class="color-fg-muted f6 px-3 py-1 my-2" data-type="" data-mode="" data-value="">
          Type <code class="p-1 color-bg-subtle rounded-1">#</code> for issues and pull requests, <code class="p-1 color-bg-subtle rounded-1">></code> for commands, and <code class="p-1 color-bg-subtle rounded-1">?</code> for help
        </command-palette-tip>
        <command-palette-tip class="color-fg-muted f6 px-3 py-1 my-2" data-type="owner" data-mode="" data-value="">
          Type <code class="p-1 color-bg-subtle rounded-1">#</code> for issues, pull requests, and projects, <code class="p-1 color-bg-subtle rounded-1">></code> for commands, and <code class="p-1 color-bg-subtle rounded-1">?</code> for help
        </command-palette-tip>
        <command-palette-tip class="color-fg-muted f6 px-3 py-1 my-2" data-type="repository" data-mode="" data-value="">
          Type <code class="p-1 color-bg-subtle rounded-1">#</code> for issues, pull requests, and projects, <code class="p-1 color-bg-subtle rounded-1">/</code> for files, and <code class="p-1 color-bg-subtle rounded-1">></code> for commands
        </command-palette-tip>
        <command-palette-tip class="mx-3 my-2 flash flash-error d-flex flex-items-center" data-on-error>
          <div>
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
          </div>
          <div class="px-2">
            We’ve encountered an error and some results aren't available at this time. Type a new search or try again later.
          </div>
        </command-palette-tip>
        <command-palette-tip class="h4 color-fg-default pl-3 pb-2 pt-3" data-on-empty data-match-mode="[^?]|^$">
          No results matched your search
        </command-palette-tip>

          <command-palette-item-group
            data-group-id="top"
            data-group-title="Top result"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="commands"
            data-group-title="Commands"
            data-group-hint="Type &gt; to filter"
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="files"
            data-group-title="Files"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="pages"
            data-group-title="Pages"
            data-group-hint=""
            data-group-limits="{&quot;repository&quot;:10}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="access_policies"
            data-group-title="Access Policies"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="organizations"
            data-group-title="Organizations"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="repositories"
            data-group-title="Repositories"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="references"
            data-group-title="Issues, pull requests, and discussions"
            data-group-hint="Type # to filter"
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="teams"
            data-group-title="Teams"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="users"
            data-group-title="Users"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="projects"
            data-group-title="Projects"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="footer"
            data-group-title="Footer"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="modes_help"
            data-group-title="Modes"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
          <command-palette-item-group
            data-group-id="filters_help"
            data-group-title="Use filters in issues, pull requests, discussions, and projects"
            data-group-hint=""
            data-group-limits="{}"
            data-targets="command-palette-item-stack.groups"
          >
          </command-palette-item-group>
      </command-palette-item-stack>

      <div class="js-command-local-provider-octicons" hidden>
          <div data-local-provider-octicon-id="arrow-right-color-fg-muted">
            <svg height="16" class="octicon octicon-arrow-right color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="arrow-right-color-fg-default">
            <svg height="16" class="octicon octicon-arrow-right color-fg-default" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="codespaces-color-fg-muted">
            <svg height="16" class="octicon octicon-codespaces color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 1.75C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 01-1.75 1.75h-8.5A1.75 1.75 0 012 6.75v-5zm1.75-.25a.25.25 0 00-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25v-5a.25.25 0 00-.25-.25h-8.5zM0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25v-3zM1.75 11a.25.25 0 00-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-3a.25.25 0 00-.25-.25H1.75z"></path><path fill-rule="evenodd" d="M3 12.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zm4 0a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="copy-color-fg-muted">
            <svg height="16" class="octicon octicon-copy color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="dash-color-fg-muted">
            <svg height="16" class="octicon octicon-dash color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 7.75A.75.75 0 012.75 7h10a.75.75 0 010 1.5h-10A.75.75 0 012 7.75z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="file-color-fg-muted">
            <svg height="16" class="octicon octicon-file color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M3.75 1.5a.25.25 0 00-.25.25v11.5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25V6H9.75A1.75 1.75 0 018 4.25V1.5H3.75zm5.75.56v2.19c0 .138.112.25.25.25h2.19L9.5 2.06zM2 1.75C2 .784 2.784 0 3.75 0h5.086c.464 0 .909.184 1.237.513l3.414 3.414c.329.328.513.773.513 1.237v8.086A1.75 1.75 0 0112.25 15h-8.5A1.75 1.75 0 012 13.25V1.75z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="lock-color-fg-muted">
            <svg height="16" class="octicon octicon-lock color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 4v2h-.25A1.75 1.75 0 002 7.75v5.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-5.5A1.75 1.75 0 0012.25 6H12V4a4 4 0 10-8 0zm6.5 2V4a2.5 2.5 0 00-5 0v2h5zM12 7.5h.25a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-5.5a.25.25 0 01.25-.25H12z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="moon-color-fg-muted">
            <svg height="16" class="octicon octicon-moon color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.598 1.591a.75.75 0 01.785-.175 7 7 0 11-8.967 8.967.75.75 0 01.961-.96 5.5 5.5 0 007.046-7.046.75.75 0 01.175-.786zm1.616 1.945a7 7 0 01-7.678 7.678 5.5 5.5 0 107.678-7.678z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="person-color-fg-muted">
            <svg height="16" class="octicon octicon-person color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M10.5 5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm.061 3.073a4 4 0 10-5.123 0 6.004 6.004 0 00-3.431 5.142.75.75 0 001.498.07 4.5 4.5 0 018.99 0 .75.75 0 101.498-.07 6.005 6.005 0 00-3.432-5.142z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="pencil-color-fg-muted">
            <svg height="16" class="octicon octicon-pencil color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="issue-opened-open">
            <svg height="16" class="octicon octicon-issue-opened open" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path><path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="git-pull-request-draft-color-fg-muted">
            <svg height="16" class="octicon octicon-git-pull-request-draft color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M2.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.25 1a2.25 2.25 0 00-.75 4.372v5.256a2.251 2.251 0 101.5 0V5.372A2.25 2.25 0 003.25 1zm0 11a.75.75 0 100 1.5.75.75 0 000-1.5zm9.5 3a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5zm0-3a.75.75 0 100 1.5.75.75 0 000-1.5z"></path><path d="M14 7.5a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zm0-4.25a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="search-color-fg-muted">
            <svg height="16" class="octicon octicon-search color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="sun-color-fg-muted">
            <svg height="16" class="octicon octicon-sun color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 10.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM8 12a4 4 0 100-8 4 4 0 000 8zM8 0a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0V.75A.75.75 0 018 0zm0 13a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 018 13zM2.343 2.343a.75.75 0 011.061 0l1.06 1.061a.75.75 0 01-1.06 1.06l-1.06-1.06a.75.75 0 010-1.06zm9.193 9.193a.75.75 0 011.06 0l1.061 1.06a.75.75 0 01-1.06 1.061l-1.061-1.06a.75.75 0 010-1.061zM16 8a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 0116 8zM3 8a.75.75 0 01-.75.75H.75a.75.75 0 010-1.5h1.5A.75.75 0 013 8zm10.657-5.657a.75.75 0 010 1.061l-1.061 1.06a.75.75 0 11-1.06-1.06l1.06-1.06a.75.75 0 011.06 0zm-9.193 9.193a.75.75 0 010 1.06l-1.06 1.061a.75.75 0 11-1.061-1.06l1.06-1.061a.75.75 0 011.061 0z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="sync-color-fg-muted">
            <svg height="16" class="octicon octicon-sync color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.5a5.487 5.487 0 00-4.131 1.869l1.204 1.204A.25.25 0 014.896 6H1.25A.25.25 0 011 5.75V2.104a.25.25 0 01.427-.177l1.38 1.38A7.001 7.001 0 0114.95 7.16a.75.75 0 11-1.49.178A5.501 5.501 0 008 2.5zM1.705 8.005a.75.75 0 01.834.656 5.501 5.501 0 009.592 2.97l-1.204-1.204a.25.25 0 01.177-.427h3.646a.25.25 0 01.25.25v3.646a.25.25 0 01-.427.177l-1.38-1.38A7.001 7.001 0 011.05 8.84a.75.75 0 01.656-.834z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="trash-color-fg-muted">
            <svg height="16" class="octicon octicon-trash color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="key-color-fg-muted">
            <svg height="16" class="octicon octicon-key color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M6.5 5.5a4 4 0 112.731 3.795.75.75 0 00-.768.18L7.44 10.5H6.25a.75.75 0 00-.75.75v1.19l-.06.06H4.25a.75.75 0 00-.75.75v1.19l-.06.06H1.75a.25.25 0 01-.25-.25v-1.69l5.024-5.023a.75.75 0 00.181-.768A3.995 3.995 0 016.5 5.5zm4-5.5a5.5 5.5 0 00-5.348 6.788L.22 11.72a.75.75 0 00-.22.53v2C0 15.216.784 16 1.75 16h2a.75.75 0 00.53-.22l.5-.5a.75.75 0 00.22-.53V14h.75a.75.75 0 00.53-.22l.5-.5a.75.75 0 00.22-.53V12h.75a.75.75 0 00.53-.22l.932-.932A5.5 5.5 0 1010.5 0zm.5 6a1 1 0 100-2 1 1 0 000 2z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="comment-discussion-color-fg-muted">
            <svg height="16" class="octicon octicon-comment-discussion color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 2.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-3.5a.75.75 0 00-.53.22L3.5 11.44V9.25a.75.75 0 00-.75-.75h-1a.25.25 0 01-.25-.25v-5.5zM1.75 1A1.75 1.75 0 000 2.75v5.5C0 9.216.784 10 1.75 10H2v1.543a1.457 1.457 0 002.487 1.03L7.061 10h3.189A1.75 1.75 0 0012 8.25v-5.5A1.75 1.75 0 0010.25 1h-8.5zM14.5 4.75a.25.25 0 00-.25-.25h-.5a.75.75 0 110-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0114.25 12H14v1.543a1.457 1.457 0 01-2.487 1.03L9.22 12.28a.75.75 0 111.06-1.06l2.22 2.22v-2.19a.75.75 0 01.75-.75h1a.25.25 0 00.25-.25v-5.5z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="bell-color-fg-muted">
            <svg height="16" class="octicon octicon-bell color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path d="M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path><path fill-rule="evenodd" d="M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z"></path></svg>
          </div>
          <div data-local-provider-octicon-id="bell-slash-color-fg-muted">
            <svg height="16" class="octicon octicon-bell-slash color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1.5c-.997 0-1.895.416-2.534 1.086A.75.75 0 014.38 1.55 5 5 0 0113 5v2.373a.75.75 0 01-1.5 0V5A3.5 3.5 0 008 1.5zM4.182 4.31L1.19 2.143a.75.75 0 10-.88 1.214L3 5.305v2.642a.25.25 0 01-.042.139L1.255 10.64A1.518 1.518 0 002.518 13h11.108l1.184.857a.75.75 0 10.88-1.214l-1.375-.996a1.196 1.196 0 00-.013-.01L4.198 4.321a.733.733 0 00-.016-.011zm7.373 7.19L4.5 6.391v1.556c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01.015.015 0 00.005.012.017.017 0 00.006.004l.007.001h9.037zM8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path></svg>
          </div>
      </div>

      <command-palette-provider data-type="search-links" data-mode="*"></command-palette-provider>
      <command-palette-provider data-type="help" data-mode="*">
          <command-palette-help
            data-group="modes_help"
              data-prefix="#"
              data-scope-types="[&quot;&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>issues</strong> and <strong>pull requests</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">#</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="#"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>issues, pull requests, discussions,</strong> and <strong>projects</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">#</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="@"
              data-scope-types="[&quot;&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>organizations, repositories,</strong> and <strong>users</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">@</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="!"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>projects</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">!</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="/"
              data-scope-types="[&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>files</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">/</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="&gt;"
          >
            <span data-target="command-palette-help.titleElement">Activate <strong>command mode</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">&gt;</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# author:@me"
          >
            <span data-target="command-palette-help.titleElement">Search your issues, pull requests, and discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># author:@me</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# author:@me"
          >
            <span data-target="command-palette-help.titleElement">Search your issues, pull requests, and discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># author:@me</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:pr"
          >
            <span data-target="command-palette-help.titleElement">Filter to pull requests</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:pr</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:issue"
          >
            <span data-target="command-palette-help.titleElement">Filter to issues</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:issue</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:discussion"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Filter to discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:discussion</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:project"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Filter to projects</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:project</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:open"
          >
            <span data-target="command-palette-help.titleElement">Filter to open issues, pull requests, and discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:open</kbd>
              </span>
          </command-palette-help>
      </command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/commands"
            data-debounce="0"
            data-mode="&gt;"
              data-has-commands
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/jump_to_page_navigation"
            data-debounce="0"
            data-mode=""
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/issues"
            data-debounce="200"
            data-mode="#"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/issues"
            data-debounce="200"
            data-mode="#"
              data-scope-types="[&quot;&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/jump_to"
            data-debounce="200"
            data-mode="@"
              data-scope-types="[&quot;&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/jump_to"
            data-debounce="200"
            data-mode="@"
              data-scope-types="[&quot;owner&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/jump_to_members_only"
            data-debounce="200"
            data-mode=""
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/jump_to_members_only_prefetched"
            data-debounce="0"
            data-mode="@"
              data-scope-types="[&quot;&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/jump_to_members_only_prefetched"
            data-debounce="0"
            data-mode="@"
              data-scope-types="[&quot;owner&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/jump_to_members_only_prefetched"
            data-debounce="0"
            data-mode=""
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="files"
              data-src="/command_palette/files"
            data-debounce="0"
            data-mode="/"
              data-scope-types="[&quot;repository&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/discussions"
            data-debounce="200"
            data-mode="#"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/projects"
            data-debounce="200"
            data-mode="#"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/projects"
            data-debounce="200"
            data-mode="!"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/recent_issues"
            data-debounce="0"
            data-mode="#"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="prefetched"
              data-src="/command_palette/recent_issues"
            data-debounce="0"
            data-mode="#"
              data-scope-types="[&quot;&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/teams"
            data-debounce="200"
            data-mode="@"
              data-scope-types="[&quot;owner&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/teams"
            data-debounce="200"
            data-mode=""
              data-scope-types="[&quot;owner&quot;]"
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="remote"
              data-src="/command_palette/name_with_owner_repository"
            data-debounce="200"
            data-mode=""
            
            ></command-palette-provider>
          <command-palette-provider
            data-type="main-window-commands"
            data-debounce="0"
            data-mode="&gt;"
              data-has-commands
            
            ></command-palette-provider>
    </command-palette>
  </details-dialog>
</details>

<div class="position-fixed bottom-0 left-0 ml-5 mb-5 js-command-palette-toasts" style="z-index: 1000">
  <div hidden class="Toast Toast--loading">
    <span class="Toast-icon">
      <svg class="Toast--spinner" viewBox="0 0 32 32" width="18" height="18" aria-hidden="true">
        <path
          fill="#959da5"
          d="M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4"
        />
        <path fill="#ffffff" d="M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z"></path>
      </svg>
    </span>
    <span class="Toast-content"></span>
  </div>

  <div hidden class="anim-fade-in fast Toast Toast--error">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-stop">
    <path fill-rule="evenodd" d="M4.47.22A.75.75 0 015 0h6a.75.75 0 01.53.22l4.25 4.25c.141.14.22.331.22.53v6a.75.75 0 01-.22.53l-4.25 4.25A.75.75 0 0111 16H5a.75.75 0 01-.53-.22L.22 11.53A.75.75 0 010 11V5a.75.75 0 01.22-.53L4.47.22zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5H5.31zM8 4a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 018 4zm0 8a1 1 0 100-2 1 1 0 000 2z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>

  <div hidden class="anim-fade-in fast Toast Toast--warning">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>


  <div hidden class="anim-fade-in fast Toast Toast--success">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>

  <div hidden class="anim-fade-in fast Toast">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-info">
    <path fill-rule="evenodd" d="M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>
</div>

      <div hidden class="js-command-palette-pjax-meta-data" data-pjax-replace id="command-palette-pjax-meta-data"
    data-subject-id="MDEwOlJlcG9zaXRvcnkyMDE1OTg2Nw=="
    data-subject-type="Repository"
>
</div>


  <div
    class="application-main "
    data-commit-hovercards-enabled
    data-discussion-hovercards-enabled
    data-issue-and-pr-hovercards-enabled
  >
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main id="js-repo-pjax-container" data-pjax-container >
      

    






  <div id="repository-container-header" class="pt-3 hide-full-screen mb-5" style="background-color: var(--color-page-header-bg);" data-pjax-replace>

      <div class="d-flex mb-3 px-3 px-md-4 px-lg-5">

        <div class="flex-auto min-width-0 width-fit mr-3">
            <h1 class=" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo color-fg-muted mr-2">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
  <span class="author flex-self-stretch" itemprop="author">
    <a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/users/nothings/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings">nothings</a>
  </span>
  <span class="mx-1 flex-self-stretch color-fg-muted">/</span>
  <strong itemprop="name" class="mr-2 flex-self-stretch">
    <a data-pjax="#repo-content-pjax-container" href="/nothings/stb">stb</a>
  </strong>

  <span></span><span class="Label Label--secondary v-align-middle mr-1">Public</span>
</h1>

        </div>

          <ul class="pagehead-actions flex-shrink-0 d-none d-md-inline" style="padding: 2px 0;">

  <li>
        <notifications-list-subscription-form class="f5 position-relative d-flex">
      <details
        class="details-reset details-overlay f5 position-relative"
        data-target="notifications-list-subscription-form.details"
        data-action="toggle:notifications-list-subscription-form#detailsToggled"
      >

      <summary data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;WATCH_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="422db159096110fd1de8262ec38ef3f54f897978f88ab0db0081e82ce4e515a6" data-ga-click="Repository, click Watch settings, action:blob#show" aria-label="Notification settings" data-view-component="true" class="rounded-right-0 btn-sm btn">
  
  
          <span data-menu-button>
            <span
              hidden
              
              data-target="notifications-list-subscription-form.unwatchButtonCopy"
            >
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-eye">
    <path fill-rule="evenodd" d="M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z"></path>
</svg>
              Unwatch
            </span>
            <span
              hidden
              
              data-target="notifications-list-subscription-form.stopIgnoringButtonCopy"
            >
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell-slash">
    <path fill-rule="evenodd" d="M8 1.5c-.997 0-1.895.416-2.534 1.086A.75.75 0 014.38 1.55 5 5 0 0113 5v2.373a.75.75 0 01-1.5 0V5A3.5 3.5 0 008 1.5zM4.182 4.31L1.19 2.143a.75.75 0 10-.88 1.214L3 5.305v2.642a.25.25 0 01-.042.139L1.255 10.64A1.518 1.518 0 002.518 13h11.108l1.184.857a.75.75 0 10.88-1.214l-1.375-.996a1.196 1.196 0 00-.013-.01L4.198 4.321a.733.733 0 00-.016-.011zm7.373 7.19L4.5 6.391v1.556c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01.015.015 0 00.005.012.017.017 0 00.006.004l.007.001h9.037zM8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path>
</svg>
              Stop ignoring
            </span>
            <span
              
              
              data-target="notifications-list-subscription-form.watchButtonCopy"
            >
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-eye">
    <path fill-rule="evenodd" d="M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z"></path>
</svg>
              Watch
            </span>
          </span>
          <span class="dropdown-caret"></span>

  

</summary>
        <details-menu
          class="SelectMenu  "
          role="menu"
          data-target="notifications-list-subscription-form.menu"
          
        >
          <div class="SelectMenu-modal notifications-component-menu-modal">
            <header class="SelectMenu-header">
              <h3 class="SelectMenu-title">Notifications</h3>
              <button class="SelectMenu-closeButton" type="button" aria-label="Close menu" data-action="click:notifications-list-subscription-form#closeMenu">
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
              </button>
            </header>

            <div class="SelectMenu-list">
              <form data-target="notifications-list-subscription-form.form" data-action="submit:notifications-list-subscription-form#submitForm" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="Mz6vWhIyYlkwNoLvFVMch8VcOd6gYE299Z3zMo/f5+6xzVMZLFxBb8gSxdr0HP/fAZBoPrc/xD+2SbzfOFpYgA==" autocomplete="off" />

                <input type="hidden" name="repository_id" value="20159867">

                <button
                  type="submit"
                  name="do"
                  value="included"
                  class="SelectMenu-item flex-items-start"
                  role="menuitemradio"
                  aria-checked="true"
                  data-targets="notifications-list-subscription-form.subscriptionButtons"
                  
                >
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                  </span>
                  <div>
                    <div class="f5 text-bold">
                      Participating and @mentions
                    </div>
                    <div class="text-small color-fg-muted text-normal pb-1">
                      Only receive notifications from this repository when participating or @mentioned.
                    </div>
                  </div>
                </button>

                <button
                  type="submit"
                  name="do"
                  value="subscribed"
                  class="SelectMenu-item flex-items-start"
                  role="menuitemradio"
                  aria-checked="false"
                  data-targets="notifications-list-subscription-form.subscriptionButtons"
                >
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                  </span>
                  <div>
                    <div class="f5 text-bold">
                      All Activity
                    </div>
                    <div class="text-small color-fg-muted text-normal pb-1">
                      Notified of all notifications on this repository.
                    </div>
                  </div>
                </button>

                <button
                  type="submit"
                  name="do"
                  value="ignore"
                  class="SelectMenu-item flex-items-start"
                  role="menuitemradio"
                  aria-checked="false"
                  data-targets="notifications-list-subscription-form.subscriptionButtons"
                >
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                  </span>
                  <div>
                    <div class="f5 text-bold">
                      Ignore
                    </div>
                    <div class="text-small color-fg-muted text-normal pb-1">
                      Never be notified.
                    </div>
                  </div>
                </button>
</form>
              <button
                class="SelectMenu-item flex-items-start pr-3"
                type="button"
                role="menuitemradio"
                data-target="notifications-list-subscription-form.customButton"
                data-action="click:notifications-list-subscription-form#openCustomDialog"
                aria-haspopup="true"
                aria-checked="false"
                
              >
                <span class="f5">
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                </span>
                <div>
                  <div class="d-flex flex-items-start flex-justify-between">
                    <div class="f5 text-bold">Custom</div>
                    <div class="f5 pr-1">
                      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-arrow-right">
    <path fill-rule="evenodd" d="M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z"></path>
</svg>
                    </div>
                  </div>
                  <div class="text-small color-fg-muted text-normal pb-1">
                    Select events you want to be notified of in addition to participating and @mentions.
                  </div>
                </div>
              </button>

                <div class="px-3 py-2 d-flex color-bg-subtle flex-items-center">
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-mobile SelectMenu-icon SelectMenu-icon--device-mobile">
    <path fill-rule="evenodd" d="M3.75 0A1.75 1.75 0 002 1.75v12.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 14.25V1.75A1.75 1.75 0 0012.25 0h-8.5zM3.5 1.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25V1.75zM8 13a1 1 0 100-2 1 1 0 000 2z"></path>
</svg>
                  </span>
                  <span className="text-small color-fg-muted text-normal pb-1">
                    Get push notifications on <a target="_blank" rel="noopener noreferrer" href="https://apps.apple.com/app/apple-store/id1477376905?ct=watch-dropdown&amp;mt=8&amp;pt=524675">iOS</a> or <a target="_blank" rel="noopener noreferrer" href="https://play.google.com/store/apps/details?id=com.github.android&amp;referrer=utm_campaign%3Dwatch-dropdown%26utm_medium%3Dweb%26utm_source%3Dgithub">Android</a>.
                  </span>
                </div>
            </div>
          </div>
        </details-menu>

        <details-dialog class="notifications-component-dialog " data-target="notifications-list-subscription-form.customDialog" hidden>
          <div class="SelectMenu-modal notifications-component-dialog-modal overflow-visible">
            <form data-target="notifications-list-subscription-form.customform" data-action="submit:notifications-list-subscription-form#submitCustomForm" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="sKNMCq5h76p5Axgyv481Rh8V1i1Oye/Lxn63LK+d/jMyULBJkA/MnIEnXwdewNYe29mHzVmWZkmFqvjBGBhBXQ==" autocomplete="off" />

              <input type="hidden" name="repository_id" value="20159867">

              <header class="d-sm-none SelectMenu-header pb-0 border-bottom-0 px-2 px-sm-3">
                <h1 class="f3 SelectMenu-title d-inline-flex">
                  <button
                    class="color-bg-default border-0 px-2 py-0 m-0 Link--secondary f5"
                    aria-label="Return to menu"
                    type="button"
                    data-action="click:notifications-list-subscription-form#closeCustomDialog"
                  >
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-arrow-left">
    <path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path>
</svg>
                  </button>
                  Custom
                </h1>
              </header>

              <header class="d-none d-sm-flex flex-items-start pt-1">
                <button
                  class="border-0 px-2 pt-1 m-0 Link--secondary f5"
                  style="background-color: transparent;"
                  aria-label="Return to menu"
                  type="button"
                  data-action="click:notifications-list-subscription-form#closeCustomDialog"
                >
                  <svg style="position: relative; left: 2px; top: 1px" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-arrow-left">
    <path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path>
</svg>
                </button>

                <h1 class="pt-1 pr-4 pb-0 pl-0 f5 text-bold">
                  Custom
                </h1>
              </header>

              <fieldset>
                <legend>
                  <div class="text-small color-fg-muted pt-0 pr-3 pb-3 pl-6 pl-sm-5 border-bottom mb-3">
                    Select events you want to be notified of in addition to participating and @mentions.
                  </div>
                </legend>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="Issue"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Issues
                    </label>

                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="PullRequest"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Pull requests
                    </label>

                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="Release"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Releases
                    </label>

                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="Discussion"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Discussions
                    </label>

                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="SecurityAlert"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Security alerts
                    </label>

                  </div>
              </fieldset>
              <div class="pt-2 pb-3 px-3 d-flex flex-justify-start flex-row-reverse">
                <button name="do" value="custom" data-target="notifications-list-subscription-form.customSubmit" disabled="disabled" type="submit" data-view-component="true" class="btn-primary btn-sm btn ml-2">
  
  Apply
  

</button>

                <button data-action="click:notifications-list-subscription-form#resetForm" data-close-dialog="" type="button" data-view-component="true" class="btn-sm btn">
  
  Cancel
  

</button>
              </div>
</form>          </div>
        </details-dialog>
        <div class="notifications-component-dialog-overlay"></div>
      </details>
        <a class="social-count"
          href="/nothings/stb/watchers"
          aria-label="613 users are watching this repository"
          data-target="notifications-list-subscription-form.socialCount"
        >
          613
        </a>
    </notifications-list-subscription-form>



  </li>


    <li>
          <div class="js-toggler-container js-social-container starring-container d-block on">
    <form class="starred js-social-form" action="/nothings/stb/unstar" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="eN/Y+43QKqPWs5zi8zrvMhBa/SJrtL1o/h+YjQZo27KUttLETBqGkmpdznxoT6qCiTQfjWRZu6wvRcQ98wU/NQ==" autocomplete="off" />
      <input type="hidden" name="context" value="repository">
      <button data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;UNSTAR_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="040f1f9ca4dd75bbadb870ed23c0f3814e59d883b07df4e24dff26f74b618485" data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar" aria-label="Unstar this repository" type="submit" data-view-component="true" class="js-toggler-target btn-with-count btn-sm btn">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star-fill mr-1">
    <path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"></path>
</svg>
  
        <span data-view-component="true">
          Unstar
</span>
  

</button>        <a
          class="social-count js-social-count"
          href="/nothings/stb/stargazers"
          aria-label="17135 users starred this repository"
          data-singular-suffix="user starred this repository"
          data-plural-suffix="users starred this repository"
        >
           17.1k
        </a>
</form>
    <form class="unstarred js-social-form" action="/nothings/stb/star" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="sDy1fn2bCYIMp9bopX3mkj9p6HhWKUyAnOojrMG7VEWNSDKZpAqb364dTYxdmwAc/lANa6gq5/ZDPGZonqlbyQ==" autocomplete="off" />
      <input type="hidden" name="context" value="repository">
      <button data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;STAR_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="57b3a39d965a15772734b485ab3a0439526ad5b85dabcceed7d4bbc9c2bd4285" data-ga-click="Repository, click star button, action:blob#show; text:Star" aria-label="Star this repository" type="submit" data-view-component="true" class="js-toggler-target btn-with-count btn-sm btn">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star mr-1">
    <path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"></path>
</svg>
  
        <span data-view-component="true">
          Star
</span>
  

</button>        <a
          class="social-count js-social-count"
          href="/nothings/stb/stargazers"
          aria-label="17135 users starred this repository"
          data-singular-suffix="user starred this repository"
          data-plural-suffix="users starred this repository"
        >
          17.1k
        </a>
</form>
  </div>

    </li>

    <li>
              <div class="float-left">
        <details class="details-reset details-overlay details-overlay-dark " >
                <summary data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FORK_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="3ba3bb3c18806ecd0d6d3a6c5ea26bbb2afd52e09bee0f17472bc6d1b834890e" data-ga-click="Repository, show fork modal, action:blob#show; text:Fork" aria-label="Fork your own copy of nothings/stb to your account" data-view-component="true" class="btn-with-count btn-sm btn">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo-forked">
    <path fill-rule="evenodd" d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path>
</svg>
  
              Fork

  

</summary>
  <details-dialog
    class="Box d-flex flex-column anim-fade-in fast Box--overlay "
      aria-label="Fork stb"
      src="/nothings/stb/fork?fragment=1"
      preload
    >
    <div class="Box-header">
      <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
      </button>
      <h1 class="Box-title">Fork stb</h1>
    </div>
      
          <div class="text-center overflow-auto">
            <include-fragment>
              <span role="status">
  <span class="sr-only">Loading</span>
  <svg aria-label="Loading..." style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="my-5 anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

              <p class="f5 color-fg-muted">If this dialog fails to load, you can visit <a href="/nothings/stb/fork">the fork page</a> directly.</p>
            </include-fragment>
          </div>

  </details-dialog>
</details>
      </div>

  <a
    href="/nothings/stb/network/members"
    class="social-count"
    aria-label="6036 users forked this repository"
  >
    6k
  </a>

    </li>


  <li>
    

  </li>
</ul>

      </div>

      <div id="responsive-meta-container" data-pjax-replace>
</div>


        
<nav data-pjax="#js-repo-pjax-container" aria-label="Repository" data-view-component="true" class="js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5">

  <ul data-view-component="true" class="UnderlineNav-body list-style-none">
      <li data-view-component="true" class="d-inline-flex">
  <a id="code-tab" href="/nothings/stb" data-tab-item="i0code-tab" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /nothings/stb" data-pjax="#repo-content-pjax-container" data-hotkey="g c" data-ga-click="Repository, Navigation click, Code tab" aria-current="page" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M4.72 3.22a.75.75 0 011.06 1.06L2.06 8l3.72 3.72a.75.75 0 11-1.06 1.06L.47 8.53a.75.75 0 010-1.06l4.25-4.25zm6.56 0a.75.75 0 10-1.06 1.06L13.94 8l-3.72 3.72a.75.75 0 101.06 1.06l4.25-4.25a.75.75 0 000-1.06l-4.25-4.25z"></path>
</svg>
          <span data-content="Code">Code</span>
            <span id="code-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="issues-tab" href="/nothings/stb/issues" data-tab-item="i1issues-tab" data-selected-links="repo_issues repo_labels repo_milestones /nothings/stb/issues" data-pjax="#repo-content-pjax-container" data-hotkey="g i" data-ga-click="Repository, Navigation click, Issues tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path><path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"></path>
</svg>
          <span data-content="Issues">Issues</span>
            <span id="issues-repo-tab-count" data-pjax-replace="" title="66" data-view-component="true" class="Counter">66</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="pull-requests-tab" href="/nothings/stb/pulls" data-tab-item="i2pull-requests-tab" data-selected-links="repo_pulls checks /nothings/stb/pulls" data-pjax="#repo-content-pjax-container" data-hotkey="g p" data-ga-click="Repository, Navigation click, Pull requests tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"></path>
</svg>
          <span data-content="Pull requests">Pull requests</span>
            <span id="pull-requests-repo-tab-count" data-pjax-replace="" title="37" data-view-component="true" class="Counter">37</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="discussions-tab" href="/nothings/stb/discussions" data-tab-item="i3discussions-tab" data-selected-links="repo_discussions /nothings/stb/discussions" data-pjax="#repo-content-pjax-container" data-hotkey="g g" data-ga-click="Repository, Navigation click, Discussions tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment-discussion UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 2.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-3.5a.75.75 0 00-.53.22L3.5 11.44V9.25a.75.75 0 00-.75-.75h-1a.25.25 0 01-.25-.25v-5.5zM1.75 1A1.75 1.75 0 000 2.75v5.5C0 9.216.784 10 1.75 10H2v1.543a1.457 1.457 0 002.487 1.03L7.061 10h3.189A1.75 1.75 0 0012 8.25v-5.5A1.75 1.75 0 0010.25 1h-8.5zM14.5 4.75a.25.25 0 00-.25-.25h-.5a.75.75 0 110-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0114.25 12H14v1.543a1.457 1.457 0 01-2.487 1.03L9.22 12.28a.75.75 0 111.06-1.06l2.22 2.22v-2.19a.75.75 0 01.75-.75h1a.25.25 0 00.25-.25v-5.5z"></path>
</svg>
          <span data-content="Discussions">Discussions</span>
            <span id="discussions-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="actions-tab" href="/nothings/stb/actions" data-tab-item="i4actions-tab" data-selected-links="repo_actions /nothings/stb/actions" data-pjax="#repo-content-pjax-container" data-hotkey="g a" data-ga-click="Repository, Navigation click, Actions tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM6.379 5.227A.25.25 0 006 5.442v5.117a.25.25 0 00.379.214l4.264-2.559a.25.25 0 000-.428L6.379 5.227z"></path>
</svg>
          <span data-content="Actions">Actions</span>
            <span id="actions-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="projects-tab" href="/nothings/stb/projects" data-tab-item="i5projects-tab" data-selected-links="repo_projects new_repo_project repo_project /nothings/stb/projects" data-pjax="#repo-content-pjax-container" data-hotkey="g b" data-ga-click="Repository, Navigation click, Projects tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
          <span data-content="Projects">Projects</span>
            <span id="projects-repo-tab-count" data-pjax-replace="" title="0" hidden="hidden" data-view-component="true" class="Counter">0</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="security-tab" href="/nothings/stb/security" data-tab-item="i6security-tab" data-selected-links="security overview alerts policy token_scanning code_scanning /nothings/stb/security" data-pjax="#repo-content-pjax-container" data-hotkey="g s" data-ga-click="Repository, Navigation click, Security tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M7.467.133a1.75 1.75 0 011.066 0l5.25 1.68A1.75 1.75 0 0115 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.7 1.7 0 01-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 011.217-1.667l5.25-1.68zm.61 1.429a.25.25 0 00-.153 0l-5.25 1.68a.25.25 0 00-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.2.2 0 00.154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.25.25 0 00-.174-.237l-5.25-1.68zM9 10.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.75a.75.75 0 10-1.5 0v3a.75.75 0 001.5 0v-3z"></path>
</svg>
          <span data-content="Security">Security</span>
            <include-fragment src="/nothings/stb/security/overall-count" accept="text/fragment+html"></include-fragment>

    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="insights-tab" href="/nothings/stb/pulse" data-tab-item="i7insights-tab" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /nothings/stb/pulse" data-pjax="#repo-content-pjax-container" data-ga-click="Repository, Navigation click, Insights tab" data-view-component="true" class="UnderlineNav-item hx_underlinenav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z"></path>
</svg>
          <span data-content="Insights">Insights</span>
            <span id="insights-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
</ul>
    <div style="visibility:hidden;" data-view-component="true" class="UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0">      <details data-view-component="true" class="details-overlay details-reset position-relative">
  <summary role="button" data-view-component="true">          <div class="UnderlineNav-item mr-0 border-0">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
            <span class="sr-only">More</span>
          </div>
</summary>
  <div data-view-component="true">          <details-menu role="menu" data-view-component="true" class="dropdown-menu dropdown-menu-sw">
  
            <ul>
                <li data-menu-item="i0code-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item selected dropdown-item" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /nothings/stb" href="/nothings/stb">
                    Code
</a>                </li>
                <li data-menu-item="i1issues-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_issues repo_labels repo_milestones /nothings/stb/issues" href="/nothings/stb/issues">
                    Issues
</a>                </li>
                <li data-menu-item="i2pull-requests-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_pulls checks /nothings/stb/pulls" href="/nothings/stb/pulls">
                    Pull requests
</a>                </li>
                <li data-menu-item="i3discussions-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_discussions /nothings/stb/discussions" href="/nothings/stb/discussions">
                    Discussions
</a>                </li>
                <li data-menu-item="i4actions-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_actions /nothings/stb/actions" href="/nothings/stb/actions">
                    Actions
</a>                </li>
                <li data-menu-item="i5projects-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_projects new_repo_project repo_project /nothings/stb/projects" href="/nothings/stb/projects">
                    Projects
</a>                </li>
                <li data-menu-item="i6security-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="security overview alerts policy token_scanning code_scanning /nothings/stb/security" href="/nothings/stb/security">
                    Security
</a>                </li>
                <li data-menu-item="i7insights-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /nothings/stb/pulse" href="/nothings/stb/pulse">
                    Insights
</a>                </li>
            </ul>

</details-menu></div>
</details></div>
</nav>
  </div>



<div class="clearfix new-discussion-timeline container-xl px-3 px-md-4 px-lg-5">
  <div id="repo-content-pjax-container" class="repository-content " >

      <a href="https://github.dev/" class="d-none js-github-dev-shortcut" data-hotkey=".">Open in github.dev</a>



    
      
  
  
<div>
  


    <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/nothings/stb/blob/af1a5bc352164740c1cc1354942b1c6b72eacb8a/stb_image.h">Permalink</a>

    <div class="d-flex flex-items-start flex-shrink-0 pb-3 flex-wrap flex-md-nowrap flex-justify-between flex-md-justify-start">
      
<div class="position-relative">
  <details class="details-reset details-overlay mr-0 mb-0 " id="branch-select-menu">
    <summary class="btn css-truncate"
            data-hotkey="w"
            title="Switch branches or tags">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-branch">
    <path fill-rule="evenodd" d="M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path>
</svg>
      <span class="css-truncate-target" data-menu-button>master</span>
      <span class="dropdown-caret"></span>
    </summary>

      
<div class="SelectMenu">
  <div class="SelectMenu-modal">
    <header class="SelectMenu-header">
      <span class="SelectMenu-title">Switch branches/tags</span>
      <button class="SelectMenu-closeButton" type="button" data-toggle-for="branch-select-menu"><svg aria-label="Close menu" aria-hidden="false" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg></button>
    </header>

    <input-demux data-action="tab-container-change:input-demux#storeInput tab-container-changed:input-demux#updateInput">
      <tab-container class="d-flex flex-column js-branches-tags-tabs" style="min-height: 0;">
        <div class="SelectMenu-filter">
          <input data-target="input-demux.source"
                 id="context-commitish-filter-field"
                 class="SelectMenu-input form-control"
                 aria-owns="ref-list-branches"
                 data-controls-ref-menu-id="ref-list-branches"
                 autofocus
                 autocomplete="off"
                 aria-label="Filter branches/tags"
                 placeholder="Filter branches/tags"
                 type="text"
          >
        </div>

        <div class="SelectMenu-tabs" role="tablist" data-target="input-demux.control" >
          <button class="SelectMenu-tab" type="button" role="tab" aria-selected="true">Branches</button>
          <button class="SelectMenu-tab" type="button" role="tab">Tags</button>
        </div>

        <div role="tabpanel" id="ref-list-branches" data-filter-placeholder="Filter branches/tags" class="d-flex flex-column flex-auto overflow-auto" tabindex="">
          <ref-selector
            type="branch"
            data-targets="input-demux.sinks"
            data-action="
              input-entered:ref-selector#inputEntered
              tab-selected:ref-selector#tabSelected
              focus-list:ref-selector#focusFirstListMember
            "
            query-endpoint="/nothings/stb/refs"
            
            cache-key="v0:1625178638.233396"
            current-committish="bWFzdGVy"
            default-branch="bWFzdGVy"
            name-with-owner="bm90aGluZ3Mvc3Ri"
            prefetch-on-mouseover
          >

            <template data-target="ref-selector.fetchFailedTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Could not load branches</div>
            </template>

              <template data-target="ref-selector.noMatchTemplate">
    <div class="SelectMenu-message">Nothing to show</div>
</template>


            <!-- TODO: this max-height is necessary or else the branch list won't scroll.  why? -->
            <div data-target="ref-selector.listContainer" role="menu" class="SelectMenu-list " style="max-height: 330px" data-pjax="#repo-content-pjax-container">
              <div class="SelectMenu-loading pt-3 pb-0" aria-label="Menu is loading">
                <span role="status">
  <span class="sr-only">Loading</span>
  <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

              </div>
            </div>

              <template data-target="ref-selector.itemTemplate">
  <a href="https://github.com/nothings/stb/blob/{{ urlEncodedRefName }}/stb_image.h" class="SelectMenu-item" role="menuitemradio" rel="nofollow" aria-checked="{{ isCurrent }}" data-index="{{ index }}">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    <span class="flex-1 css-truncate css-truncate-overflow {{ isFilteringClass }}">{{ refName }}</span>
    <span hidden="{{ isNotDefault }}" class="Label Label--secondary flex-self-start">default</span>
  </a>
</template>


              <footer class="SelectMenu-footer"><a href="/nothings/stb/branches">View all branches</a></footer>
          </ref-selector>

        </div>

        <div role="tabpanel" id="tags-menu" data-filter-placeholder="Find a tag" class="d-flex flex-column flex-auto overflow-auto" tabindex="" hidden>
          <ref-selector
            type="tag"
            data-action="
              input-entered:ref-selector#inputEntered
              tab-selected:ref-selector#tabSelected
              focus-list:ref-selector#focusFirstListMember
            "
            data-targets="input-demux.sinks"
            query-endpoint="/nothings/stb/refs"
            cache-key="v0:1625178638.233396"
            current-committish="bWFzdGVy"
            default-branch="bWFzdGVy"
            name-with-owner="bm90aGluZ3Mvc3Ri"
          >

            <template data-target="ref-selector.fetchFailedTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Could not load tags</div>
            </template>

            <template data-target="ref-selector.noMatchTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Nothing to show</div>
            </template>

              <template data-target="ref-selector.itemTemplate">
  <a href="https://github.com/nothings/stb/blob/{{ urlEncodedRefName }}/stb_image.h" class="SelectMenu-item" role="menuitemradio" rel="nofollow" aria-checked="{{ isCurrent }}" data-index="{{ index }}">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    <span class="flex-1 css-truncate css-truncate-overflow {{ isFilteringClass }}">{{ refName }}</span>
    <span hidden="{{ isNotDefault }}" class="Label Label--secondary flex-self-start">default</span>
  </a>
</template>


            <div data-target="ref-selector.listContainer" role="menu" class="SelectMenu-list" style="max-height: 330px" data-pjax="#repo-content-pjax-container">
              <div class="SelectMenu-loading pt-3 pb-0" aria-label="Menu is loading">
                <span role="status">
  <span class="sr-only">Loading</span>
  <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

              </div>
            </div>
              <footer class="SelectMenu-footer"><a href="/nothings/stb/tags">View all tags</a></footer>
          </ref-selector>
        </div>
      </tab-container>
    </input-demux>
  </div>
</div>

  </details>

</div>

      <h2 id="blob-path" class="breadcrumb flex-auto flex-self-center min-width-0 text-normal mx-2 width-full width-md-auto flex-order-1 flex-md-order-none mt-3 mt-md-0">
        <span class="js-repo-root text-bold"><span class="js-path-segment d-inline-block wb-break-all"><a data-pjax="#repo-content-pjax-container" href="/nothings/stb"><span>stb</span></a></span></span><span class="separator">/</span><strong class="final-path">stb_image.h</strong>
      </h2>
      <a href="/nothings/stb/find/master"
            class="js-pjax-capture-input btn mr-2 d-none d-md-block"
            data-pjax
            data-hotkey="t">
        Go to file
      </a>

      <details id="blob-more-options-details" data-view-component="true" class="details-overlay details-reset position-relative">
  <summary role="button" data-view-component="true" class="btn">
  
            <svg aria-label="More options" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>

  

</summary>
  <div data-view-component="true">          <ul class="dropdown-menu dropdown-menu-sw">
            <li class="d-block d-md-none">
              <a class="dropdown-item d-flex flex-items-baseline" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FIND_FILE_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="389d5b06b3822b0039aa43816694bef70b3ab4c500627d7ca10b98414ca7ec58" data-ga-click="Repository, find file, location:repo overview" data-hotkey="t" data-pjax="true" href="/nothings/stb/find/master">
                <span class="flex-auto">Go to file</span>
                <span class="text-small color-fg-muted" aria-hidden="true">T</span>
</a>            </li>
            <li data-toggle-for="blob-more-options-details">
              <button data-toggle-for="jumpto-line-details-dialog" type="button" data-view-component="true" class="dropdown-item btn-link">
  
  
                <span class="d-flex flex-items-baseline">
                  <span class="flex-auto">Go to line</span>
                  <span class="text-small color-fg-muted" aria-hidden="true">L</span>
                </span>

  

</button>            </li>
            <li class="dropdown-divider" role="none"></li>
            <li>
              <clipboard-copy data-toggle-for="blob-more-options-details" aria-label="Copy path" value="stb_image.h" data-view-component="true" class="dropdown-item cursor-pointer">
    
                Copy path

</clipboard-copy>            </li>
            <li>
              <clipboard-copy data-toggle-for="blob-more-options-details" aria-label="Copy permalink" value="https://github.com/nothings/stb/blob/af1a5bc352164740c1cc1354942b1c6b72eacb8a/stb_image.h" data-view-component="true" class="dropdown-item cursor-pointer">
    
                <span class="d-flex flex-items-baseline">
                  <span class="flex-auto">Copy permalink</span>
                </span>

</clipboard-copy>            </li>
          </ul>
</div>
</details>    </div>




    <div class="Box d-flex flex-column flex-shrink-0 mb-3">
      
  <div class="Box-header Details js-details-container">
      <div class="d-flex flex-items-center">
        <span class="flex-shrink-0 ml-n1 mr-n1 mt-n1 mb-n1">
          <a rel="contributor" data-skip-pjax="true" data-hovercard-type="user" data-hovercard-url="/users/rygorous/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/rygorous"><img class="avatar avatar-user" src="https://avatars.githubusercontent.com/u/1077496?s=48&amp;v=4" width="24" height="24" alt="@rygorous" /></a>
        </span>
        <div class="flex-1 d-flex flex-items-center ml-3 min-width-0">
          <div class="css-truncate css-truncate-overflow">
            <a class="text-bold Link--primary" rel="contributor" data-hovercard-type="user" data-hovercard-url="/users/rygorous/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/rygorous">rygorous</a>

              <span class="markdown-title">
                <a data-pjax="true" title="stb_image: Reject fractional JPEG component subsampling ratios

The component resamplers are not written to support this and I&#39;ve
never seen it happen in a real (non-crafted) JPEG file so I&#39;m
fine rejecting this as outright corrupt.

Fixes issue #1178." class="Link--secondary" href="/nothings/stb/commit/5ba0baaa269b3fd681828e0e3b3ac0f1472eaf40">stb_image: Reject fractional JPEG component subsampling ratios</a>
              </span>
          </div>

            <span class="hidden-text-expander ml-1 flex-shrink-0">
              <button type="button" class="ellipsis-expander js-details-target" aria-expanded="false">&hellip;</button>
            </span>

          <span class="ml-2">
            <include-fragment accept="text/fragment+html" src="/nothings/stb/commit/5ba0baaa269b3fd681828e0e3b3ac0f1472eaf40/rollup?direction=e" class="d-inline"></include-fragment>
          </span>
        </div>
        <div class="ml-3 d-flex flex-shrink-0 flex-items-center flex-justify-end color-fg-muted no-wrap">
          <span class="d-none d-md-inline">
            <span>Latest commit</span>
            <a class="text-small text-mono Link--secondary" href="/nothings/stb/commit/5ba0baaa269b3fd681828e0e3b3ac0f1472eaf40" data-pjax>5ba0baa</a>
            <span itemprop="dateModified"><relative-time datetime="2021-07-26T03:24:10Z" class="no-wrap">Jul 26, 2021</relative-time></span>
          </span>

          <a data-pjax href="/nothings/stb/commits/master/stb_image.h" class="ml-3 no-wrap Link--primary no-underline">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-history">
    <path fill-rule="evenodd" d="M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 01.75.75v2.992l2.028.812a.75.75 0 01-.557 1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 0 017.75 4z"></path>
</svg>
            <span class="d-none d-sm-inline">
              <strong>History</strong>
            </span>
          </a>
        </div>
      </div>
        <div class="Details-content--hidden ml-5 mt-2"><pre class="mt-2 f6 ws-pre-wrap">The component resamplers are not written to support this and I've
never seen it happen in a real (non-crafted) JPEG file so I'm
fine rejecting this as outright corrupt.

Fixes issue <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="950573228" data-permission-text="Title is private" data-url="https://github.com/nothings/stb/issues/1178" data-hovercard-type="issue" data-hovercard-url="/nothings/stb/issues/1178/hovercard" href="https://github.com/nothings/stb/issues/1178">#1178</a>.</pre></div>

  </div>

  <div class="Box-body d-flex flex-items-center flex-auto border-bottom-0 flex-wrap" >
    <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default float-left mr-3" id="blob_contributors_box">
      <summary class="Link--primary">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-people">
    <path fill-rule="evenodd" d="M5.5 3.5a2 2 0 100 4 2 2 0 000-4zM2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.434-.44 5.01 5.01 0 00-2.56-3.012A3 3 0 0011 4z"></path>
</svg>
        <strong>69</strong>
        
        contributors
      </summary>
      <details-dialog
        class="Box Box--overlay d-flex flex-column anim-fade-in fast"
        aria-label="Users who have contributed to this file"
        src="/nothings/stb/contributors-list/master/stb_image.h" preload>
        <div class="Box-header">
          <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
          </button>
          <h3 class="Box-title">
            Users who have contributed to this file
          </h3>
        </div>
        <include-fragment>
          <span role="status">
  <span class="sr-only">Loading</span>
  <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="my-3 mx-auto d-block anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

        </include-fragment>
      </details-dialog>
    </details>
      <span class="">
    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/nothings/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=nothings">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/7525026?s=48&amp;v=4" width="24" height="24" alt="@nothings" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/rygorous/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=rygorous">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1077496?s=48&amp;v=4" width="24" height="24" alt="@rygorous" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/icculus/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=icculus">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/673562?s=48&amp;v=4" width="24" height="24" alt="@icculus" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/ocornut/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=ocornut">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/8225057?s=48&amp;v=4" width="24" height="24" alt="@ocornut" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/Reedbeta/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=Reedbeta">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1578730?s=48&amp;v=4" width="24" height="24" alt="@Reedbeta" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/rmitton/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=rmitton">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/8029835?s=48&amp;v=4" width="24" height="24" alt="@rmitton" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/DanielGibson/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=DanielGibson">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1216493?s=48&amp;v=4" width="24" height="24" alt="@DanielGibson" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/tocchan/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=tocchan">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/9999680?s=48&amp;v=4" width="24" height="24" alt="@tocchan" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/kennethdmiller3/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=kennethdmiller3">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1566844?s=48&amp;v=4" width="24" height="24" alt="@kennethdmiller3" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/anael-seghezzi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=anael-seghezzi">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/5167079?s=48&amp;v=4" width="24" height="24" alt="@anael-seghezzi" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/saitoha/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=saitoha">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1162739?s=48&amp;v=4" width="24" height="24" alt="@saitoha" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/Michaelangel007/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/nothings/stb/commits/master/stb_image.h?author=Michaelangel007">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/7876796?s=48&amp;v=4" width="24" height="24" alt="@Michaelangel007" /> 
</a>
    <button data-toggle-for="blob_contributors_box" type="button" data-view-component="true" class="lh-default btn-link">
  
  
      +45

  

</button></span>

  </div>
    </div>




      







  
    <div data-target="readme-toc.content" class="Box mt-3 position-relative">
      
  <div
    class="Box-header py-2 pr-2 d-flex flex-shrink-0 flex-md-row flex-items-center"
    
  >


  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1">

      7897 lines (7016 sloc)
      <span class="file-info-divider"></span>
    273 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between hide-sm hide-md">
      

    <div class="BtnGroup">
      <a href="/nothings/stb/raw/master/stb_image.h" id="raw-url" data-view-component="true" class="btn-sm btn BtnGroup-item">
  
  Raw
  

</a>
        <a href="/nothings/stb/blame/master/stb_image.h" data-hotkey="b" data-view-component="true" class="js-update-url-with-hash btn-sm btn BtnGroup-item">
  
  Blame
  

</a>
    </div>

    <div>
          <a class="btn-octicon tooltipped tooltipped-nw js-remove-unless-platform"
             data-platforms="windows,mac"
             href="x-github-client://openRepo/https://github.com/nothings/stb?branch=master&amp;filepath=stb_image.h"
             aria-label="Open this file in GitHub Desktop"
             data-ga-click="Repository, open with desktop">
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-desktop">
    <path fill-rule="evenodd" d="M1.75 2.5h12.5a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25zM14.25 1H1.75A1.75 1.75 0 000 2.75v7.5C0 11.216.784 12 1.75 12h3.727c-.1 1.041-.52 1.872-1.292 2.757A.75.75 0 004.75 16h6.5a.75.75 0 00.565-1.243c-.772-.885-1.193-1.716-1.292-2.757h3.727A1.75 1.75 0 0016 10.25v-7.5A1.75 1.75 0 0014.25 1zM9.018 12H6.982a5.72 5.72 0 01-.765 2.5h3.566a5.72 5.72 0 01-.765-2.5z"></path>
</svg>
          </a>

        <remote-clipboard-copy class="d-inline-block btn-octicon" style="height: 26px" data-src="/nothings/stb/raw/master/stb_image.h" data-action="click:remote-clipboard-copy#remoteCopy">
  


  <span data-target="remote-clipboard-copy.idle">            <span class="tooltipped tooltipped-nw cursor-pointer" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;COPY_RAW_CONTENTS_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="48bb19656cfe2467cabea5c601d8cd9f4afd097d2ec358bc785367bf8f5ada47" aria-label="Copy raw contents">
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy">
    <path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path>
</svg>
</span></span>
  <span data-target="remote-clipboard-copy.fetching" hidden="hidden">            <span role="status">
  <span class="sr-only">Loading</span>
  <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

</span>
  <span data-target="remote-clipboard-copy.success" hidden="hidden">            <span class="tooltipped tooltipped-nw" aria-label="Copied!">
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check color-fg-success">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
            </span>
</span>
  <span data-target="remote-clipboard-copy.error" hidden="hidden">            <span class="tooltipped tooltipped-nw" aria-label="Something went wrong. Try again.">
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert color-fg-attention">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
            </span>
</span>
</remote-clipboard-copy>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form js-update-url-with-hash" action="/nothings/stb/edit/master/stb_image.h" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="DZEMTyBIfWRA40MWh7awkYLWijqGM3+zHmj1EmdSTG6XWxZiORxCLta4Pontd8NUevwGT0XDf/n5Z8KZmXscFA==" />
            <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-pencil">
    <path fill-rule="evenodd" d="M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z"></path>
</svg>
            </button>
</form>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" action="/nothings/stb/delete/master/stb_image.h" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="iol7kJJsY1OkSQgcYj4n3klKQnuS06/JoeHDx04bWo6wzbrXP8WuGSLIt8baWAirqI/ECCMQNaDqc4vu5X8NiA==" />
            <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and delete the file" data-disable-with>
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-trash">
    <path fill-rule="evenodd" d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path>
</svg>
            </button>
</form>    </div>
  </div>

    <div class="d-flex hide-lg hide-xl flex-order-2 flex-grow-0">
      <details class="dropdown details-reset details-overlay d-inline-block">
        <summary class="btn-octicon" aria-haspopup="true" aria-label="possible actions">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
        </summary>

        <ul class="dropdown-menu dropdown-menu-sw" style="width: 175px">
            <li>
                <a class="dropdown-item tooltipped tooltipped-nw js-remove-unless-platform"
                   data-platforms="windows,mac"
                   href="x-github-client://openRepo/https://github.com/nothings/stb?branch=master&amp;filepath=stb_image.h"
                   data-ga-click="Repository, open with desktop">
                  Open with Desktop
                </a>
            </li>
          <li>
            <a class="dropdown-item" href="/nothings/stb/raw/master/stb_image.h">
              View raw
            </a>
          </li>
            <li>
              <remote-clipboard-copy class="dropdown-item" data-src="/nothings/stb/raw/master/stb_image.h" data-action="click:remote-clipboard-copy#remoteCopy">
  

  <span data-target="remote-clipboard-copy.idle">                  <span class="cursor-pointer" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;COPY_RAW_CONTENTS_BUTTON&quot;,&quot;repository_id&quot;:20159867,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="48bb19656cfe2467cabea5c601d8cd9f4afd097d2ec358bc785367bf8f5ada47">
                    Copy raw contents
</span></span>
  <span data-target="remote-clipboard-copy.fetching" hidden="hidden">                  Copy raw contents
                  <span class="d-inline-block position-relative" style="top: 3px">
                    <span role="status">
  <span class="sr-only">Loading</span>
  <svg aria-label="fetching contents…" style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
    <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
    <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg></span>

                  </span>
</span>
  <span data-target="remote-clipboard-copy.success" hidden="hidden">                  Copy raw contents
                  <svg aria-label="Copied!" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check color-fg-success">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
</span>
  <span data-target="remote-clipboard-copy.error" hidden="hidden">                  Copy raw contents
                  <svg aria-label="Something went wrong. Try again." role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert color-fg-attention">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
</span>
</remote-clipboard-copy>            </li>
            <li>
              <a class="dropdown-item" href="/nothings/stb/blame/master/stb_image.h">
                View blame
              </a>
            </li>

              <li class="dropdown-divider" role="none"></li>
              <li>
                <a class="dropdown-item" href="/nothings/stb/edit/master/stb_image.h">Edit file</a>
              </li>
              <li>
                <a class="dropdown-item menu-item-danger" href="/nothings/stb/delete/master/stb_image.h">Delete file</a>
              </li>
        </ul>
      </details>
    </div>
</div>


      
  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-c  gist-border-0">

      
<div class="js-check-bidi blob-code-content">
  <template class="js-file-alert-template">
  <div data-view-component="true" class="flash flash-warn flash-full">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
  
    This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. <a href="https://github.co/hiddenchars" target="_blank">Learn more about bidirectional Unicode characters</a>


  
</div></template>
<template class="js-line-alert-template">
  <span aria-label="This line has hidden Unicode characters" data-view-component="true" class="bidi-line-alert tooltipped tooltipped-e">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
</span></template>

  <table class="highlight tab-size js-file-line-container js-code-nav-container js-tagsearch-file" data-tab-size="8" data-paste-markdown-skip data-tagsearch-lang="C" data-tagsearch-path="stb_image.h">
        <tr>
          <td id="L1" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1"></td>
          <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span> stb_image - v2.27 - public domain image loader - http://nothings.org/stb</span></td>
        </tr>
        <tr>
          <td id="L2" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2"></td>
          <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                  no warranty implied; use at your own risk</span></td>
        </tr>
        <tr>
          <td id="L3" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3"></td>
          <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L4" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4"></td>
          <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   Do this:</span></td>
        </tr>
        <tr>
          <td id="L5" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5"></td>
          <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      #define STB_IMAGE_IMPLEMENTATION</span></td>
        </tr>
        <tr>
          <td id="L6" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6"></td>
          <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   before you include this file in *one* C or C++ file to create the implementation.</span></td>
        </tr>
        <tr>
          <td id="L7" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7"></td>
          <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L8" class="blob-num js-line-number js-code-nav-line-number" data-line-number="8"></td>
          <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   // i.e. it should look like this:</span></td>
        </tr>
        <tr>
          <td id="L9" class="blob-num js-line-number js-code-nav-line-number" data-line-number="9"></td>
          <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   #include ...</span></td>
        </tr>
        <tr>
          <td id="L10" class="blob-num js-line-number js-code-nav-line-number" data-line-number="10"></td>
          <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   #include ...</span></td>
        </tr>
        <tr>
          <td id="L11" class="blob-num js-line-number js-code-nav-line-number" data-line-number="11"></td>
          <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   #include ...</span></td>
        </tr>
        <tr>
          <td id="L12" class="blob-num js-line-number js-code-nav-line-number" data-line-number="12"></td>
          <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   #define STB_IMAGE_IMPLEMENTATION</span></td>
        </tr>
        <tr>
          <td id="L13" class="blob-num js-line-number js-code-nav-line-number" data-line-number="13"></td>
          <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   #include &quot;stb_image.h&quot;</span></td>
        </tr>
        <tr>
          <td id="L14" class="blob-num js-line-number js-code-nav-line-number" data-line-number="14"></td>
          <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L15" class="blob-num js-line-number js-code-nav-line-number" data-line-number="15"></td>
          <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   You can #define STBI_ASSERT(x) before the #include to avoid using assert.h.</span></td>
        </tr>
        <tr>
          <td id="L16" class="blob-num js-line-number js-code-nav-line-number" data-line-number="16"></td>
          <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   And #define STBI_MALLOC, STBI_REALLOC, and STBI_FREE to avoid using malloc,realloc,free</span></td>
        </tr>
        <tr>
          <td id="L17" class="blob-num js-line-number js-code-nav-line-number" data-line-number="17"></td>
          <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L18" class="blob-num js-line-number js-code-nav-line-number" data-line-number="18"></td>
          <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L19" class="blob-num js-line-number js-code-nav-line-number" data-line-number="19"></td>
          <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   QUICK NOTES:</span></td>
        </tr>
        <tr>
          <td id="L20" class="blob-num js-line-number js-code-nav-line-number" data-line-number="20"></td>
          <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      Primarily of interest to game developers and other people who can</span></td>
        </tr>
        <tr>
          <td id="L21" class="blob-num js-line-number js-code-nav-line-number" data-line-number="21"></td>
          <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          avoid problematic images and only need the trivial interface</span></td>
        </tr>
        <tr>
          <td id="L22" class="blob-num js-line-number js-code-nav-line-number" data-line-number="22"></td>
          <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L23" class="blob-num js-line-number js-code-nav-line-number" data-line-number="23"></td>
          <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      JPEG baseline &amp; progressive (12 bpc/arithmetic not supported, same as stock IJG lib)</span></td>
        </tr>
        <tr>
          <td id="L24" class="blob-num js-line-number js-code-nav-line-number" data-line-number="24"></td>
          <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      PNG 1/2/4/8/16-bit-per-channel</span></td>
        </tr>
        <tr>
          <td id="L25" class="blob-num js-line-number js-code-nav-line-number" data-line-number="25"></td>
          <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L26" class="blob-num js-line-number js-code-nav-line-number" data-line-number="26"></td>
          <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      TGA (not sure what subset, if a subset)</span></td>
        </tr>
        <tr>
          <td id="L27" class="blob-num js-line-number js-code-nav-line-number" data-line-number="27"></td>
          <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      BMP non-1bpp, non-RLE</span></td>
        </tr>
        <tr>
          <td id="L28" class="blob-num js-line-number js-code-nav-line-number" data-line-number="28"></td>
          <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      PSD (composited view only, no extra channels, 8/16 bit-per-channel)</span></td>
        </tr>
        <tr>
          <td id="L29" class="blob-num js-line-number js-code-nav-line-number" data-line-number="29"></td>
          <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L30" class="blob-num js-line-number js-code-nav-line-number" data-line-number="30"></td>
          <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      GIF (*comp always reports as 4-channel)</span></td>
        </tr>
        <tr>
          <td id="L31" class="blob-num js-line-number js-code-nav-line-number" data-line-number="31"></td>
          <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      HDR (radiance rgbE format)</span></td>
        </tr>
        <tr>
          <td id="L32" class="blob-num js-line-number js-code-nav-line-number" data-line-number="32"></td>
          <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      PIC (Softimage PIC)</span></td>
        </tr>
        <tr>
          <td id="L33" class="blob-num js-line-number js-code-nav-line-number" data-line-number="33"></td>
          <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      PNM (PPM and PGM binary only)</span></td>
        </tr>
        <tr>
          <td id="L34" class="blob-num js-line-number js-code-nav-line-number" data-line-number="34"></td>
          <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L35" class="blob-num js-line-number js-code-nav-line-number" data-line-number="35"></td>
          <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      Animated GIF still needs a proper API, but here&#39;s one way to do it:</span></td>
        </tr>
        <tr>
          <td id="L36" class="blob-num js-line-number js-code-nav-line-number" data-line-number="36"></td>
          <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          http://gist.github.com/urraka/685d9a6340b26b830d49</span></td>
        </tr>
        <tr>
          <td id="L37" class="blob-num js-line-number js-code-nav-line-number" data-line-number="37"></td>
          <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L38" class="blob-num js-line-number js-code-nav-line-number" data-line-number="38"></td>
          <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      - decode from memory or through FILE (define STBI_NO_STDIO to remove code)</span></td>
        </tr>
        <tr>
          <td id="L39" class="blob-num js-line-number js-code-nav-line-number" data-line-number="39"></td>
          <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      - decode from arbitrary I/O callbacks</span></td>
        </tr>
        <tr>
          <td id="L40" class="blob-num js-line-number js-code-nav-line-number" data-line-number="40"></td>
          <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      - SIMD acceleration on x86/x64 (SSE2) and ARM (NEON)</span></td>
        </tr>
        <tr>
          <td id="L41" class="blob-num js-line-number js-code-nav-line-number" data-line-number="41"></td>
          <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L42" class="blob-num js-line-number js-code-nav-line-number" data-line-number="42"></td>
          <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   Full documentation under &quot;DOCUMENTATION&quot; below.</span></td>
        </tr>
        <tr>
          <td id="L43" class="blob-num js-line-number js-code-nav-line-number" data-line-number="43"></td>
          <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L44" class="blob-num js-line-number js-code-nav-line-number" data-line-number="44"></td>
          <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L45" class="blob-num js-line-number js-code-nav-line-number" data-line-number="45"></td>
          <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c">LICENSE</span></td>
        </tr>
        <tr>
          <td id="L46" class="blob-num js-line-number js-code-nav-line-number" data-line-number="46"></td>
          <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L47" class="blob-num js-line-number js-code-nav-line-number" data-line-number="47"></td>
          <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  See end of file for license information.</span></td>
        </tr>
        <tr>
          <td id="L48" class="blob-num js-line-number js-code-nav-line-number" data-line-number="48"></td>
          <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L49" class="blob-num js-line-number js-code-nav-line-number" data-line-number="49"></td>
          <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c">RECENT REVISION HISTORY:</span></td>
        </tr>
        <tr>
          <td id="L50" class="blob-num js-line-number js-code-nav-line-number" data-line-number="50"></td>
          <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L51" class="blob-num js-line-number js-code-nav-line-number" data-line-number="51"></td>
          <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.27  (2021-07-11) document stbi_info better, 16-bit PNM support, bug fixes</span></td>
        </tr>
        <tr>
          <td id="L52" class="blob-num js-line-number js-code-nav-line-number" data-line-number="52"></td>
          <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.26  (2020-07-13) many minor fixes</span></td>
        </tr>
        <tr>
          <td id="L53" class="blob-num js-line-number js-code-nav-line-number" data-line-number="53"></td>
          <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.25  (2020-02-02) fix warnings</span></td>
        </tr>
        <tr>
          <td id="L54" class="blob-num js-line-number js-code-nav-line-number" data-line-number="54"></td>
          <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.24  (2020-02-02) fix warnings; thread-local failure_reason and flip_vertically</span></td>
        </tr>
        <tr>
          <td id="L55" class="blob-num js-line-number js-code-nav-line-number" data-line-number="55"></td>
          <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.23  (2019-08-11) fix clang static analysis warning</span></td>
        </tr>
        <tr>
          <td id="L56" class="blob-num js-line-number js-code-nav-line-number" data-line-number="56"></td>
          <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.22  (2019-03-04) gif fixes, fix warnings</span></td>
        </tr>
        <tr>
          <td id="L57" class="blob-num js-line-number js-code-nav-line-number" data-line-number="57"></td>
          <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.21  (2019-02-25) fix typo in comment</span></td>
        </tr>
        <tr>
          <td id="L58" class="blob-num js-line-number js-code-nav-line-number" data-line-number="58"></td>
          <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.20  (2019-02-07) support utf8 filenames in Windows; fix warnings and platform ifdefs</span></td>
        </tr>
        <tr>
          <td id="L59" class="blob-num js-line-number js-code-nav-line-number" data-line-number="59"></td>
          <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.19  (2018-02-11) fix warning</span></td>
        </tr>
        <tr>
          <td id="L60" class="blob-num js-line-number js-code-nav-line-number" data-line-number="60"></td>
          <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.18  (2018-01-30) fix warnings</span></td>
        </tr>
        <tr>
          <td id="L61" class="blob-num js-line-number js-code-nav-line-number" data-line-number="61"></td>
          <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.17  (2018-01-29) bugfix, 1-bit BMP, 16-bitness query, fix warnings</span></td>
        </tr>
        <tr>
          <td id="L62" class="blob-num js-line-number js-code-nav-line-number" data-line-number="62"></td>
          <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.16  (2017-07-23) all functions have 16-bit variants; optimizations; bugfixes</span></td>
        </tr>
        <tr>
          <td id="L63" class="blob-num js-line-number js-code-nav-line-number" data-line-number="63"></td>
          <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.15  (2017-03-18) fix png-1,2,4; all Imagenet JPGs; no runtime SSE detection on GCC</span></td>
        </tr>
        <tr>
          <td id="L64" class="blob-num js-line-number js-code-nav-line-number" data-line-number="64"></td>
          <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.14  (2017-03-03) remove deprecated STBI_JPEG_OLD; fixes for Imagenet JPGs</span></td>
        </tr>
        <tr>
          <td id="L65" class="blob-num js-line-number js-code-nav-line-number" data-line-number="65"></td>
          <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.13  (2016-12-04) experimental 16-bit API, only for PNG so far; fixes</span></td>
        </tr>
        <tr>
          <td id="L66" class="blob-num js-line-number js-code-nav-line-number" data-line-number="66"></td>
          <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.12  (2016-04-02) fix typo in 2.11 PSD fix that caused crashes</span></td>
        </tr>
        <tr>
          <td id="L67" class="blob-num js-line-number js-code-nav-line-number" data-line-number="67"></td>
          <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.11  (2016-04-02) 16-bit PNGS; enable SSE2 in non-gcc x64</span></td>
        </tr>
        <tr>
          <td id="L68" class="blob-num js-line-number js-code-nav-line-number" data-line-number="68"></td>
          <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         RGB-format JPEG; remove white matting in PSD;</span></td>
        </tr>
        <tr>
          <td id="L69" class="blob-num js-line-number js-code-nav-line-number" data-line-number="69"></td>
          <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         allocate large structures on the stack;</span></td>
        </tr>
        <tr>
          <td id="L70" class="blob-num js-line-number js-code-nav-line-number" data-line-number="70"></td>
          <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         correct channel count for PNG &amp; BMP</span></td>
        </tr>
        <tr>
          <td id="L71" class="blob-num js-line-number js-code-nav-line-number" data-line-number="71"></td>
          <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.10  (2016-01-22) avoid warning introduced in 2.09</span></td>
        </tr>
        <tr>
          <td id="L72" class="blob-num js-line-number js-code-nav-line-number" data-line-number="72"></td>
          <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.09  (2016-01-16) 16-bit TGA; comments in PNM files; STBI_REALLOC_SIZED</span></td>
        </tr>
        <tr>
          <td id="L73" class="blob-num js-line-number js-code-nav-line-number" data-line-number="73"></td>
          <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L74" class="blob-num js-line-number js-code-nav-line-number" data-line-number="74"></td>
          <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   See end of file for full revision history.</span></td>
        </tr>
        <tr>
          <td id="L75" class="blob-num js-line-number js-code-nav-line-number" data-line-number="75"></td>
          <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L76" class="blob-num js-line-number js-code-nav-line-number" data-line-number="76"></td>
          <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L77" class="blob-num js-line-number js-code-nav-line-number" data-line-number="77"></td>
          <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> ============================    Contributors    =========================</span></td>
        </tr>
        <tr>
          <td id="L78" class="blob-num js-line-number js-code-nav-line-number" data-line-number="78"></td>
          <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L79" class="blob-num js-line-number js-code-nav-line-number" data-line-number="79"></td>
          <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Image formats                          Extensions, features</span></td>
        </tr>
        <tr>
          <td id="L80" class="blob-num js-line-number js-code-nav-line-number" data-line-number="80"></td>
          <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Sean Barrett (jpeg, png, bmp)          Jetro Lauha (stbi_info)</span></td>
        </tr>
        <tr>
          <td id="L81" class="blob-num js-line-number js-code-nav-line-number" data-line-number="81"></td>
          <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Nicolas Schulz (hdr, psd)              Martin &quot;SpartanJ&quot; Golini (stbi_info)</span></td>
        </tr>
        <tr>
          <td id="L82" class="blob-num js-line-number js-code-nav-line-number" data-line-number="82"></td>
          <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Jonathan Dummer (tga)                  James &quot;moose2000&quot; Brown (iPhone PNG)</span></td>
        </tr>
        <tr>
          <td id="L83" class="blob-num js-line-number js-code-nav-line-number" data-line-number="83"></td>
          <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Jean-Marc Lienher (gif)                Ben &quot;Disch&quot; Wenger (io callbacks)</span></td>
        </tr>
        <tr>
          <td id="L84" class="blob-num js-line-number js-code-nav-line-number" data-line-number="84"></td>
          <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Tom Seddon (pic)                       Omar Cornut (1/2/4-bit PNG)</span></td>
        </tr>
        <tr>
          <td id="L85" class="blob-num js-line-number js-code-nav-line-number" data-line-number="85"></td>
          <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Thatcher Ulrich (psd)                  Nicolas Guillemot (vertical flip)</span></td>
        </tr>
        <tr>
          <td id="L86" class="blob-num js-line-number js-code-nav-line-number" data-line-number="86"></td>
          <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Ken Miller (pgm, ppm)                  Richard Mitton (16-bit PSD)</span></td>
        </tr>
        <tr>
          <td id="L87" class="blob-num js-line-number js-code-nav-line-number" data-line-number="87"></td>
          <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    github:urraka (animated gif)           Junggon Kim (PNM comments)</span></td>
        </tr>
        <tr>
          <td id="L88" class="blob-num js-line-number js-code-nav-line-number" data-line-number="88"></td>
          <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Christopher Forseth (animated gif)     Daniel Gibson (16-bit TGA)</span></td>
        </tr>
        <tr>
          <td id="L89" class="blob-num js-line-number js-code-nav-line-number" data-line-number="89"></td>
          <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                           socks-the-fox (16-bit PNG)</span></td>
        </tr>
        <tr>
          <td id="L90" class="blob-num js-line-number js-code-nav-line-number" data-line-number="90"></td>
          <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                           Jeremy Sawicki (handle all ImageNet JPGs)</span></td>
        </tr>
        <tr>
          <td id="L91" class="blob-num js-line-number js-code-nav-line-number" data-line-number="91"></td>
          <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Optimizations &amp; bugfixes                  Mikhail Morozov (1-bit BMP)</span></td>
        </tr>
        <tr>
          <td id="L92" class="blob-num js-line-number js-code-nav-line-number" data-line-number="92"></td>
          <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Fabian &quot;ryg&quot; Giesen                    Anael Seghezzi (is-16-bit query)</span></td>
        </tr>
        <tr>
          <td id="L93" class="blob-num js-line-number js-code-nav-line-number" data-line-number="93"></td>
          <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Arseny Kapoulkine                      Simon Breuss (16-bit PNM)</span></td>
        </tr>
        <tr>
          <td id="L94" class="blob-num js-line-number js-code-nav-line-number" data-line-number="94"></td>
          <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    John-Mark Allen</span></td>
        </tr>
        <tr>
          <td id="L95" class="blob-num js-line-number js-code-nav-line-number" data-line-number="95"></td>
          <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Carmelo J Fdez-Aguera</span></td>
        </tr>
        <tr>
          <td id="L96" class="blob-num js-line-number js-code-nav-line-number" data-line-number="96"></td>
          <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L97" class="blob-num js-line-number js-code-nav-line-number" data-line-number="97"></td>
          <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> Bug &amp; warning fixes</span></td>
        </tr>
        <tr>
          <td id="L98" class="blob-num js-line-number js-code-nav-line-number" data-line-number="98"></td>
          <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Marc LeBlanc            David Woo          Guillaume George     Martins Mozeiko</span></td>
        </tr>
        <tr>
          <td id="L99" class="blob-num js-line-number js-code-nav-line-number" data-line-number="99"></td>
          <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Christpher Lloyd        Jerry Jansson      Joseph Thomson       Blazej Dariusz Roszkowski</span></td>
        </tr>
        <tr>
          <td id="L100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="100"></td>
          <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Phil Jordan                                Dave Moore           Roy Eltham</span></td>
        </tr>
        <tr>
          <td id="L101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="101"></td>
          <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Hayaki Saito            Nathan Reed        Won Chun</span></td>
        </tr>
        <tr>
          <td id="L102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="102"></td>
          <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Luke Graham             Johan Duparc       Nick Verigakis       the Horde3D community</span></td>
        </tr>
        <tr>
          <td id="L103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="103"></td>
          <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Thomas Ruf              Ronny Chevalier                         github:rlyeh</span></td>
        </tr>
        <tr>
          <td id="L104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="104"></td>
          <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Janez Zemva             John Bartholomew   Michal Cichon        github:romigrou</span></td>
        </tr>
        <tr>
          <td id="L105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="105"></td>
          <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Jonathan Blow           Ken Hamada         Tero Hanninen        github:svdijk</span></td>
        </tr>
        <tr>
          <td id="L106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="106"></td>
          <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Eugene Golushkov        Laurent Gomila     Cort Stratton        github:snagar</span></td>
        </tr>
        <tr>
          <td id="L107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="107"></td>
          <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Aruelien Pocheville     Sergio Gonzalez    Thibault Reuille     github:Zelex</span></td>
        </tr>
        <tr>
          <td id="L108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="108"></td>
          <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Cass Everitt            Ryamond Barbiero                        github:grim210</span></td>
        </tr>
        <tr>
          <td id="L109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="109"></td>
          <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Paul Du Bois            Engin Manap        Aldo Culquicondor    github:sammyhw</span></td>
        </tr>
        <tr>
          <td id="L110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="110"></td>
          <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Philipp Wiesemann       Dale Weiler        Oriol Ferrer Mesia   github:phprus</span></td>
        </tr>
        <tr>
          <td id="L111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="111"></td>
          <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Josh Tobin                                 Matthew Gregan       github:poppolopoppo</span></td>
        </tr>
        <tr>
          <td id="L112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="112"></td>
          <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Julian Raschke          Gregory Mullen     Christian Floisand   github:darealshinji</span></td>
        </tr>
        <tr>
          <td id="L113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="113"></td>
          <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Baldur Karlsson         Kevin Schmidt      JR Smith             github:Michaelangel007</span></td>
        </tr>
        <tr>
          <td id="L114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="114"></td>
          <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                            Brad Weinberger    Matvey Cherevko      github:mosra</span></td>
        </tr>
        <tr>
          <td id="L115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="115"></td>
          <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Luca Sas                Alexander Veselov  Zack Middleton       [reserved]</span></td>
        </tr>
        <tr>
          <td id="L116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="116"></td>
          <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    Ryan C. Gordon          [reserved]                              [reserved]</span></td>
        </tr>
        <tr>
          <td id="L117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="117"></td>
          <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     DO NOT ADD YOUR NAME HERE</span></td>
        </tr>
        <tr>
          <td id="L118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="118"></td>
          <td id="LC118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="119"></td>
          <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                     Jacko Dirks</span></td>
        </tr>
        <tr>
          <td id="L120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="120"></td>
          <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="121"></td>
          <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  To add your name to the credits, pick a random blank space in the middle and fill it.</span></td>
        </tr>
        <tr>
          <td id="L122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="122"></td>
          <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  80% of merge conflicts on stb PRs are due to people adding their name at the end</span></td>
        </tr>
        <tr>
          <td id="L123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="123"></td>
          <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  of the credits.</span></td>
        </tr>
        <tr>
          <td id="L124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="124"></td>
          <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="125"></td>
          <td id="LC125" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="126"></td>
          <td id="LC126" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_INCLUDE_STB_IMAGE_H</td>
        </tr>
        <tr>
          <td id="L127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="127"></td>
          <td id="LC127" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_INCLUDE_STB_IMAGE_H</span></td>
        </tr>
        <tr>
          <td id="L128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="128"></td>
          <td id="LC128" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="129"></td>
          <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> DOCUMENTATION</span></td>
        </tr>
        <tr>
          <td id="L130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="130"></td>
          <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="131"></td>
          <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Limitations:</span></td>
        </tr>
        <tr>
          <td id="L132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="132"></td>
          <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    - no 12-bit-per-channel JPEG</span></td>
        </tr>
        <tr>
          <td id="L133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="133"></td>
          <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    - no JPEGs with arithmetic coding</span></td>
        </tr>
        <tr>
          <td id="L134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="134"></td>
          <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    - GIF always returns *comp=4</span></td>
        </tr>
        <tr>
          <td id="L135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="135"></td>
          <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="136"></td>
          <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Basic usage (see HDR discussion below for HDR usage):</span></td>
        </tr>
        <tr>
          <td id="L137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="137"></td>
          <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    int x,y,n;</span></td>
        </tr>
        <tr>
          <td id="L138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="138"></td>
          <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    unsigned char *data = stbi_load(filename, &amp;x, &amp;y, &amp;n, 0);</span></td>
        </tr>
        <tr>
          <td id="L139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="139"></td>
          <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    // ... process data if not NULL ...</span></td>
        </tr>
        <tr>
          <td id="L140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="140"></td>
          <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    // ... x = width, y = height, n = # 8-bit components per pixel ...</span></td>
        </tr>
        <tr>
          <td id="L141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="141"></td>
          <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    // ... replace &#39;0&#39; with &#39;1&#39;..&#39;4&#39; to force that many components per pixel</span></td>
        </tr>
        <tr>
          <td id="L142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="142"></td>
          <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    // ... but &#39;n&#39; will always be the number that it would have been if you said 0</span></td>
        </tr>
        <tr>
          <td id="L143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="143"></td>
          <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    stbi_image_free(data)</span></td>
        </tr>
        <tr>
          <td id="L144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="144"></td>
          <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="145"></td>
          <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Standard parameters:</span></td>
        </tr>
        <tr>
          <td id="L146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="146"></td>
          <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    int *x                 -- outputs image width in pixels</span></td>
        </tr>
        <tr>
          <td id="L147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="147"></td>
          <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    int *y                 -- outputs image height in pixels</span></td>
        </tr>
        <tr>
          <td id="L148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="148"></td>
          <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    int *channels_in_file  -- outputs # of image components in image file</span></td>
        </tr>
        <tr>
          <td id="L149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="149"></td>
          <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    int desired_channels   -- if non-zero, # of image components requested in result</span></td>
        </tr>
        <tr>
          <td id="L150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="150"></td>
          <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="151"></td>
          <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The return value from an image loader is an &#39;unsigned char *&#39; which points</span></td>
        </tr>
        <tr>
          <td id="L152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="152"></td>
          <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to the pixel data, or NULL on an allocation failure or if the image is</span></td>
        </tr>
        <tr>
          <td id="L153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="153"></td>
          <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> corrupt or invalid. The pixel data consists of *y scanlines of *x pixels,</span></td>
        </tr>
        <tr>
          <td id="L154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="154"></td>
          <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> with each pixel consisting of N interleaved 8-bit components; the first</span></td>
        </tr>
        <tr>
          <td id="L155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="155"></td>
          <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> pixel pointed to is top-left-most in the image. There is no padding between</span></td>
        </tr>
        <tr>
          <td id="L156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="156"></td>
          <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> image scanlines or between pixels, regardless of format. The number of</span></td>
        </tr>
        <tr>
          <td id="L157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="157"></td>
          <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> components N is &#39;desired_channels&#39; if desired_channels is non-zero, or</span></td>
        </tr>
        <tr>
          <td id="L158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="158"></td>
          <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *channels_in_file otherwise. If desired_channels is non-zero,</span></td>
        </tr>
        <tr>
          <td id="L159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="159"></td>
          <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *channels_in_file has the number of components that _would_ have been</span></td>
        </tr>
        <tr>
          <td id="L160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="160"></td>
          <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> output otherwise. E.g. if you set desired_channels to 4, you will always</span></td>
        </tr>
        <tr>
          <td id="L161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="161"></td>
          <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get RGBA output, but you can check *channels_in_file to see if it&#39;s trivially</span></td>
        </tr>
        <tr>
          <td id="L162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="162"></td>
          <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> opaque because e.g. there were only 3 channels in the source image.</span></td>
        </tr>
        <tr>
          <td id="L163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="163"></td>
          <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="164"></td>
          <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> An output image with N components has the following components interleaved</span></td>
        </tr>
        <tr>
          <td id="L165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="165"></td>
          <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in this order in each pixel:</span></td>
        </tr>
        <tr>
          <td id="L166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="166"></td>
          <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="167"></td>
          <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     N=#comp     components</span></td>
        </tr>
        <tr>
          <td id="L168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="168"></td>
          <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       1           grey</span></td>
        </tr>
        <tr>
          <td id="L169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="169"></td>
          <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       2           grey, alpha</span></td>
        </tr>
        <tr>
          <td id="L170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="170"></td>
          <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       3           red, green, blue</span></td>
        </tr>
        <tr>
          <td id="L171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="171"></td>
          <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       4           red, green, blue, alpha</span></td>
        </tr>
        <tr>
          <td id="L172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="172"></td>
          <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="173"></td>
          <td id="LC173" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If image loading fails for any reason, the return value will be NULL,</span></td>
        </tr>
        <tr>
          <td id="L174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="174"></td>
          <td id="LC174" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and *x, *y, *channels_in_file will be unchanged. The function</span></td>
        </tr>
        <tr>
          <td id="L175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="175"></td>
          <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi_failure_reason() can be queried for an extremely brief, end-user</span></td>
        </tr>
        <tr>
          <td id="L176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="176"></td>
          <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> unfriendly explanation of why the load failed. Define STBI_NO_FAILURE_STRINGS</span></td>
        </tr>
        <tr>
          <td id="L177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="177"></td>
          <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to avoid compiling these strings at all, and STBI_FAILURE_USERMSG to get slightly</span></td>
        </tr>
        <tr>
          <td id="L178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="178"></td>
          <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> more user-friendly ones.</span></td>
        </tr>
        <tr>
          <td id="L179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="179"></td>
          <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="180"></td>
          <td id="LC180" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Paletted PNG, BMP, GIF, and PIC images are automatically depalettized.</span></td>
        </tr>
        <tr>
          <td id="L181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="181"></td>
          <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="182"></td>
          <td id="LC182" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> To query the width, height and component count of an image without having to</span></td>
        </tr>
        <tr>
          <td id="L183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="183"></td>
          <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> decode the full file, you can use the stbi_info family of functions:</span></td>
        </tr>
        <tr>
          <td id="L184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="184"></td>
          <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="185"></td>
          <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   int x,y,n,ok;</span></td>
        </tr>
        <tr>
          <td id="L186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="186"></td>
          <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   ok = stbi_info(filename, &amp;x, &amp;y, &amp;n);</span></td>
        </tr>
        <tr>
          <td id="L187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="187"></td>
          <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   // returns ok=1 and sets x, y, n if image is a supported format,</span></td>
        </tr>
        <tr>
          <td id="L188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="188"></td>
          <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   // 0 otherwise.</span></td>
        </tr>
        <tr>
          <td id="L189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="189"></td>
          <td id="LC189" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="190"></td>
          <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note that stb_image pervasively uses ints in its public API for sizes,</span></td>
        </tr>
        <tr>
          <td id="L191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="191"></td>
          <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> including sizes of memory buffers. This is now part of the API and thus</span></td>
        </tr>
        <tr>
          <td id="L192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="192"></td>
          <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> hard to change without causing breakage. As a result, the various image</span></td>
        </tr>
        <tr>
          <td id="L193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="193"></td>
          <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> loaders all have certain limits on image size; these differ somewhat</span></td>
        </tr>
        <tr>
          <td id="L194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="194"></td>
          <td id="LC194" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> by format but generally boil down to either just under 2GB or just under</span></td>
        </tr>
        <tr>
          <td id="L195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="195"></td>
          <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 1GB. When the decoded image would be larger than this, stb_image decoding</span></td>
        </tr>
        <tr>
          <td id="L196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="196"></td>
          <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> will fail.</span></td>
        </tr>
        <tr>
          <td id="L197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="197"></td>
          <td id="LC197" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="198"></td>
          <td id="LC198" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Additionally, stb_image will reject image files that have any of their</span></td>
        </tr>
        <tr>
          <td id="L199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="199"></td>
          <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> dimensions set to a larger value than the configurable STBI_MAX_DIMENSIONS,</span></td>
        </tr>
        <tr>
          <td id="L200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="200"></td>
          <td id="LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> which defaults to 2**24 = 16777216 pixels. Due to the above memory limit,</span></td>
        </tr>
        <tr>
          <td id="L201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="201"></td>
          <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the only way to have an image with such dimensions load correctly</span></td>
        </tr>
        <tr>
          <td id="L202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="202"></td>
          <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> is for it to have a rather extreme aspect ratio. Either way, the</span></td>
        </tr>
        <tr>
          <td id="L203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="203"></td>
          <td id="LC203" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> assumption here is that such larger images are likely to be malformed</span></td>
        </tr>
        <tr>
          <td id="L204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="204"></td>
          <td id="LC204" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> or malicious. If you do need to load an image with individual dimensions</span></td>
        </tr>
        <tr>
          <td id="L205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="205"></td>
          <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> larger than that, and it still fits in the overall size limit, you can</span></td>
        </tr>
        <tr>
          <td id="L206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="206"></td>
          <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> #define STBI_MAX_DIMENSIONS on your own to be something larger.</span></td>
        </tr>
        <tr>
          <td id="L207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="207"></td>
          <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="208"></td>
          <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="209"></td>
          <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="210"></td>
          <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> UNICODE:</span></td>
        </tr>
        <tr>
          <td id="L211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="211"></td>
          <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="212"></td>
          <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   If compiling for Windows and you wish to use Unicode filenames, compile</span></td>
        </tr>
        <tr>
          <td id="L213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="213"></td>
          <td id="LC213" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   with</span></td>
        </tr>
        <tr>
          <td id="L214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="214"></td>
          <td id="LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>       #define STBI_WINDOWS_UTF8</span></td>
        </tr>
        <tr>
          <td id="L215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="215"></td>
          <td id="LC215" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   and pass utf8-encoded filenames. Call stbi_convert_wchar_to_utf8 to convert</span></td>
        </tr>
        <tr>
          <td id="L216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="216"></td>
          <td id="LC216" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   Windows wchar_t filenames to utf8.</span></td>
        </tr>
        <tr>
          <td id="L217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="217"></td>
          <td id="LC217" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="218"></td>
          <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="219"></td>
          <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="220"></td>
          <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Philosophy</span></td>
        </tr>
        <tr>
          <td id="L221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="221"></td>
          <td id="LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="222"></td>
          <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stb libraries are designed with the following priorities:</span></td>
        </tr>
        <tr>
          <td id="L223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="223"></td>
          <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="224"></td>
          <td id="LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    1. easy to use</span></td>
        </tr>
        <tr>
          <td id="L225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="225"></td>
          <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    2. easy to maintain</span></td>
        </tr>
        <tr>
          <td id="L226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="226"></td>
          <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    3. good performance</span></td>
        </tr>
        <tr>
          <td id="L227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="227"></td>
          <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="228"></td>
          <td id="LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Sometimes I let &quot;good performance&quot; creep up in priority over &quot;easy to maintain&quot;,</span></td>
        </tr>
        <tr>
          <td id="L229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="229"></td>
          <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and for best performance I may provide less-easy-to-use APIs that give higher</span></td>
        </tr>
        <tr>
          <td id="L230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="230"></td>
          <td id="LC230" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> performance, in addition to the easy-to-use ones. Nevertheless, it&#39;s important</span></td>
        </tr>
        <tr>
          <td id="L231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="231"></td>
          <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to keep in mind that from the standpoint of you, a client of this library,</span></td>
        </tr>
        <tr>
          <td id="L232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="232"></td>
          <td id="LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> all you care about is #1 and #3, and stb libraries DO NOT emphasize #3 above all.</span></td>
        </tr>
        <tr>
          <td id="L233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="233"></td>
          <td id="LC233" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="234"></td>
          <td id="LC234" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Some secondary priorities arise directly from the first two, some of which</span></td>
        </tr>
        <tr>
          <td id="L235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="235"></td>
          <td id="LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> provide more explicit reasons why performance can&#39;t be emphasized.</span></td>
        </tr>
        <tr>
          <td id="L236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="236"></td>
          <td id="LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="237"></td>
          <td id="LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    - Portable (&quot;ease of use&quot;)</span></td>
        </tr>
        <tr>
          <td id="L238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="238"></td>
          <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    - Small source code footprint (&quot;easy to maintain&quot;)</span></td>
        </tr>
        <tr>
          <td id="L239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="239"></td>
          <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    - No dependencies (&quot;ease of use&quot;)</span></td>
        </tr>
        <tr>
          <td id="L240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="240"></td>
          <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="241"></td>
          <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="242"></td>
          <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="243"></td>
          <td id="LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> I/O callbacks</span></td>
        </tr>
        <tr>
          <td id="L244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="244"></td>
          <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="245"></td>
          <td id="LC245" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> I/O callbacks allow you to read from arbitrary sources, like packaged</span></td>
        </tr>
        <tr>
          <td id="L246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="246"></td>
          <td id="LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> files or some other source. Data read from callbacks are processed</span></td>
        </tr>
        <tr>
          <td id="L247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="247"></td>
          <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> through a small internal buffer (currently 128 bytes) to try to reduce</span></td>
        </tr>
        <tr>
          <td id="L248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="248"></td>
          <td id="LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> overhead.</span></td>
        </tr>
        <tr>
          <td id="L249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="249"></td>
          <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="250"></td>
          <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The three functions you must define are &quot;read&quot; (reads some bytes of data),</span></td>
        </tr>
        <tr>
          <td id="L251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="251"></td>
          <td id="LC251" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> &quot;skip&quot; (skips some bytes of data), &quot;eof&quot; (reports if the stream is at the end).</span></td>
        </tr>
        <tr>
          <td id="L252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="252"></td>
          <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="253"></td>
          <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="254"></td>
          <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="255"></td>
          <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> SIMD support</span></td>
        </tr>
        <tr>
          <td id="L256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="256"></td>
          <td id="LC256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="257"></td>
          <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The JPEG decoder will try to automatically use SIMD kernels on x86 when</span></td>
        </tr>
        <tr>
          <td id="L258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="258"></td>
          <td id="LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> supported by the compiler. For ARM Neon support, you must explicitly</span></td>
        </tr>
        <tr>
          <td id="L259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="259"></td>
          <td id="LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> request it.</span></td>
        </tr>
        <tr>
          <td id="L260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="260"></td>
          <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="261"></td>
          <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> (The old do-it-yourself SIMD API is no longer supported in the current</span></td>
        </tr>
        <tr>
          <td id="L262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="262"></td>
          <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> code.)</span></td>
        </tr>
        <tr>
          <td id="L263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="263"></td>
          <td id="LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="264"></td>
          <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> On x86, SSE2 will automatically be used when available based on a run-time</span></td>
        </tr>
        <tr>
          <td id="L265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="265"></td>
          <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> test; if not, the generic C versions are used as a fall-back. On ARM targets,</span></td>
        </tr>
        <tr>
          <td id="L266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="266"></td>
          <td id="LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the typical path is to have separate builds for NEON and non-NEON devices</span></td>
        </tr>
        <tr>
          <td id="L267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="267"></td>
          <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> (at least this is true for iOS and Android). Therefore, the NEON support is</span></td>
        </tr>
        <tr>
          <td id="L268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="268"></td>
          <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> toggled by a build flag: define STBI_NEON to get NEON loops.</span></td>
        </tr>
        <tr>
          <td id="L269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="269"></td>
          <td id="LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="270"></td>
          <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If for some reason you do not want to use any of SIMD code, or if</span></td>
        </tr>
        <tr>
          <td id="L271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="271"></td>
          <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> you have issues compiling it, you can disable it entirely by</span></td>
        </tr>
        <tr>
          <td id="L272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="272"></td>
          <td id="LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> defining STBI_NO_SIMD.</span></td>
        </tr>
        <tr>
          <td id="L273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="273"></td>
          <td id="LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="274"></td>
          <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="275"></td>
          <td id="LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="276"></td>
          <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> HDR image support   (disable by defining STBI_NO_HDR)</span></td>
        </tr>
        <tr>
          <td id="L277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="277"></td>
          <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="278"></td>
          <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stb_image supports loading HDR images in general, and currently the Radiance</span></td>
        </tr>
        <tr>
          <td id="L279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="279"></td>
          <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> .HDR file format specifically. You can still load any file through the existing</span></td>
        </tr>
        <tr>
          <td id="L280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="280"></td>
          <td id="LC280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> interface; if you attempt to load an HDR file, it will be automatically remapped</span></td>
        </tr>
        <tr>
          <td id="L281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="281"></td>
          <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to LDR, assuming gamma 2.2 and an arbitrary scale factor defaulting to 1;</span></td>
        </tr>
        <tr>
          <td id="L282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="282"></td>
          <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> both of these constants can be reconfigured through this interface:</span></td>
        </tr>
        <tr>
          <td id="L283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="283"></td>
          <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="284"></td>
          <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     stbi_hdr_to_ldr_gamma(2.2f);</span></td>
        </tr>
        <tr>
          <td id="L285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="285"></td>
          <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     stbi_hdr_to_ldr_scale(1.0f);</span></td>
        </tr>
        <tr>
          <td id="L286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="286"></td>
          <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="287"></td>
          <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> (note, do not use _inverse_ constants; stbi_image will invert them</span></td>
        </tr>
        <tr>
          <td id="L288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="288"></td>
          <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> appropriately).</span></td>
        </tr>
        <tr>
          <td id="L289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="289"></td>
          <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="290"></td>
          <td id="LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Additionally, there is a new, parallel interface for loading files as</span></td>
        </tr>
        <tr>
          <td id="L291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="291"></td>
          <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> (linear) floats to preserve the full dynamic range:</span></td>
        </tr>
        <tr>
          <td id="L292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="292"></td>
          <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="293"></td>
          <td id="LC293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    float *data = stbi_loadf(filename, &amp;x, &amp;y, &amp;n, 0);</span></td>
        </tr>
        <tr>
          <td id="L294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="294"></td>
          <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="295"></td>
          <td id="LC295" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> If you load LDR images through this interface, those images will</span></td>
        </tr>
        <tr>
          <td id="L296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="296"></td>
          <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> be promoted to floating point values, run through the inverse of</span></td>
        </tr>
        <tr>
          <td id="L297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="297"></td>
          <td id="LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> constants corresponding to the above:</span></td>
        </tr>
        <tr>
          <td id="L298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="298"></td>
          <td id="LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="299"></td>
          <td id="LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     stbi_ldr_to_hdr_scale(1.0f);</span></td>
        </tr>
        <tr>
          <td id="L300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="300"></td>
          <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     stbi_ldr_to_hdr_gamma(2.2f);</span></td>
        </tr>
        <tr>
          <td id="L301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="301"></td>
          <td id="LC301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="302"></td>
          <td id="LC302" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Finally, given a filename (or an open file or memory block--see header</span></td>
        </tr>
        <tr>
          <td id="L303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="303"></td>
          <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> file for details) containing image data, you can query for the &quot;most</span></td>
        </tr>
        <tr>
          <td id="L304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="304"></td>
          <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> appropriate&quot; interface to use (that is, whether the image is HDR or</span></td>
        </tr>
        <tr>
          <td id="L305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="305"></td>
          <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> not), using:</span></td>
        </tr>
        <tr>
          <td id="L306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="306"></td>
          <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="307"></td>
          <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     stbi_is_hdr(char *filename);</span></td>
        </tr>
        <tr>
          <td id="L308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="308"></td>
          <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="309"></td>
          <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="310"></td>
          <td id="LC310" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="311"></td>
          <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> iPhone PNG support:</span></td>
        </tr>
        <tr>
          <td id="L312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="312"></td>
          <td id="LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="313"></td>
          <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We optionally support converting iPhone-formatted PNGs (which store</span></td>
        </tr>
        <tr>
          <td id="L314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="314"></td>
          <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> premultiplied BGRA) back to RGB, even though they&#39;re internally encoded</span></td>
        </tr>
        <tr>
          <td id="L315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="315"></td>
          <td id="LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> differently. To enable this conversion, call</span></td>
        </tr>
        <tr>
          <td id="L316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="316"></td>
          <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi_convert_iphone_png_to_rgb(1).</span></td>
        </tr>
        <tr>
          <td id="L317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="317"></td>
          <td id="LC317" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="318"></td>
          <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Call stbi_set_unpremultiply_on_load(1) as well to force a divide per</span></td>
        </tr>
        <tr>
          <td id="L319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="319"></td>
          <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> pixel to remove any premultiplied alpha *only* if the image file explicitly</span></td>
        </tr>
        <tr>
          <td id="L320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="320"></td>
          <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> says there&#39;s premultiplied data (currently only happens in iPhone images,</span></td>
        </tr>
        <tr>
          <td id="L321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="321"></td>
          <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and only if iPhone convert-to-rgb processing is on).</span></td>
        </tr>
        <tr>
          <td id="L322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="322"></td>
          <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="323"></td>
          <td id="LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ===========================================================================</span></td>
        </tr>
        <tr>
          <td id="L324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="324"></td>
          <td id="LC324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="325"></td>
          <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ADDITIONAL CONFIGURATION</span></td>
        </tr>
        <tr>
          <td id="L326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="326"></td>
          <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="327"></td>
          <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  - You can suppress implementation of any of the decoders to reduce</span></td>
        </tr>
        <tr>
          <td id="L328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="328"></td>
          <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    your code footprint by #defining one or more of the following</span></td>
        </tr>
        <tr>
          <td id="L329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="329"></td>
          <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    symbols before creating the implementation.</span></td>
        </tr>
        <tr>
          <td id="L330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="330"></td>
          <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="331"></td>
          <td id="LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_JPEG</span></td>
        </tr>
        <tr>
          <td id="L332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="332"></td>
          <td id="LC332" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_PNG</span></td>
        </tr>
        <tr>
          <td id="L333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="333"></td>
          <td id="LC333" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_BMP</span></td>
        </tr>
        <tr>
          <td id="L334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="334"></td>
          <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_PSD</span></td>
        </tr>
        <tr>
          <td id="L335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="335"></td>
          <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_TGA</span></td>
        </tr>
        <tr>
          <td id="L336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="336"></td>
          <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_GIF</span></td>
        </tr>
        <tr>
          <td id="L337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="337"></td>
          <td id="LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_HDR</span></td>
        </tr>
        <tr>
          <td id="L338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="338"></td>
          <td id="LC338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_PIC</span></td>
        </tr>
        <tr>
          <td id="L339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="339"></td>
          <td id="LC339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_NO_PNM   (.ppm and .pgm)</span></td>
        </tr>
        <tr>
          <td id="L340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="340"></td>
          <td id="LC340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="341"></td>
          <td id="LC341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  - You can request *only* certain decoders and suppress all other ones</span></td>
        </tr>
        <tr>
          <td id="L342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="342"></td>
          <td id="LC342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    (this will be more forward-compatible, as addition of new decoders</span></td>
        </tr>
        <tr>
          <td id="L343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="343"></td>
          <td id="LC343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    doesn&#39;t require you to disable them explicitly):</span></td>
        </tr>
        <tr>
          <td id="L344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="344"></td>
          <td id="LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="345"></td>
          <td id="LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_JPEG</span></td>
        </tr>
        <tr>
          <td id="L346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="346"></td>
          <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_PNG</span></td>
        </tr>
        <tr>
          <td id="L347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="347"></td>
          <td id="LC347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_BMP</span></td>
        </tr>
        <tr>
          <td id="L348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="348"></td>
          <td id="LC348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_PSD</span></td>
        </tr>
        <tr>
          <td id="L349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="349"></td>
          <td id="LC349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_TGA</span></td>
        </tr>
        <tr>
          <td id="L350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="350"></td>
          <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_GIF</span></td>
        </tr>
        <tr>
          <td id="L351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="351"></td>
          <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_HDR</span></td>
        </tr>
        <tr>
          <td id="L352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="352"></td>
          <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_PIC</span></td>
        </tr>
        <tr>
          <td id="L353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="353"></td>
          <td id="LC353" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        STBI_ONLY_PNM   (.ppm and .pgm)</span></td>
        </tr>
        <tr>
          <td id="L354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="354"></td>
          <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="355"></td>
          <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>   - If you use STBI_NO_PNG (or _ONLY_ without PNG), and you still</span></td>
        </tr>
        <tr>
          <td id="L356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="356"></td>
          <td id="LC356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>     want the zlib decoder to be available, #define STBI_SUPPORT_ZLIB</span></td>
        </tr>
        <tr>
          <td id="L357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="357"></td>
          <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="358"></td>
          <td id="LC358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  - If you define STBI_MAX_DIMENSIONS, stb_image will reject images greater</span></td>
        </tr>
        <tr>
          <td id="L359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="359"></td>
          <td id="LC359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    than that size (in either width or height) without further processing.</span></td>
        </tr>
        <tr>
          <td id="L360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="360"></td>
          <td id="LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    This is to let programs in the wild set an upper bound to prevent</span></td>
        </tr>
        <tr>
          <td id="L361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="361"></td>
          <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    denial-of-service attacks on untrusted data, as one could generate a</span></td>
        </tr>
        <tr>
          <td id="L362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="362"></td>
          <td id="LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    valid image of gigantic dimensions and force stb_image to allocate a</span></td>
        </tr>
        <tr>
          <td id="L363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="363"></td>
          <td id="LC363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    huge block of memory and spend disproportionate time decoding it. By</span></td>
        </tr>
        <tr>
          <td id="L364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="364"></td>
          <td id="LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    default this is set to (1 &lt;&lt; 24), which is 16777216, but that&#39;s still</span></td>
        </tr>
        <tr>
          <td id="L365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="365"></td>
          <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    very big.</span></td>
        </tr>
        <tr>
          <td id="L366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="366"></td>
          <td id="LC366" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="367"></td>
          <td id="LC367" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="368"></td>
          <td id="LC368" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="369"></td>
          <td id="LC369" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="370"></td>
          <td id="LC370" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="371"></td>
          <td id="LC371" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_VERSION</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="372"></td>
          <td id="LC372" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="373"></td>
          <td id="LC373" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span></td>
        </tr>
        <tr>
          <td id="L374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="374"></td>
          <td id="LC374" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="375"></td>
          <td id="LC375" class="blob-code blob-code-inner js-file-line">   STBI_default = <span class="pl-c1">0</span>, <span class="pl-c"><span class="pl-c">//</span> only used for desired_channels</span></td>
        </tr>
        <tr>
          <td id="L376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="376"></td>
          <td id="LC376" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="377"></td>
          <td id="LC377" class="blob-code blob-code-inner js-file-line">   STBI_grey       = <span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="378"></td>
          <td id="LC378" class="blob-code blob-code-inner js-file-line">   STBI_grey_alpha = <span class="pl-c1">2</span>,</td>
        </tr>
        <tr>
          <td id="L379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="379"></td>
          <td id="LC379" class="blob-code blob-code-inner js-file-line">   STBI_rgb        = <span class="pl-c1">3</span>,</td>
        </tr>
        <tr>
          <td id="L380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="380"></td>
          <td id="LC380" class="blob-code blob-code-inner js-file-line">   STBI_rgb_alpha  = <span class="pl-c1">4</span></td>
        </tr>
        <tr>
          <td id="L381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="381"></td>
          <td id="LC381" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="382"></td>
          <td id="LC382" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="383"></td>
          <td id="LC383" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="384"></td>
          <td id="LC384" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> stbi_uc;</td>
        </tr>
        <tr>
          <td id="L385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="385"></td>
          <td id="LC385" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">short</span> stbi_us;</td>
        </tr>
        <tr>
          <td id="L386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="386"></td>
          <td id="LC386" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="387"></td>
          <td id="LC387" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> __cplusplus</td>
        </tr>
        <tr>
          <td id="L388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="388"></td>
          <td id="LC388" class="blob-code blob-code-inner js-file-line"><span class="pl-k">extern</span> <span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span> {</td>
        </tr>
        <tr>
          <td id="L389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="389"></td>
          <td id="LC389" class="blob-code blob-code-inner js-file-line">#endif</td>
        </tr>
        <tr>
          <td id="L390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="390"></td>
          <td id="LC390" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="391"></td>
          <td id="LC391" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBIDEF</td>
        </tr>
        <tr>
          <td id="L392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="392"></td>
          <td id="LC392" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STB_IMAGE_STATIC</td>
        </tr>
        <tr>
          <td id="L393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="393"></td>
          <td id="LC393" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBIDEF</span> <span class="pl-k">static</span></td>
        </tr>
        <tr>
          <td id="L394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="394"></td>
          <td id="LC394" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="395"></td>
          <td id="LC395" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBIDEF</span> <span class="pl-k">extern</span></td>
        </tr>
        <tr>
          <td id="L396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="396"></td>
          <td id="LC396" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="397"></td>
          <td id="LC397" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="398"></td>
          <td id="LC398" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="399"></td>
          <td id="LC399" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>////////////////////////////////////////////////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="400"></td>
          <td id="LC400" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="401"></td>
          <td id="LC401" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> PRIMARY API - works on images of any type</span></td>
        </tr>
        <tr>
          <td id="L402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="402"></td>
          <td id="LC402" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="403"></td>
          <td id="LC403" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="404"></td>
          <td id="LC404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="405"></td>
          <td id="LC405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> load image by filename, open file, or memory buffer</span></td>
        </tr>
        <tr>
          <td id="L406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="406"></td>
          <td id="LC406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="407"></td>
          <td id="LC407" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="408"></td>
          <td id="LC408" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="409"></td>
          <td id="LC409" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="410"></td>
          <td id="LC410" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int</span>      (*<span class="pl-c1">read</span>)  (<span class="pl-k">void</span> *user,<span class="pl-k">char</span> *data,<span class="pl-k">int</span> size);   <span class="pl-c"><span class="pl-c">//</span> fill &#39;data&#39; with &#39;size&#39; bytes.  return number of bytes actually read</span></td>
        </tr>
        <tr>
          <td id="L411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="411"></td>
          <td id="LC411" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">void</span>     (*skip)  (<span class="pl-k">void</span> *user,<span class="pl-k">int</span> n);                 <span class="pl-c"><span class="pl-c">//</span> skip the next &#39;n&#39; bytes, or &#39;unget&#39; the last -n bytes if negative</span></td>
        </tr>
        <tr>
          <td id="L412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="412"></td>
          <td id="LC412" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int</span>      (*eof)   (<span class="pl-k">void</span> *user);                       <span class="pl-c"><span class="pl-c">//</span> returns nonzero if we are at end of file/data</span></td>
        </tr>
        <tr>
          <td id="L413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="413"></td>
          <td id="LC413" class="blob-code blob-code-inner js-file-line">} stbi_io_callbacks;</td>
        </tr>
        <tr>
          <td id="L414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="414"></td>
          <td id="LC414" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="415"></td>
          <td id="LC415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>//////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="416"></td>
          <td id="LC416" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="417"></td>
          <td id="LC417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 8-bits-per-channel interface</span></td>
        </tr>
        <tr>
          <td id="L418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="418"></td>
          <td id="LC418" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="419"></td>
          <td id="LC419" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="420"></td>
          <td id="LC420" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_from_memory</span>   (stbi_uc           <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len   , <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="421"></td>
          <td id="LC421" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk  , <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="422"></td>
          <td id="LC422" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="423"></td>
          <td id="LC423" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="424"></td>
          <td id="LC424" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load</span>            (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="425"></td>
          <td id="LC425" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_from_file</span>  (FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="426"></td>
          <td id="LC426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> for stbi_load_from_file, file pointer is left pointing immediately after image</span></td>
        </tr>
        <tr>
          <td id="L427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="427"></td>
          <td id="LC427" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="428"></td>
          <td id="LC428" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="429"></td>
          <td id="LC429" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="430"></td>
          <td id="LC430" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_gif_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> **delays, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *z, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp);</td>
        </tr>
        <tr>
          <td id="L431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="431"></td>
          <td id="LC431" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="432"></td>
          <td id="LC432" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="433"></td>
          <td id="LC433" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_WINDOWS_UTF8</td>
        </tr>
        <tr>
          <td id="L434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="434"></td>
          <td id="LC434" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_convert_wchar_to_utf8</span>(<span class="pl-k">char</span> *buffer, <span class="pl-c1">size_t</span> bufferlen, <span class="pl-k">const</span> <span class="pl-c1">wchar_t</span>* input);</td>
        </tr>
        <tr>
          <td id="L435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="435"></td>
          <td id="LC435" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="436"></td>
          <td id="LC436" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="437"></td>
          <td id="LC437" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>//////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="438"></td>
          <td id="LC438" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="439"></td>
          <td id="LC439" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 16-bits-per-channel interface</span></td>
        </tr>
        <tr>
          <td id="L440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="440"></td>
          <td id="LC440" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="441"></td>
          <td id="LC441" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="442"></td>
          <td id="LC442" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_16_from_memory</span>   (stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="443"></td>
          <td id="LC443" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_16_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="444"></td>
          <td id="LC444" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="445"></td>
          <td id="LC445" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="446"></td>
          <td id="LC446" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_16</span>          (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="447"></td>
          <td id="LC447" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_from_file_16</span>(FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="448"></td>
          <td id="LC448" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="449"></td>
          <td id="LC449" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="450"></td>
          <td id="LC450" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>//////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="451"></td>
          <td id="LC451" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="452"></td>
          <td id="LC452" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> float-per-channel interface</span></td>
        </tr>
        <tr>
          <td id="L453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="453"></td>
          <td id="LC453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="454"></td>
          <td id="LC454" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_LINEAR</td>
        </tr>
        <tr>
          <td id="L455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="455"></td>
          <td id="LC455" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf_from_memory</span>     (stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="456"></td>
          <td id="LC456" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf_from_callbacks</span>  (stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y,  <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="457"></td>
          <td id="LC457" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="458"></td>
          <td id="LC458" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="459"></td>
          <td id="LC459" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf</span>            (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="460"></td>
          <td id="LC460" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf_from_file</span>  (FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels);</td>
        </tr>
        <tr>
          <td id="L461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="461"></td>
          <td id="LC461" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="462"></td>
          <td id="LC462" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="463"></td>
          <td id="LC463" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="464"></td>
          <td id="LC464" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="465"></td>
          <td id="LC465" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_hdr_to_ldr_gamma</span>(<span class="pl-k">float</span> <span class="pl-bu">gamma</span>);</td>
        </tr>
        <tr>
          <td id="L466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="466"></td>
          <td id="LC466" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_hdr_to_ldr_scale</span>(<span class="pl-k">float</span> scale);</td>
        </tr>
        <tr>
          <td id="L467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="467"></td>
          <td id="LC467" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_NO_HDR</span></td>
        </tr>
        <tr>
          <td id="L468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="468"></td>
          <td id="LC468" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="469"></td>
          <td id="LC469" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_LINEAR</td>
        </tr>
        <tr>
          <td id="L470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="470"></td>
          <td id="LC470" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_ldr_to_hdr_gamma</span>(<span class="pl-k">float</span> <span class="pl-bu">gamma</span>);</td>
        </tr>
        <tr>
          <td id="L471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="471"></td>
          <td id="LC471" class="blob-code blob-code-inner js-file-line">   STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_ldr_to_hdr_scale</span>(<span class="pl-k">float</span> scale);</td>
        </tr>
        <tr>
          <td id="L472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="472"></td>
          <td id="LC472" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_NO_LINEAR</span></td>
        </tr>
        <tr>
          <td id="L473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="473"></td>
          <td id="LC473" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="474"></td>
          <td id="LC474" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi_is_hdr is always defined, but always returns false if STBI_NO_HDR</span></td>
        </tr>
        <tr>
          <td id="L475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="475"></td>
          <td id="LC475" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>    <span class="pl-smi">stbi_is_hdr_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user);</td>
        </tr>
        <tr>
          <td id="L476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="476"></td>
          <td id="LC476" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>    <span class="pl-smi">stbi_is_hdr_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len);</td>
        </tr>
        <tr>
          <td id="L477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="477"></td>
          <td id="LC477" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="478"></td>
          <td id="LC478" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_hdr</span>          (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename);</td>
        </tr>
        <tr>
          <td id="L479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="479"></td>
          <td id="LC479" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_hdr_from_file</span>(FILE *f);</td>
        </tr>
        <tr>
          <td id="L480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="480"></td>
          <td id="LC480" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="481"></td>
          <td id="LC481" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="482"></td>
          <td id="LC482" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="483"></td>
          <td id="LC483" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get a VERY brief reason for failure</span></td>
        </tr>
        <tr>
          <td id="L484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="484"></td>
          <td id="LC484" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> on most compilers (and ALL modern mainstream compilers) this is threadsafe</span></td>
        </tr>
        <tr>
          <td id="L485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="485"></td>
          <td id="LC485" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">const</span> <span class="pl-k">char</span> *<span class="pl-c1">stbi_failure_reason</span>  (<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="486"></td>
          <td id="LC486" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="487"></td>
          <td id="LC487" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> free the loaded image -- this is just free()</span></td>
        </tr>
        <tr>
          <td id="L488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="488"></td>
          <td id="LC488" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span>     <span class="pl-smi">stbi_image_free</span>      (<span class="pl-k">void</span> *retval_from_stbi_load);</td>
        </tr>
        <tr>
          <td id="L489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="489"></td>
          <td id="LC489" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="490"></td>
          <td id="LC490" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get image dimensions &amp; components without fully decoding</span></td>
        </tr>
        <tr>
          <td id="L491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="491"></td>
          <td id="LC491" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_info_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="492"></td>
          <td id="LC492" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_info_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="493"></td>
          <td id="LC493" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_16_bit_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len);</td>
        </tr>
        <tr>
          <td id="L494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="494"></td>
          <td id="LC494" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_16_bit_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user);</td>
        </tr>
        <tr>
          <td id="L495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="495"></td>
          <td id="LC495" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="496"></td>
          <td id="LC496" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="497"></td>
          <td id="LC497" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_info</span>               (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename,     <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="498"></td>
          <td id="LC498" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_info_from_file</span>     (FILE *f,                  <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="499"></td>
          <td id="LC499" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_16_bit</span>          (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename);</td>
        </tr>
        <tr>
          <td id="L500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="500"></td>
          <td id="LC500" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_16_bit_from_file</span>(FILE *f);</td>
        </tr>
        <tr>
          <td id="L501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="501"></td>
          <td id="LC501" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="502"></td>
          <td id="LC502" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="503"></td>
          <td id="LC503" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="504"></td>
          <td id="LC504" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="505"></td>
          <td id="LC505" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> for image formats that explicitly notate that they have premultiplied alpha,</span></td>
        </tr>
        <tr>
          <td id="L506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="506"></td>
          <td id="LC506" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we just return the colors as stored in the file. set this flag to force</span></td>
        </tr>
        <tr>
          <td id="L507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="507"></td>
          <td id="LC507" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> unpremultiplication. results are undefined if the unpremultiply overflow.</span></td>
        </tr>
        <tr>
          <td id="L508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="508"></td>
          <td id="LC508" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_unpremultiply_on_load</span>(<span class="pl-k">int</span> flag_true_if_should_unpremultiply);</td>
        </tr>
        <tr>
          <td id="L509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="509"></td>
          <td id="LC509" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="510"></td>
          <td id="LC510" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> indicate whether we should process iphone images back to canonical format,</span></td>
        </tr>
        <tr>
          <td id="L511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="511"></td>
          <td id="LC511" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> or just pass them through &quot;as-is&quot;</span></td>
        </tr>
        <tr>
          <td id="L512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="512"></td>
          <td id="LC512" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_convert_iphone_png_to_rgb</span>(<span class="pl-k">int</span> flag_true_if_should_convert);</td>
        </tr>
        <tr>
          <td id="L513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="513"></td>
          <td id="LC513" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="514"></td>
          <td id="LC514" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> flip the image vertically, so the first pixel in the output array is the bottom left</span></td>
        </tr>
        <tr>
          <td id="L515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="515"></td>
          <td id="LC515" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_flip_vertically_on_load</span>(<span class="pl-k">int</span> flag_true_if_should_flip);</td>
        </tr>
        <tr>
          <td id="L516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="516"></td>
          <td id="LC516" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="517"></td>
          <td id="LC517" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> as above, but only applies to images loaded on the thread that calls the function</span></td>
        </tr>
        <tr>
          <td id="L518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="518"></td>
          <td id="LC518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this function is only available if your compiler supports thread-local variables;</span></td>
        </tr>
        <tr>
          <td id="L519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="519"></td>
          <td id="LC519" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> calling it will fail to link if your compiler doesn&#39;t</span></td>
        </tr>
        <tr>
          <td id="L520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="520"></td>
          <td id="LC520" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_unpremultiply_on_load_thread</span>(<span class="pl-k">int</span> flag_true_if_should_unpremultiply);</td>
        </tr>
        <tr>
          <td id="L521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="521"></td>
          <td id="LC521" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_convert_iphone_png_to_rgb_thread</span>(<span class="pl-k">int</span> flag_true_if_should_convert);</td>
        </tr>
        <tr>
          <td id="L522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="522"></td>
          <td id="LC522" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_flip_vertically_on_load_thread</span>(<span class="pl-k">int</span> flag_true_if_should_flip);</td>
        </tr>
        <tr>
          <td id="L523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="523"></td>
          <td id="LC523" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="524"></td>
          <td id="LC524" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ZLIB client - used by PNG, available for other purposes</span></td>
        </tr>
        <tr>
          <td id="L525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="525"></td>
          <td id="LC525" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="526"></td>
          <td id="LC526" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_malloc_guesssize</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> initial_size, <span class="pl-k">int</span> *outlen);</td>
        </tr>
        <tr>
          <td id="L527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="527"></td>
          <td id="LC527" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_malloc_guesssize_headerflag</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> initial_size, <span class="pl-k">int</span> *outlen, <span class="pl-k">int</span> parse_header);</td>
        </tr>
        <tr>
          <td id="L528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="528"></td>
          <td id="LC528" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_malloc</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *outlen);</td>
        </tr>
        <tr>
          <td id="L529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="529"></td>
          <td id="LC529" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>   <span class="pl-smi">stbi_zlib_decode_buffer</span>(<span class="pl-k">char</span> *obuffer, <span class="pl-k">int</span> olen, <span class="pl-k">const</span> <span class="pl-k">char</span> *ibuffer, <span class="pl-k">int</span> ilen);</td>
        </tr>
        <tr>
          <td id="L530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="530"></td>
          <td id="LC530" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="531"></td>
          <td id="LC531" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_noheader_malloc</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *outlen);</td>
        </tr>
        <tr>
          <td id="L532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="532"></td>
          <td id="LC532" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>   <span class="pl-smi">stbi_zlib_decode_noheader_buffer</span>(<span class="pl-k">char</span> *obuffer, <span class="pl-k">int</span> olen, <span class="pl-k">const</span> <span class="pl-k">char</span> *ibuffer, <span class="pl-k">int</span> ilen);</td>
        </tr>
        <tr>
          <td id="L533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="533"></td>
          <td id="LC533" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="534"></td>
          <td id="LC534" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="535"></td>
          <td id="LC535" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> __cplusplus</td>
        </tr>
        <tr>
          <td id="L536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="536"></td>
          <td id="LC536" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="537"></td>
          <td id="LC537" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="538"></td>
          <td id="LC538" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="539"></td>
          <td id="LC539" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="540"></td>
          <td id="LC540" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="541"></td>
          <td id="LC541" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>//   end header file   /////////////////////////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="542"></td>
          <td id="LC542" class="blob-code blob-code-inner js-file-line">#endif <span class="pl-c"><span class="pl-c">//</span> STBI_INCLUDE_STB_IMAGE_H</span></td>
        </tr>
        <tr>
          <td id="L543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="543"></td>
          <td id="LC543" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="544"></td>
          <td id="LC544" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STB_IMAGE_IMPLEMENTATION</td>
        </tr>
        <tr>
          <td id="L545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="545"></td>
          <td id="LC545" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="546"></td>
          <td id="LC546" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_ONLY_JPEG) || defined(STBI_ONLY_PNG) || defined(STBI_ONLY_BMP) \</td>
        </tr>
        <tr>
          <td id="L547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="547"></td>
          <td id="LC547" class="blob-code blob-code-inner js-file-line">  || <span class="pl-c1">defined</span>(STBI_ONLY_TGA) || <span class="pl-c1">defined</span>(STBI_ONLY_GIF) || <span class="pl-c1">defined</span>(STBI_ONLY_PSD) \</td>
        </tr>
        <tr>
          <td id="L548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="548"></td>
          <td id="LC548" class="blob-code blob-code-inner js-file-line">  || <span class="pl-c1">defined</span>(STBI_ONLY_HDR) || <span class="pl-c1">defined</span>(STBI_ONLY_PIC) || <span class="pl-c1">defined</span>(STBI_ONLY_PNM) \</td>
        </tr>
        <tr>
          <td id="L549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="549"></td>
          <td id="LC549" class="blob-code blob-code-inner js-file-line">  || <span class="pl-c1">defined</span>(STBI_ONLY_ZLIB)</td>
        </tr>
        <tr>
          <td id="L550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="550"></td>
          <td id="LC550" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_JPEG</td>
        </tr>
        <tr>
          <td id="L551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="551"></td>
          <td id="LC551" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_JPEG</span></td>
        </tr>
        <tr>
          <td id="L552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="552"></td>
          <td id="LC552" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="553"></td>
          <td id="LC553" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_PNG</td>
        </tr>
        <tr>
          <td id="L554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="554"></td>
          <td id="LC554" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_PNG</span></td>
        </tr>
        <tr>
          <td id="L555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="555"></td>
          <td id="LC555" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="556"></td>
          <td id="LC556" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_BMP</td>
        </tr>
        <tr>
          <td id="L557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="557"></td>
          <td id="LC557" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_BMP</span></td>
        </tr>
        <tr>
          <td id="L558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="558"></td>
          <td id="LC558" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="559"></td>
          <td id="LC559" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_PSD</td>
        </tr>
        <tr>
          <td id="L560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="560"></td>
          <td id="LC560" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_PSD</span></td>
        </tr>
        <tr>
          <td id="L561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="561"></td>
          <td id="LC561" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="562"></td>
          <td id="LC562" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_TGA</td>
        </tr>
        <tr>
          <td id="L563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="563"></td>
          <td id="LC563" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_TGA</span></td>
        </tr>
        <tr>
          <td id="L564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="564"></td>
          <td id="LC564" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="565"></td>
          <td id="LC565" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_GIF</td>
        </tr>
        <tr>
          <td id="L566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="566"></td>
          <td id="LC566" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_GIF</span></td>
        </tr>
        <tr>
          <td id="L567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="567"></td>
          <td id="LC567" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="568"></td>
          <td id="LC568" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_HDR</td>
        </tr>
        <tr>
          <td id="L569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="569"></td>
          <td id="LC569" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_HDR</span></td>
        </tr>
        <tr>
          <td id="L570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="570"></td>
          <td id="LC570" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="571"></td>
          <td id="LC571" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_PIC</td>
        </tr>
        <tr>
          <td id="L572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="572"></td>
          <td id="LC572" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_PIC</span></td>
        </tr>
        <tr>
          <td id="L573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="573"></td>
          <td id="LC573" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="574"></td>
          <td id="LC574" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_ONLY_PNM</td>
        </tr>
        <tr>
          <td id="L575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="575"></td>
          <td id="LC575" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">STBI_NO_PNM</span></td>
        </tr>
        <tr>
          <td id="L576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="576"></td>
          <td id="LC576" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="577"></td>
          <td id="LC577" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="578"></td>
          <td id="LC578" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="579"></td>
          <td id="LC579" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_PNG) &amp;&amp; !defined(STBI_SUPPORT_ZLIB) &amp;&amp; !defined(STBI_NO_ZLIB)</td>
        </tr>
        <tr>
          <td id="L580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="580"></td>
          <td id="LC580" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_NO_ZLIB</span></td>
        </tr>
        <tr>
          <td id="L581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="581"></td>
          <td id="LC581" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="582"></td>
          <td id="LC582" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="583"></td>
          <td id="LC583" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="584"></td>
          <td id="LC584" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdarg.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="585"></td>
          <td id="LC585" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stddef.h<span class="pl-pds">&gt;</span></span> <span class="pl-c"><span class="pl-c">//</span> ptrdiff_t on osx</span></td>
        </tr>
        <tr>
          <td id="L586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="586"></td>
          <td id="LC586" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdlib.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="587"></td>
          <td id="LC587" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="588"></td>
          <td id="LC588" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>limits.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="589"></td>
          <td id="LC589" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="590"></td>
          <td id="LC590" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_LINEAR) || !defined(STBI_NO_HDR)</td>
        </tr>
        <tr>
          <td id="L591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="591"></td>
          <td id="LC591" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>math.h<span class="pl-pds">&gt;</span></span>  <span class="pl-c"><span class="pl-c">//</span> ldexp, pow</span></td>
        </tr>
        <tr>
          <td id="L592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="592"></td>
          <td id="LC592" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="593"></td>
          <td id="LC593" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="594"></td>
          <td id="LC594" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="595"></td>
          <td id="LC595" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdio.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="596"></td>
          <td id="LC596" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="597"></td>
          <td id="LC597" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="598"></td>
          <td id="LC598" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_ASSERT</td>
        </tr>
        <tr>
          <td id="L599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="599"></td>
          <td id="LC599" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>assert.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="600"></td>
          <td id="LC600" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_ASSERT</span>(<span class="pl-v">x</span>) assert(x)</td>
        </tr>
        <tr>
          <td id="L601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="601"></td>
          <td id="LC601" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="602"></td>
          <td id="LC602" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="603"></td>
          <td id="LC603" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> __cplusplus</td>
        </tr>
        <tr>
          <td id="L604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="604"></td>
          <td id="LC604" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_EXTERN</span> <span class="pl-k">extern</span> <span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="605"></td>
          <td id="LC605" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="606"></td>
          <td id="LC606" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_EXTERN</span> <span class="pl-k">extern</span></td>
        </tr>
        <tr>
          <td id="L607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="607"></td>
          <td id="LC607" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="608"></td>
          <td id="LC608" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="609"></td>
          <td id="LC609" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="610"></td>
          <td id="LC610" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> _MSC_VER</td>
        </tr>
        <tr>
          <td id="L611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="611"></td>
          <td id="LC611" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifdef</span> __cplusplus</td>
        </tr>
        <tr>
          <td id="L612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="612"></td>
          <td id="LC612" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi_inline</span> <span class="pl-k">inline</span></td>
        </tr>
        <tr>
          <td id="L613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="613"></td>
          <td id="LC613" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="614"></td>
          <td id="LC614" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi_inline</span></td>
        </tr>
        <tr>
          <td id="L615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="615"></td>
          <td id="LC615" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="616"></td>
          <td id="LC616" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="617"></td>
          <td id="LC617" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi_inline</span> __forceinline</td>
        </tr>
        <tr>
          <td id="L618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="618"></td>
          <td id="LC618" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="619"></td>
          <td id="LC619" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="620"></td>
          <td id="LC620" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_THREAD_LOCALS</td>
        </tr>
        <tr>
          <td id="L621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="621"></td>
          <td id="LC621" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">if</span> defined(__cplusplus) &amp;&amp;  __cplusplus &gt;= 201103L</td>
        </tr>
        <tr>
          <td id="L622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="622"></td>
          <td id="LC622" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI_THREAD_LOCAL</span>       thread_local</td>
        </tr>
        <tr>
          <td id="L623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="623"></td>
          <td id="LC623" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">elif</span> defined(__GNUC__) &amp;&amp; __GNUC__ &lt; 5</td>
        </tr>
        <tr>
          <td id="L624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="624"></td>
          <td id="LC624" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI_THREAD_LOCAL</span>       __thread</td>
        </tr>
        <tr>
          <td id="L625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="625"></td>
          <td id="LC625" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">elif</span> defined(_MSC_VER)</td>
        </tr>
        <tr>
          <td id="L626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="626"></td>
          <td id="LC626" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI_THREAD_LOCAL</span>       <span class="pl-en">__declspec</span>(thread)</td>
        </tr>
        <tr>
          <td id="L627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="627"></td>
          <td id="LC627" class="blob-code blob-code-inner js-file-line">   #elif <span class="pl-en">defined</span> (__STDC_VERSION__) &amp;&amp; __STDC_VERSION__ &gt;= 201112L &amp;&amp; !defined(__STDC_NO_THREADS__)</td>
        </tr>
        <tr>
          <td id="L628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="628"></td>
          <td id="LC628" class="blob-code blob-code-inner js-file-line">      #define STBI_THREAD_LOCAL       _Thread_local</td>
        </tr>
        <tr>
          <td id="L629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="629"></td>
          <td id="LC629" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="630"></td>
          <td id="LC630" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="631"></td>
          <td id="LC631" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_THREAD_LOCAL</td>
        </tr>
        <tr>
          <td id="L632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="632"></td>
          <td id="LC632" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">if</span> defined(__GNUC__)</td>
        </tr>
        <tr>
          <td id="L633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="633"></td>
          <td id="LC633" class="blob-code blob-code-inner js-file-line">        #<span class="pl-k">define</span> <span class="pl-en">STBI_THREAD_LOCAL</span>       __thread</td>
        </tr>
        <tr>
          <td id="L634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="634"></td>
          <td id="LC634" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="635"></td>
          <td id="LC635" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="636"></td>
          <td id="LC636" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="637"></td>
          <td id="LC637" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="638"></td>
          <td id="LC638" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> _MSC_VER</td>
        </tr>
        <tr>
          <td id="L639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="639"></td>
          <td id="LC639" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">short</span> stbi__uint16;</td>
        </tr>
        <tr>
          <td id="L640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="640"></td>
          <td id="LC640" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span>   <span class="pl-k">signed</span> <span class="pl-k">short</span> stbi__int16;</td>
        </tr>
        <tr>
          <td id="L641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="641"></td>
          <td id="LC641" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span>   stbi__uint32;</td>
        </tr>
        <tr>
          <td id="L642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="642"></td>
          <td id="LC642" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span>   <span class="pl-k">signed</span> <span class="pl-k">int</span>   stbi__int32;</td>
        </tr>
        <tr>
          <td id="L643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="643"></td>
          <td id="LC643" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="644"></td>
          <td id="LC644" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stdint.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="645"></td>
          <td id="LC645" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-c1">uint16_t</span> stbi__uint16;</td>
        </tr>
        <tr>
          <td id="L646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="646"></td>
          <td id="LC646" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-c1">int16_t</span>  stbi__int16;</td>
        </tr>
        <tr>
          <td id="L647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="647"></td>
          <td id="LC647" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-c1">uint32_t</span> stbi__uint32;</td>
        </tr>
        <tr>
          <td id="L648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="648"></td>
          <td id="LC648" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-c1">int32_t</span>  stbi__int32;</td>
        </tr>
        <tr>
          <td id="L649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="649"></td>
          <td id="LC649" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="650"></td>
          <td id="LC650" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="651"></td>
          <td id="LC651" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> should produce compiler error if size is wrong</span></td>
        </tr>
        <tr>
          <td id="L652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="652"></td>
          <td id="LC652" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> validate_uint32[<span class="pl-k">sizeof</span>(stbi__uint32)==<span class="pl-c1">4</span> ? <span class="pl-c1">1</span> : -<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="653"></td>
          <td id="LC653" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="654"></td>
          <td id="LC654" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> _MSC_VER</td>
        </tr>
        <tr>
          <td id="L655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="655"></td>
          <td id="LC655" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_NOTUSED</span>(<span class="pl-v">v</span>)  (<span class="pl-k">void</span>)(v)</td>
        </tr>
        <tr>
          <td id="L656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="656"></td>
          <td id="LC656" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="657"></td>
          <td id="LC657" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_NOTUSED</span>(<span class="pl-v">v</span>)  (<span class="pl-k">void</span>)<span class="pl-k">sizeof</span>(v)</td>
        </tr>
        <tr>
          <td id="L658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="658"></td>
          <td id="LC658" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="659"></td>
          <td id="LC659" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="660"></td>
          <td id="LC660" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> _MSC_VER</td>
        </tr>
        <tr>
          <td id="L661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="661"></td>
          <td id="LC661" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_HAS_LROTL</span></td>
        </tr>
        <tr>
          <td id="L662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="662"></td>
          <td id="LC662" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="663"></td>
          <td id="LC663" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="664"></td>
          <td id="LC664" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_HAS_LROTL</td>
        </tr>
        <tr>
          <td id="L665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="665"></td>
          <td id="LC665" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi_lrot</span>(<span class="pl-v">x,y</span>)  _lrotl(x,y)</td>
        </tr>
        <tr>
          <td id="L666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="666"></td>
          <td id="LC666" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="667"></td>
          <td id="LC667" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi_lrot</span>(<span class="pl-v">x,y</span>)  (((x) &lt;&lt; (y)) | ((x) &gt;&gt; (-(y) &amp; <span class="pl-c1">31</span>)))</td>
        </tr>
        <tr>
          <td id="L668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="668"></td>
          <td id="LC668" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="669"></td>
          <td id="LC669" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="670"></td>
          <td id="LC670" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_MALLOC) &amp;&amp; defined(STBI_FREE) &amp;&amp; (defined(STBI_REALLOC) || defined(STBI_REALLOC_SIZED))</td>
        </tr>
        <tr>
          <td id="L671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="671"></td>
          <td id="LC671" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ok</span></td>
        </tr>
        <tr>
          <td id="L672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="672"></td>
          <td id="LC672" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> !defined(STBI_MALLOC) &amp;&amp; !defined(STBI_FREE) &amp;&amp; !defined(STBI_REALLOC) &amp;&amp; !defined(STBI_REALLOC_SIZED)</td>
        </tr>
        <tr>
          <td id="L673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="673"></td>
          <td id="LC673" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ok</span></td>
        </tr>
        <tr>
          <td id="L674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="674"></td>
          <td id="LC674" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="675"></td>
          <td id="LC675" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">error</span> &quot;Must define all or none of STBI_MALLOC, STBI_FREE, and STBI_REALLOC (or STBI_REALLOC_SIZED).&quot;</td>
        </tr>
        <tr>
          <td id="L676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="676"></td>
          <td id="LC676" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="677"></td>
          <td id="LC677" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="678"></td>
          <td id="LC678" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_MALLOC</td>
        </tr>
        <tr>
          <td id="L679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="679"></td>
          <td id="LC679" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_MALLOC</span>(<span class="pl-v">sz</span>)           malloc(sz)</td>
        </tr>
        <tr>
          <td id="L680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="680"></td>
          <td id="LC680" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_REALLOC</span>(<span class="pl-v">p,newsz</span>)     realloc(p,newsz)</td>
        </tr>
        <tr>
          <td id="L681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="681"></td>
          <td id="LC681" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_FREE</span>(<span class="pl-v">p</span>)              free(p)</td>
        </tr>
        <tr>
          <td id="L682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="682"></td>
          <td id="LC682" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="683"></td>
          <td id="LC683" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="684"></td>
          <td id="LC684" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_REALLOC_SIZED</td>
        </tr>
        <tr>
          <td id="L685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="685"></td>
          <td id="LC685" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_REALLOC_SIZED</span>(<span class="pl-v">p,oldsz,newsz</span>) STBI_REALLOC(p,newsz)</td>
        </tr>
        <tr>
          <td id="L686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="686"></td>
          <td id="LC686" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="687"></td>
          <td id="LC687" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="688"></td>
          <td id="LC688" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> x86/x64 detection</span></td>
        </tr>
        <tr>
          <td id="L689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="689"></td>
          <td id="LC689" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(__x86_64__) || defined(_M_X64)</td>
        </tr>
        <tr>
          <td id="L690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="690"></td>
          <td id="LC690" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__X64_TARGET</span></td>
        </tr>
        <tr>
          <td id="L691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="691"></td>
          <td id="LC691" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> defined(__i386) || defined(_M_IX86)</td>
        </tr>
        <tr>
          <td id="L692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="692"></td>
          <td id="LC692" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__X86_TARGET</span></td>
        </tr>
        <tr>
          <td id="L693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="693"></td>
          <td id="LC693" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="694"></td>
          <td id="LC694" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="695"></td>
          <td id="LC695" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(__GNUC__) &amp;&amp; defined(STBI__X86_TARGET) &amp;&amp; !defined(__SSE2__) &amp;&amp; !defined(STBI_NO_SIMD)</td>
        </tr>
        <tr>
          <td id="L696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="696"></td>
          <td id="LC696" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> gcc doesn&#39;t support sse2 intrinsics unless you compile with -msse2,</span></td>
        </tr>
        <tr>
          <td id="L697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="697"></td>
          <td id="LC697" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> which in turn means it gets to use SSE2 everywhere. This is unfortunate,</span></td>
        </tr>
        <tr>
          <td id="L698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="698"></td>
          <td id="LC698" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> but previous attempts to provide the SSE2 functions with runtime</span></td>
        </tr>
        <tr>
          <td id="L699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="699"></td>
          <td id="LC699" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> detection caused numerous issues. The way architecture extensions are</span></td>
        </tr>
        <tr>
          <td id="L700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="700"></td>
          <td id="LC700" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> exposed in GCC/Clang is, sadly, not really suited for one-file libs.</span></td>
        </tr>
        <tr>
          <td id="L701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="701"></td>
          <td id="LC701" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> New behavior: if compiled with -msse2, we use SSE2 without any</span></td>
        </tr>
        <tr>
          <td id="L702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="702"></td>
          <td id="LC702" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> detection; if not, we don&#39;t use it at all.</span></td>
        </tr>
        <tr>
          <td id="L703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="703"></td>
          <td id="LC703" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_NO_SIMD</span></td>
        </tr>
        <tr>
          <td id="L704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="704"></td>
          <td id="LC704" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="705"></td>
          <td id="LC705" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="706"></td>
          <td id="LC706" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(__MINGW32__) &amp;&amp; defined(STBI__X86_TARGET) &amp;&amp; !defined(STBI_MINGW_ENABLE_SSE2) &amp;&amp; !defined(STBI_NO_SIMD)</td>
        </tr>
        <tr>
          <td id="L707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="707"></td>
          <td id="LC707" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note that __MINGW32__ doesn&#39;t actually mean 32-bit, so we have to avoid STBI__X64_TARGET</span></td>
        </tr>
        <tr>
          <td id="L708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="708"></td>
          <td id="LC708" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="709"></td>
          <td id="LC709" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> 32-bit MinGW wants ESP to be 16-byte aligned, but this is not in the</span></td>
        </tr>
        <tr>
          <td id="L710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="710"></td>
          <td id="LC710" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Windows ABI and VC++ as well as Windows DLLs don&#39;t maintain that invariant.</span></td>
        </tr>
        <tr>
          <td id="L711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="711"></td>
          <td id="LC711" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> As a result, enabling SSE2 on 32-bit MinGW is dangerous when not</span></td>
        </tr>
        <tr>
          <td id="L712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="712"></td>
          <td id="LC712" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> simultaneously enabling &quot;-mstackrealign&quot;.</span></td>
        </tr>
        <tr>
          <td id="L713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="713"></td>
          <td id="LC713" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="714"></td>
          <td id="LC714" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> See https://github.com/nothings/stb/issues/81 for more information.</span></td>
        </tr>
        <tr>
          <td id="L715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="715"></td>
          <td id="LC715" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="716"></td>
          <td id="LC716" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> So default to no SSE2 on 32-bit MinGW. If you&#39;ve read this far and added</span></td>
        </tr>
        <tr>
          <td id="L717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="717"></td>
          <td id="LC717" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> -mstackrealign to your build settings, feel free to #define STBI_MINGW_ENABLE_SSE2.</span></td>
        </tr>
        <tr>
          <td id="L718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="718"></td>
          <td id="LC718" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_NO_SIMD</span></td>
        </tr>
        <tr>
          <td id="L719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="719"></td>
          <td id="LC719" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="720"></td>
          <td id="LC720" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="721"></td>
          <td id="LC721" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_SIMD) &amp;&amp; (defined(STBI__X86_TARGET) || defined(STBI__X64_TARGET))</td>
        </tr>
        <tr>
          <td id="L722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="722"></td>
          <td id="LC722" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_SSE2</span></td>
        </tr>
        <tr>
          <td id="L723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="723"></td>
          <td id="LC723" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>emmintrin.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="724"></td>
          <td id="LC724" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="725"></td>
          <td id="LC725" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> _MSC_VER</td>
        </tr>
        <tr>
          <td id="L726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="726"></td>
          <td id="LC726" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="727"></td>
          <td id="LC727" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> _MSC_VER &gt;= 1400  <span class="pl-c"><span class="pl-c">//</span> not VC6</span></td>
        </tr>
        <tr>
          <td id="L728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="728"></td>
          <td id="LC728" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>intrin.h<span class="pl-pds">&gt;</span></span> <span class="pl-c"><span class="pl-c">//</span> __cpuid</span></td>
        </tr>
        <tr>
          <td id="L729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="729"></td>
          <td id="LC729" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__cpuid3</span>(<span class="pl-k">void</span>)</td>
        </tr>
        <tr>
          <td id="L730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="730"></td>
          <td id="LC730" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="731"></td>
          <td id="LC731" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> info[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="732"></td>
          <td id="LC732" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">__cpuid</span>(info,<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="733"></td>
          <td id="LC733" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> info[<span class="pl-c1">3</span>];</td>
        </tr>
        <tr>
          <td id="L734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="734"></td>
          <td id="LC734" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="735"></td>
          <td id="LC735" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="736"></td>
          <td id="LC736" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__cpuid3</span>(<span class="pl-k">void</span>)</td>
        </tr>
        <tr>
          <td id="L737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="737"></td>
          <td id="LC737" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="738"></td>
          <td id="LC738" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> res;</td>
        </tr>
        <tr>
          <td id="L739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="739"></td>
          <td id="LC739" class="blob-code blob-code-inner js-file-line">   __asm {</td>
        </tr>
        <tr>
          <td id="L740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="740"></td>
          <td id="LC740" class="blob-code blob-code-inner js-file-line">      mov  eax,<span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="741"></td>
          <td id="LC741" class="blob-code blob-code-inner js-file-line">      cpuid</td>
        </tr>
        <tr>
          <td id="L742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="742"></td>
          <td id="LC742" class="blob-code blob-code-inner js-file-line">      mov  res,edx</td>
        </tr>
        <tr>
          <td id="L743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="743"></td>
          <td id="LC743" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="744"></td>
          <td id="LC744" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> res;</td>
        </tr>
        <tr>
          <td id="L745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="745"></td>
          <td id="LC745" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="746"></td>
          <td id="LC746" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="747"></td>
          <td id="LC747" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="748"></td>
          <td id="LC748" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_SIMD_ALIGN</span>(<span class="pl-v">type, name</span>) __declspec(align(<span class="pl-c1">16</span>)) type name</td>
        </tr>
        <tr>
          <td id="L749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="749"></td>
          <td id="LC749" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="750"></td>
          <td id="LC750" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_JPEG) &amp;&amp; defined(STBI_SSE2)</td>
        </tr>
        <tr>
          <td id="L751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="751"></td>
          <td id="LC751" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__sse2_available</span>(<span class="pl-k">void</span>)</td>
        </tr>
        <tr>
          <td id="L752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="752"></td>
          <td id="LC752" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="753"></td>
          <td id="LC753" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> info3 = <span class="pl-c1">stbi__cpuid3</span>();</td>
        </tr>
        <tr>
          <td id="L754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="754"></td>
          <td id="LC754" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> ((info3 &gt;&gt; <span class="pl-c1">26</span>) &amp; <span class="pl-c1">1</span>) != <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="755"></td>
          <td id="LC755" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="756"></td>
          <td id="LC756" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="757"></td>
          <td id="LC757" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="758"></td>
          <td id="LC758" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">//</span> assume GCC-style if not VC++</span></td>
        </tr>
        <tr>
          <td id="L759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="759"></td>
          <td id="LC759" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_SIMD_ALIGN</span>(<span class="pl-v">type, name</span>) type name <span class="pl-en">__attribute__</span>((aligned(<span class="pl-c1">16</span>)))</td>
        </tr>
        <tr>
          <td id="L760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="760"></td>
          <td id="LC760" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="761"></td>
          <td id="LC761" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_JPEG) &amp;&amp; defined(STBI_SSE2)</td>
        </tr>
        <tr>
          <td id="L762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="762"></td>
          <td id="LC762" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-en">stbi__sse2_available</span>(<span class="pl-k">void</span>)</td>
        </tr>
        <tr>
          <td id="L763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="763"></td>
          <td id="LC763" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="764"></td>
          <td id="LC764" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> If we&#39;re even attempting to compile this on GCC/Clang, that means</span></td>
        </tr>
        <tr>
          <td id="L765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="765"></td>
          <td id="LC765" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> -msse2 is on, which means the compiler is allowed to use SSE2</span></td>
        </tr>
        <tr>
          <td id="L766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="766"></td>
          <td id="LC766" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> instructions at will, and so are we.</span></td>
        </tr>
        <tr>
          <td id="L767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="767"></td>
          <td id="LC767" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="768"></td>
          <td id="LC768" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="769"></td>
          <td id="LC769" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="770"></td>
          <td id="LC770" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="771"></td>
          <td id="LC771" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="772"></td>
          <td id="LC772" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="773"></td>
          <td id="LC773" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="774"></td>
          <td id="LC774" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> ARM NEON</span></td>
        </tr>
        <tr>
          <td id="L775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="775"></td>
          <td id="LC775" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_SIMD) &amp;&amp; defined(STBI_NEON)</td>
        </tr>
        <tr>
          <td id="L776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="776"></td>
          <td id="LC776" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> STBI_NEON</td>
        </tr>
        <tr>
          <td id="L777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="777"></td>
          <td id="LC777" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="778"></td>
          <td id="LC778" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="779"></td>
          <td id="LC779" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_NEON</td>
        </tr>
        <tr>
          <td id="L780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="780"></td>
          <td id="LC780" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>arm_neon.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="781"></td>
          <td id="LC781" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> _MSC_VER</td>
        </tr>
        <tr>
          <td id="L782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="782"></td>
          <td id="LC782" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_SIMD_ALIGN</span>(<span class="pl-v">type, name</span>) __declspec(align(<span class="pl-c1">16</span>)) type name</td>
        </tr>
        <tr>
          <td id="L783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="783"></td>
          <td id="LC783" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="784"></td>
          <td id="LC784" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_SIMD_ALIGN</span>(<span class="pl-v">type, name</span>) type name <span class="pl-en">__attribute__</span>((aligned(<span class="pl-c1">16</span>)))</td>
        </tr>
        <tr>
          <td id="L785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="785"></td>
          <td id="LC785" class="blob-code blob-code-inner js-file-line">#endif</td>
        </tr>
        <tr>
          <td id="L786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="786"></td>
          <td id="LC786" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="787"></td>
          <td id="LC787" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="788"></td>
          <td id="LC788" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_SIMD_ALIGN</td>
        </tr>
        <tr>
          <td id="L789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="789"></td>
          <td id="LC789" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_SIMD_ALIGN</span>(<span class="pl-v">type, name</span>) type name</td>
        </tr>
        <tr>
          <td id="L790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="790"></td>
          <td id="LC790" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="791"></td>
          <td id="LC791" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="792"></td>
          <td id="LC792" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_MAX_DIMENSIONS</td>
        </tr>
        <tr>
          <td id="L793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="793"></td>
          <td id="LC793" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI_MAX_DIMENSIONS</span> (<span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">24</span>)</td>
        </tr>
        <tr>
          <td id="L794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="794"></td>
          <td id="LC794" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="795"></td>
          <td id="LC795" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="796"></td>
          <td id="LC796" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/////////////////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="797"></td>
          <td id="LC797" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="798"></td>
          <td id="LC798" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  stbi__context struct and start_xxx functions</span></td>
        </tr>
        <tr>
          <td id="L799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="799"></td>
          <td id="LC799" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="800"></td>
          <td id="LC800" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi__context structure is our basic context used by all images, so it</span></td>
        </tr>
        <tr>
          <td id="L801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="801"></td>
          <td id="LC801" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> contains all the IO context, plus some basic image information</span></td>
        </tr>
        <tr>
          <td id="L802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="802"></td>
          <td id="LC802" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="803"></td>
          <td id="LC803" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="804"></td>
          <td id="LC804" class="blob-code blob-code-inner js-file-line">   stbi__uint32 img_x, img_y;</td>
        </tr>
        <tr>
          <td id="L805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="805"></td>
          <td id="LC805" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_n, img_out_n;</td>
        </tr>
        <tr>
          <td id="L806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="806"></td>
          <td id="LC806" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="807"></td>
          <td id="LC807" class="blob-code blob-code-inner js-file-line">   stbi_io_callbacks io;</td>
        </tr>
        <tr>
          <td id="L808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="808"></td>
          <td id="LC808" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">void</span> *io_user_data;</td>
        </tr>
        <tr>
          <td id="L809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="809"></td>
          <td id="LC809" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="810"></td>
          <td id="LC810" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> read_from_callbacks;</td>
        </tr>
        <tr>
          <td id="L811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="811"></td>
          <td id="LC811" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> buflen;</td>
        </tr>
        <tr>
          <td id="L812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="812"></td>
          <td id="LC812" class="blob-code blob-code-inner js-file-line">   stbi_uc buffer_start[<span class="pl-c1">128</span>];</td>
        </tr>
        <tr>
          <td id="L813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="813"></td>
          <td id="LC813" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> callback_already_read;</td>
        </tr>
        <tr>
          <td id="L814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="814"></td>
          <td id="LC814" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="815"></td>
          <td id="LC815" class="blob-code blob-code-inner js-file-line">   stbi_uc *img_buffer, *img_buffer_end;</td>
        </tr>
        <tr>
          <td id="L816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="816"></td>
          <td id="LC816" class="blob-code blob-code-inner js-file-line">   stbi_uc *img_buffer_original, *img_buffer_original_end;</td>
        </tr>
        <tr>
          <td id="L817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="817"></td>
          <td id="LC817" class="blob-code blob-code-inner js-file-line">} stbi__context;</td>
        </tr>
        <tr>
          <td id="L818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="818"></td>
          <td id="LC818" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="819"></td>
          <td id="LC819" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="820"></td>
          <td id="LC820" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__refill_buffer</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="821"></td>
          <td id="LC821" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="822"></td>
          <td id="LC822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> initialize a memory-decode context</span></td>
        </tr>
        <tr>
          <td id="L823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="823"></td>
          <td id="LC823" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__start_mem</span>(stbi__context *s, stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len)</td>
        </tr>
        <tr>
          <td id="L824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="824"></td>
          <td id="LC824" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="825"></td>
          <td id="LC825" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">read</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="826"></td>
          <td id="LC826" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">read_from_callbacks</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="827"></td>
          <td id="LC827" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">callback_already_read</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="828"></td>
          <td id="LC828" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">img_buffer_original</span> = (stbi_uc *) buffer;</td>
        </tr>
        <tr>
          <td id="L829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="829"></td>
          <td id="LC829" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer_end</span> = s-&gt;<span class="pl-smi">img_buffer_original_end</span> = (stbi_uc *) buffer+len;</td>
        </tr>
        <tr>
          <td id="L830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="830"></td>
          <td id="LC830" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="831"></td>
          <td id="LC831" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="832"></td>
          <td id="LC832" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> initialize a callback-based context</span></td>
        </tr>
        <tr>
          <td id="L833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="833"></td>
          <td id="LC833" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__start_callbacks</span>(stbi__context *s, stbi_io_callbacks *c, <span class="pl-k">void</span> *user)</td>
        </tr>
        <tr>
          <td id="L834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="834"></td>
          <td id="LC834" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="835"></td>
          <td id="LC835" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">io</span> = *c;</td>
        </tr>
        <tr>
          <td id="L836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="836"></td>
          <td id="LC836" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">io_user_data</span> = user;</td>
        </tr>
        <tr>
          <td id="L837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="837"></td>
          <td id="LC837" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">buflen</span> = <span class="pl-k">sizeof</span>(s-&gt;<span class="pl-smi">buffer_start</span>);</td>
        </tr>
        <tr>
          <td id="L838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="838"></td>
          <td id="LC838" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">read_from_callbacks</span> = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="839"></td>
          <td id="LC839" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">callback_already_read</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="840"></td>
          <td id="LC840" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">img_buffer_original</span> = s-&gt;<span class="pl-smi">buffer_start</span>;</td>
        </tr>
        <tr>
          <td id="L841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="841"></td>
          <td id="LC841" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__refill_buffer</span>(s);</td>
        </tr>
        <tr>
          <td id="L842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="842"></td>
          <td id="LC842" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer_original_end</span> = s-&gt;<span class="pl-smi">img_buffer_end</span>;</td>
        </tr>
        <tr>
          <td id="L843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="843"></td>
          <td id="LC843" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="844"></td>
          <td id="LC844" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="845"></td>
          <td id="LC845" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="846"></td>
          <td id="LC846" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="847"></td>
          <td id="LC847" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__stdio_read</span>(<span class="pl-k">void</span> *user, <span class="pl-k">char</span> *data, <span class="pl-k">int</span> size)</td>
        </tr>
        <tr>
          <td id="L848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="848"></td>
          <td id="LC848" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="849"></td>
          <td id="LC849" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (<span class="pl-k">int</span>) <span class="pl-c1">fread</span>(data,<span class="pl-c1">1</span>,size,(FILE*) user);</td>
        </tr>
        <tr>
          <td id="L850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="850"></td>
          <td id="LC850" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="851"></td>
          <td id="LC851" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="852"></td>
          <td id="LC852" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__stdio_skip</span>(<span class="pl-k">void</span> *user, <span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="853"></td>
          <td id="LC853" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="854"></td>
          <td id="LC854" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> ch;</td>
        </tr>
        <tr>
          <td id="L855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="855"></td>
          <td id="LC855" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fseek</span>((FILE*) user, n, SEEK_CUR);</td>
        </tr>
        <tr>
          <td id="L856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="856"></td>
          <td id="LC856" class="blob-code blob-code-inner js-file-line">   ch = <span class="pl-c1">fgetc</span>((FILE*) user);  <span class="pl-c"><span class="pl-c">/*</span> have to read a byte to reset feof()&#39;s flag <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="857"></td>
          <td id="LC857" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (ch != EOF) {</td>
        </tr>
        <tr>
          <td id="L858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="858"></td>
          <td id="LC858" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">ungetc</span>(ch, (FILE *) user);  <span class="pl-c"><span class="pl-c">/*</span> push byte back onto stream if valid. <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="859"></td>
          <td id="LC859" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="860"></td>
          <td id="LC860" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="861"></td>
          <td id="LC861" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="862"></td>
          <td id="LC862" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__stdio_eof</span>(<span class="pl-k">void</span> *user)</td>
        </tr>
        <tr>
          <td id="L863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="863"></td>
          <td id="LC863" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="864"></td>
          <td id="LC864" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">feof</span>((FILE*) user) || <span class="pl-c1">ferror</span>((FILE *) user);</td>
        </tr>
        <tr>
          <td id="L865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="865"></td>
          <td id="LC865" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="866"></td>
          <td id="LC866" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="867"></td>
          <td id="LC867" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_io_callbacks stbi__stdio_callbacks =</td>
        </tr>
        <tr>
          <td id="L868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="868"></td>
          <td id="LC868" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="869"></td>
          <td id="LC869" class="blob-code blob-code-inner js-file-line">   stbi__stdio_read,</td>
        </tr>
        <tr>
          <td id="L870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="870"></td>
          <td id="LC870" class="blob-code blob-code-inner js-file-line">   stbi__stdio_skip,</td>
        </tr>
        <tr>
          <td id="L871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="871"></td>
          <td id="LC871" class="blob-code blob-code-inner js-file-line">   stbi__stdio_eof,</td>
        </tr>
        <tr>
          <td id="L872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="872"></td>
          <td id="LC872" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="873"></td>
          <td id="LC873" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="874"></td>
          <td id="LC874" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__start_file</span>(stbi__context *s, FILE *f)</td>
        </tr>
        <tr>
          <td id="L875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="875"></td>
          <td id="LC875" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="876"></td>
          <td id="LC876" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(s, &amp;stbi__stdio_callbacks, (<span class="pl-k">void</span> *) f);</td>
        </tr>
        <tr>
          <td id="L877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="877"></td>
          <td id="LC877" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="878"></td>
          <td id="LC878" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="879"></td>
          <td id="LC879" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>static void stop_file(stbi__context *s) { }</span></td>
        </tr>
        <tr>
          <td id="L880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="880"></td>
          <td id="LC880" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="881"></td>
          <td id="LC881" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="882"></td>
          <td id="LC882" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="883"></td>
          <td id="LC883" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__rewind</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="884"></td>
          <td id="LC884" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="885"></td>
          <td id="LC885" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> conceptually rewind SHOULD rewind to the beginning of the stream,</span></td>
        </tr>
        <tr>
          <td id="L886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="886"></td>
          <td id="LC886" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> but we just rewind to the beginning of the initial buffer, because</span></td>
        </tr>
        <tr>
          <td id="L887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="887"></td>
          <td id="LC887" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> we only use it after doing &#39;test&#39;, which only ever looks at at most 92 bytes</span></td>
        </tr>
        <tr>
          <td id="L888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="888"></td>
          <td id="LC888" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">img_buffer_original</span>;</td>
        </tr>
        <tr>
          <td id="L889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="889"></td>
          <td id="LC889" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer_end</span> = s-&gt;<span class="pl-smi">img_buffer_original_end</span>;</td>
        </tr>
        <tr>
          <td id="L890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="890"></td>
          <td id="LC890" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="891"></td>
          <td id="LC891" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="892"></td>
          <td id="LC892" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span></td>
        </tr>
        <tr>
          <td id="L893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="893"></td>
          <td id="LC893" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="894"></td>
          <td id="LC894" class="blob-code blob-code-inner js-file-line">   STBI_ORDER_RGB,</td>
        </tr>
        <tr>
          <td id="L895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="895"></td>
          <td id="LC895" class="blob-code blob-code-inner js-file-line">   STBI_ORDER_BGR</td>
        </tr>
        <tr>
          <td id="L896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="896"></td>
          <td id="LC896" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="897"></td>
          <td id="LC897" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="898"></td>
          <td id="LC898" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="899"></td>
          <td id="LC899" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="900"></td>
          <td id="LC900" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> bits_per_channel;</td>
        </tr>
        <tr>
          <td id="L901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="901"></td>
          <td id="LC901" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> num_channels;</td>
        </tr>
        <tr>
          <td id="L902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="902"></td>
          <td id="LC902" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> channel_order;</td>
        </tr>
        <tr>
          <td id="L903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="903"></td>
          <td id="LC903" class="blob-code blob-code-inner js-file-line">} stbi__result_info;</td>
        </tr>
        <tr>
          <td id="L904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="904"></td>
          <td id="LC904" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="905"></td>
          <td id="LC905" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_JPEG</td>
        </tr>
        <tr>
          <td id="L906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="906"></td>
          <td id="LC906" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__jpeg_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="907"></td>
          <td id="LC907" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__jpeg_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="908"></td>
          <td id="LC908" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__jpeg_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="909"></td>
          <td id="LC909" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="910"></td>
          <td id="LC910" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="911"></td>
          <td id="LC911" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PNG</td>
        </tr>
        <tr>
          <td id="L912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="912"></td>
          <td id="LC912" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__png_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="913"></td>
          <td id="LC913" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__png_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="914"></td>
          <td id="LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__png_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="915"></td>
          <td id="LC915" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__png_is16</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="916"></td>
          <td id="LC916" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="917"></td>
          <td id="LC917" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="918"></td>
          <td id="LC918" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_BMP</td>
        </tr>
        <tr>
          <td id="L919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="919"></td>
          <td id="LC919" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__bmp_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="920"></td>
          <td id="LC920" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__bmp_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="921"></td>
          <td id="LC921" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__bmp_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="922"></td>
          <td id="LC922" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="923"></td>
          <td id="LC923" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="924"></td>
          <td id="LC924" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_TGA</td>
        </tr>
        <tr>
          <td id="L925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="925"></td>
          <td id="LC925" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__tga_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="926"></td>
          <td id="LC926" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__tga_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="927"></td>
          <td id="LC927" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__tga_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="928"></td>
          <td id="LC928" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="929"></td>
          <td id="LC929" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="930"></td>
          <td id="LC930" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PSD</td>
        </tr>
        <tr>
          <td id="L931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="931"></td>
          <td id="LC931" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__psd_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="932"></td>
          <td id="LC932" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__psd_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri, <span class="pl-k">int</span> bpc);</td>
        </tr>
        <tr>
          <td id="L933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="933"></td>
          <td id="LC933" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__psd_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="934"></td>
          <td id="LC934" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__psd_is16</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="935"></td>
          <td id="LC935" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="936"></td>
          <td id="LC936" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="937"></td>
          <td id="LC937" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="938"></td>
          <td id="LC938" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__hdr_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="939"></td>
          <td id="LC939" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span>   *<span class="pl-c1">stbi__hdr_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="940"></td>
          <td id="LC940" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__hdr_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="941"></td>
          <td id="LC941" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="942"></td>
          <td id="LC942" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="943"></td>
          <td id="LC943" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PIC</td>
        </tr>
        <tr>
          <td id="L944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="944"></td>
          <td id="LC944" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pic_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="945"></td>
          <td id="LC945" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__pic_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="946"></td>
          <td id="LC946" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pic_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="947"></td>
          <td id="LC947" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="948"></td>
          <td id="LC948" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="949"></td>
          <td id="LC949" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="950"></td>
          <td id="LC950" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__gif_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="951"></td>
          <td id="LC951" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__gif_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="952"></td>
          <td id="LC952" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__load_gif_main</span>(stbi__context *s, <span class="pl-k">int</span> **delays, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *z, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp);</td>
        </tr>
        <tr>
          <td id="L953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="953"></td>
          <td id="LC953" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__gif_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="954"></td>
          <td id="LC954" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="955"></td>
          <td id="LC955" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="956"></td>
          <td id="LC956" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PNM</td>
        </tr>
        <tr>
          <td id="L957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="957"></td>
          <td id="LC957" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_test</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="958"></td>
          <td id="LC958" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>    *<span class="pl-c1">stbi__pnm_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri);</td>
        </tr>
        <tr>
          <td id="L959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="959"></td>
          <td id="LC959" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp);</td>
        </tr>
        <tr>
          <td id="L960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="960"></td>
          <td id="LC960" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_is16</span>(stbi__context *s);</td>
        </tr>
        <tr>
          <td id="L961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="961"></td>
          <td id="LC961" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="962"></td>
          <td id="LC962" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="963"></td>
          <td id="LC963" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span></td>
        </tr>
        <tr>
          <td id="L964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="964"></td>
          <td id="LC964" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_THREAD_LOCAL</td>
        </tr>
        <tr>
          <td id="L965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="965"></td>
          <td id="LC965" class="blob-code blob-code-inner js-file-line">STBI_THREAD_LOCAL</td>
        </tr>
        <tr>
          <td id="L966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="966"></td>
          <td id="LC966" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="967"></td>
          <td id="LC967" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">char</span> *stbi__g_failure_reason;</td>
        </tr>
        <tr>
          <td id="L968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="968"></td>
          <td id="LC968" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="969"></td>
          <td id="LC969" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">const</span> <span class="pl-k">char</span> *<span class="pl-c1">stbi_failure_reason</span>(<span class="pl-k">void</span>)</td>
        </tr>
        <tr>
          <td id="L970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="970"></td>
          <td id="LC970" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="971"></td>
          <td id="LC971" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> stbi__g_failure_reason;</td>
        </tr>
        <tr>
          <td id="L972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="972"></td>
          <td id="LC972" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="973"></td>
          <td id="LC973" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="974"></td>
          <td id="LC974" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_FAILURE_STRINGS</td>
        </tr>
        <tr>
          <td id="L975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="975"></td>
          <td id="LC975" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__err</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *str)</td>
        </tr>
        <tr>
          <td id="L976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="976"></td>
          <td id="LC976" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="977"></td>
          <td id="LC977" class="blob-code blob-code-inner js-file-line">   stbi__g_failure_reason = str;</td>
        </tr>
        <tr>
          <td id="L978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="978"></td>
          <td id="LC978" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="979"></td>
          <td id="LC979" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="980"></td>
          <td id="LC980" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="981"></td>
          <td id="LC981" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="982"></td>
          <td id="LC982" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__malloc</span>(<span class="pl-c1">size_t</span> size)</td>
        </tr>
        <tr>
          <td id="L983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="983"></td>
          <td id="LC983" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="984"></td>
          <td id="LC984" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">STBI_MALLOC</span>(size);</td>
        </tr>
        <tr>
          <td id="L985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="985"></td>
          <td id="LC985" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="986"></td>
          <td id="LC986" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="987"></td>
          <td id="LC987" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stb_image uses ints pervasively, including for offset calculations.</span></td>
        </tr>
        <tr>
          <td id="L988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="988"></td>
          <td id="LC988" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> therefore the largest decoded image size we can support with the</span></td>
        </tr>
        <tr>
          <td id="L989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="989"></td>
          <td id="LC989" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> current code, even on 64-bit targets, is INT_MAX. this is not a</span></td>
        </tr>
        <tr>
          <td id="L990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="990"></td>
          <td id="LC990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> significant limitation for the intended use case.</span></td>
        </tr>
        <tr>
          <td id="L991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="991"></td>
          <td id="LC991" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="992"></td>
          <td id="LC992" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> we do, however, need to make sure our size calculations don&#39;t</span></td>
        </tr>
        <tr>
          <td id="L993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="993"></td>
          <td id="LC993" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> overflow. hence a few helper functions for size calculations that</span></td>
        </tr>
        <tr>
          <td id="L994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="994"></td>
          <td id="LC994" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> multiply integers together, making sure that they&#39;re non-negative</span></td>
        </tr>
        <tr>
          <td id="L995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="995"></td>
          <td id="LC995" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and no overflow occurs.</span></td>
        </tr>
        <tr>
          <td id="L996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="996"></td>
          <td id="LC996" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="997"></td>
          <td id="LC997" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> return 1 if the sum is valid, 0 on overflow.</span></td>
        </tr>
        <tr>
          <td id="L998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="998"></td>
          <td id="LC998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> negative terms are considered invalid.</span></td>
        </tr>
        <tr>
          <td id="L999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="999"></td>
          <td id="LC999" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__addsizes_valid</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b)</td>
        </tr>
        <tr>
          <td id="L1000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1000"></td>
          <td id="LC1000" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1001"></td>
          <td id="LC1001" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (b &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1002"></td>
          <td id="LC1002" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> now 0 &lt;= b &lt;= INT_MAX, hence also</span></td>
        </tr>
        <tr>
          <td id="L1003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1003"></td>
          <td id="LC1003" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> 0 &lt;= INT_MAX - b &lt;= INTMAX.</span></td>
        </tr>
        <tr>
          <td id="L1004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1004"></td>
          <td id="LC1004" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> And &quot;a + b &lt;= INT_MAX&quot; (which might overflow) is the</span></td>
        </tr>
        <tr>
          <td id="L1005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1005"></td>
          <td id="LC1005" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> same as a &lt;= INT_MAX - b (no overflow)</span></td>
        </tr>
        <tr>
          <td id="L1006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1006"></td>
          <td id="LC1006" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> a &lt;= INT_MAX - b;</td>
        </tr>
        <tr>
          <td id="L1007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1007"></td>
          <td id="LC1007" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1008"></td>
          <td id="LC1008" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1009"></td>
          <td id="LC1009" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> returns 1 if the product is valid, 0 on overflow.</span></td>
        </tr>
        <tr>
          <td id="L1010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1010"></td>
          <td id="LC1010" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> negative factors are considered invalid.</span></td>
        </tr>
        <tr>
          <td id="L1011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1011"></td>
          <td id="LC1011" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__mul2sizes_valid</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b)</td>
        </tr>
        <tr>
          <td id="L1012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1012"></td>
          <td id="LC1012" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1013"></td>
          <td id="LC1013" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (a &lt; <span class="pl-c1">0</span> || b &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1014"></td>
          <td id="LC1014" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (b == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> mul-by-0 is always safe</span></td>
        </tr>
        <tr>
          <td id="L1015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1015"></td>
          <td id="LC1015" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> portable way to check for no overflows in a*b</span></td>
        </tr>
        <tr>
          <td id="L1016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1016"></td>
          <td id="LC1016" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> a &lt;= INT_MAX/b;</td>
        </tr>
        <tr>
          <td id="L1017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1017"></td>
          <td id="LC1017" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1018"></td>
          <td id="LC1018" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1019"></td>
          <td id="LC1019" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_JPEG) || !defined(STBI_NO_PNG) || !defined(STBI_NO_TGA) || !defined(STBI_NO_HDR)</td>
        </tr>
        <tr>
          <td id="L1020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1020"></td>
          <td id="LC1020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> returns 1 if &quot;a*b + add&quot; has no negative terms/factors and doesn&#39;t overflow</span></td>
        </tr>
        <tr>
          <td id="L1021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1021"></td>
          <td id="LC1021" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__mad2sizes_valid</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> add)</td>
        </tr>
        <tr>
          <td id="L1022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1022"></td>
          <td id="LC1022" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1023"></td>
          <td id="LC1023" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__mul2sizes_valid</span>(a, b) &amp;&amp; <span class="pl-c1">stbi__addsizes_valid</span>(a*b, add);</td>
        </tr>
        <tr>
          <td id="L1024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1024"></td>
          <td id="LC1024" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1025"></td>
          <td id="LC1025" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1026"></td>
          <td id="LC1026" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1027"></td>
          <td id="LC1027" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> returns 1 if &quot;a*b*c + add&quot; has no negative terms/factors and doesn&#39;t overflow</span></td>
        </tr>
        <tr>
          <td id="L1028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1028"></td>
          <td id="LC1028" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__mad3sizes_valid</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> c, <span class="pl-k">int</span> add)</td>
        </tr>
        <tr>
          <td id="L1029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1029"></td>
          <td id="LC1029" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1030"></td>
          <td id="LC1030" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__mul2sizes_valid</span>(a, b) &amp;&amp; <span class="pl-c1">stbi__mul2sizes_valid</span>(a*b, c) &amp;&amp;</td>
        </tr>
        <tr>
          <td id="L1031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1031"></td>
          <td id="LC1031" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__addsizes_valid</span>(a*b*c, add);</td>
        </tr>
        <tr>
          <td id="L1032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1032"></td>
          <td id="LC1032" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1033"></td>
          <td id="LC1033" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1034"></td>
          <td id="LC1034" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> returns 1 if &quot;a*b*c*d + add&quot; has no negative terms/factors and doesn&#39;t overflow</span></td>
        </tr>
        <tr>
          <td id="L1035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1035"></td>
          <td id="LC1035" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_LINEAR) || !defined(STBI_NO_HDR) || !defined(STBI_NO_PNM)</td>
        </tr>
        <tr>
          <td id="L1036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1036"></td>
          <td id="LC1036" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__mad4sizes_valid</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> c, <span class="pl-k">int</span> d, <span class="pl-k">int</span> add)</td>
        </tr>
        <tr>
          <td id="L1037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1037"></td>
          <td id="LC1037" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1038"></td>
          <td id="LC1038" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__mul2sizes_valid</span>(a, b) &amp;&amp; <span class="pl-c1">stbi__mul2sizes_valid</span>(a*b, c) &amp;&amp;</td>
        </tr>
        <tr>
          <td id="L1039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1039"></td>
          <td id="LC1039" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__mul2sizes_valid</span>(a*b*c, d) &amp;&amp; <span class="pl-c1">stbi__addsizes_valid</span>(a*b*c*d, add);</td>
        </tr>
        <tr>
          <td id="L1040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1040"></td>
          <td id="LC1040" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1041"></td>
          <td id="LC1041" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1042"></td>
          <td id="LC1042" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1043"></td>
          <td id="LC1043" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_JPEG) || !defined(STBI_NO_PNG) || !defined(STBI_NO_TGA) || !defined(STBI_NO_HDR)</td>
        </tr>
        <tr>
          <td id="L1044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1044"></td>
          <td id="LC1044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> mallocs with size overflow checking</span></td>
        </tr>
        <tr>
          <td id="L1045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1045"></td>
          <td id="LC1045" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__malloc_mad2</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> add)</td>
        </tr>
        <tr>
          <td id="L1046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1046"></td>
          <td id="LC1046" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1047"></td>
          <td id="LC1047" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad2sizes_valid</span>(a, b, add)) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1048"></td>
          <td id="LC1048" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__malloc</span>(a*b + add);</td>
        </tr>
        <tr>
          <td id="L1049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1049"></td>
          <td id="LC1049" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1050"></td>
          <td id="LC1050" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1051"></td>
          <td id="LC1051" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1052"></td>
          <td id="LC1052" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__malloc_mad3</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> c, <span class="pl-k">int</span> add)</td>
        </tr>
        <tr>
          <td id="L1053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1053"></td>
          <td id="LC1053" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1054"></td>
          <td id="LC1054" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(a, b, c, add)) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1055"></td>
          <td id="LC1055" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__malloc</span>(a*b*c + add);</td>
        </tr>
        <tr>
          <td id="L1056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1056"></td>
          <td id="LC1056" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1057"></td>
          <td id="LC1057" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1058"></td>
          <td id="LC1058" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_LINEAR) || !defined(STBI_NO_HDR) || !defined(STBI_NO_PNM)</td>
        </tr>
        <tr>
          <td id="L1059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1059"></td>
          <td id="LC1059" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__malloc_mad4</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> c, <span class="pl-k">int</span> d, <span class="pl-k">int</span> add)</td>
        </tr>
        <tr>
          <td id="L1060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1060"></td>
          <td id="LC1060" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1061"></td>
          <td id="LC1061" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad4sizes_valid</span>(a, b, c, d, add)) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1062"></td>
          <td id="LC1062" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__malloc</span>(a*b*c*d + add);</td>
        </tr>
        <tr>
          <td id="L1063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1063"></td>
          <td id="LC1063" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1064"></td>
          <td id="LC1064" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1065"></td>
          <td id="LC1065" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1066"></td>
          <td id="LC1066" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi__err - error</span></td>
        </tr>
        <tr>
          <td id="L1067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1067"></td>
          <td id="LC1067" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi__errpf - error returning pointer to float</span></td>
        </tr>
        <tr>
          <td id="L1068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1068"></td>
          <td id="LC1068" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> stbi__errpuc - error returning pointer to unsigned char</span></td>
        </tr>
        <tr>
          <td id="L1069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1069"></td>
          <td id="LC1069" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1070"></td>
          <td id="LC1070" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_NO_FAILURE_STRINGS</td>
        </tr>
        <tr>
          <td id="L1071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1071"></td>
          <td id="LC1071" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi__err</span>(<span class="pl-v">x,y</span>)  <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L1072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1072"></td>
          <td id="LC1072" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> defined(STBI_FAILURE_USERMSG)</td>
        </tr>
        <tr>
          <td id="L1073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1073"></td>
          <td id="LC1073" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi__err</span>(<span class="pl-v">x,y</span>)  stbi__err(y)</td>
        </tr>
        <tr>
          <td id="L1074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1074"></td>
          <td id="LC1074" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1075"></td>
          <td id="LC1075" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">stbi__err</span>(<span class="pl-v">x,y</span>)  stbi__err(x)</td>
        </tr>
        <tr>
          <td id="L1076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1076"></td>
          <td id="LC1076" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1077"></td>
          <td id="LC1077" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1078"></td>
          <td id="LC1078" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__errpf</span>(<span class="pl-v">x,y</span>)   ((<span class="pl-k">float</span> *)(<span class="pl-c1">size_t</span>) (stbi__err(x,y)?<span class="pl-c1">NULL</span>:<span class="pl-c1">NULL</span>))</td>
        </tr>
        <tr>
          <td id="L1079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1079"></td>
          <td id="LC1079" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__errpuc</span>(<span class="pl-v">x,y</span>)  ((<span class="pl-k">unsigned</span> <span class="pl-k">char</span> *)(<span class="pl-c1">size_t</span>) (stbi__err(x,y)?<span class="pl-c1">NULL</span>:<span class="pl-c1">NULL</span>))</td>
        </tr>
        <tr>
          <td id="L1080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1080"></td>
          <td id="LC1080" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1081"></td>
          <td id="LC1081" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_image_free</span>(<span class="pl-k">void</span> *retval_from_stbi_load)</td>
        </tr>
        <tr>
          <td id="L1082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1082"></td>
          <td id="LC1082" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1083"></td>
          <td id="LC1083" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(retval_from_stbi_load);</td>
        </tr>
        <tr>
          <td id="L1084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1084"></td>
          <td id="LC1084" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1085"></td>
          <td id="LC1085" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1086"></td>
          <td id="LC1086" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_LINEAR</td>
        </tr>
        <tr>
          <td id="L1087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1087"></td>
          <td id="LC1087" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span>   *<span class="pl-c1">stbi__ldr_to_hdr</span>(stbi_uc *data, <span class="pl-k">int</span> x, <span class="pl-k">int</span> y, <span class="pl-k">int</span> comp);</td>
        </tr>
        <tr>
          <td id="L1088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1088"></td>
          <td id="LC1088" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1089"></td>
          <td id="LC1089" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1090"></td>
          <td id="LC1090" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1091"></td>
          <td id="LC1091" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__hdr_to_ldr</span>(<span class="pl-k">float</span>   *data, <span class="pl-k">int</span> x, <span class="pl-k">int</span> y, <span class="pl-k">int</span> comp);</td>
        </tr>
        <tr>
          <td id="L1092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1092"></td>
          <td id="LC1092" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1093"></td>
          <td id="LC1093" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1094"></td>
          <td id="LC1094" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> stbi__vertically_flip_on_load_global = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1095"></td>
          <td id="LC1095" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1096"></td>
          <td id="LC1096" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_flip_vertically_on_load</span>(<span class="pl-k">int</span> flag_true_if_should_flip)</td>
        </tr>
        <tr>
          <td id="L1097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1097"></td>
          <td id="LC1097" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1098"></td>
          <td id="LC1098" class="blob-code blob-code-inner js-file-line">   stbi__vertically_flip_on_load_global = flag_true_if_should_flip;</td>
        </tr>
        <tr>
          <td id="L1099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1099"></td>
          <td id="LC1099" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1100"></td>
          <td id="LC1100" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1101"></td>
          <td id="LC1101" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_THREAD_LOCAL</td>
        </tr>
        <tr>
          <td id="L1102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1102"></td>
          <td id="LC1102" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__vertically_flip_on_load</span>  stbi__vertically_flip_on_load_global</td>
        </tr>
        <tr>
          <td id="L1103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1103"></td>
          <td id="LC1103" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1104"></td>
          <td id="LC1104" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> STBI_THREAD_LOCAL <span class="pl-k">int</span> stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_set;</td>
        </tr>
        <tr>
          <td id="L1105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1105"></td>
          <td id="LC1105" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1106"></td>
          <td id="LC1106" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_flip_vertically_on_load_thread</span>(<span class="pl-k">int</span> flag_true_if_should_flip)</td>
        </tr>
        <tr>
          <td id="L1107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1107"></td>
          <td id="LC1107" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1108"></td>
          <td id="LC1108" class="blob-code blob-code-inner js-file-line">   stbi__vertically_flip_on_load_local = flag_true_if_should_flip;</td>
        </tr>
        <tr>
          <td id="L1109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1109"></td>
          <td id="LC1109" class="blob-code blob-code-inner js-file-line">   stbi__vertically_flip_on_load_set = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L1110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1110"></td>
          <td id="LC1110" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1111"></td>
          <td id="LC1111" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1112"></td>
          <td id="LC1112" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__vertically_flip_on_load</span>  (stbi__vertically_flip_on_load_set       \</td>
        </tr>
        <tr>
          <td id="L1113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1113"></td>
          <td id="LC1113" class="blob-code blob-code-inner js-file-line">                                         ? stbi__vertically_flip_on_load_local  \</td>
        </tr>
        <tr>
          <td id="L1114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1114"></td>
          <td id="LC1114" class="blob-code blob-code-inner js-file-line">                                         : stbi__vertically_flip_on_load_global)</td>
        </tr>
        <tr>
          <td id="L1115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1115"></td>
          <td id="LC1115" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_THREAD_LOCAL</span></td>
        </tr>
        <tr>
          <td id="L1116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1116"></td>
          <td id="LC1116" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1117"></td>
          <td id="LC1117" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__load_main</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri, <span class="pl-k">int</span> bpc)</td>
        </tr>
        <tr>
          <td id="L1118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1118"></td>
          <td id="LC1118" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1119"></td>
          <td id="LC1119" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(ri, <span class="pl-c1">0</span>, <span class="pl-k">sizeof</span>(*ri)); <span class="pl-c"><span class="pl-c">//</span> make sure it&#39;s initialized if we add new fields</span></td>
        </tr>
        <tr>
          <td id="L1120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1120"></td>
          <td id="LC1120" class="blob-code blob-code-inner js-file-line">   ri-&gt;<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">8</span>; <span class="pl-c"><span class="pl-c">//</span> default is 8 so most paths don&#39;t have to be changed</span></td>
        </tr>
        <tr>
          <td id="L1121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1121"></td>
          <td id="LC1121" class="blob-code blob-code-inner js-file-line">   ri-&gt;<span class="pl-smi">channel_order</span> = STBI_ORDER_RGB; <span class="pl-c"><span class="pl-c">//</span> all current input &amp; output are this, but this is here so we can add BGR order</span></td>
        </tr>
        <tr>
          <td id="L1122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1122"></td>
          <td id="LC1122" class="blob-code blob-code-inner js-file-line">   ri-&gt;<span class="pl-smi">num_channels</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1123"></td>
          <td id="LC1123" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1124"></td>
          <td id="LC1124" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> test the formats with a very explicit header first (at least a FOURCC</span></td>
        </tr>
        <tr>
          <td id="L1125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1125"></td>
          <td id="LC1125" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> or distinctive magic number first)</span></td>
        </tr>
        <tr>
          <td id="L1126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1126"></td>
          <td id="LC1126" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PNG</td>
        </tr>
        <tr>
          <td id="L1127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1127"></td>
          <td id="LC1127" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__png_test</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__png_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1128"></td>
          <td id="LC1128" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1129"></td>
          <td id="LC1129" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_BMP</td>
        </tr>
        <tr>
          <td id="L1130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1130"></td>
          <td id="LC1130" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__bmp_test</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__bmp_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1131"></td>
          <td id="LC1131" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1132"></td>
          <td id="LC1132" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L1133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1133"></td>
          <td id="LC1133" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__gif_test</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__gif_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1134"></td>
          <td id="LC1134" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1135"></td>
          <td id="LC1135" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PSD</td>
        </tr>
        <tr>
          <td id="L1136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1136"></td>
          <td id="LC1136" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__psd_test</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__psd_load</span>(s,x,y,comp,req_comp, ri, bpc);</td>
        </tr>
        <tr>
          <td id="L1137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1137"></td>
          <td id="LC1137" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1138"></td>
          <td id="LC1138" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(bpc);</td>
        </tr>
        <tr>
          <td id="L1139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1139"></td>
          <td id="LC1139" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1140"></td>
          <td id="LC1140" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PIC</td>
        </tr>
        <tr>
          <td id="L1141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1141"></td>
          <td id="LC1141" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__pic_test</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__pic_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1142"></td>
          <td id="LC1142" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1143"></td>
          <td id="LC1143" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1144"></td>
          <td id="LC1144" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> then the formats that can end up attempting to load with just 1 or 2</span></td>
        </tr>
        <tr>
          <td id="L1145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1145"></td>
          <td id="LC1145" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> bytes matching expectations; these are prone to false positives, so</span></td>
        </tr>
        <tr>
          <td id="L1146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1146"></td>
          <td id="LC1146" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> try them later</span></td>
        </tr>
        <tr>
          <td id="L1147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1147"></td>
          <td id="LC1147" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_JPEG</td>
        </tr>
        <tr>
          <td id="L1148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1148"></td>
          <td id="LC1148" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__jpeg_test</span>(s)) <span class="pl-k">return</span> <span class="pl-c1">stbi__jpeg_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1149"></td>
          <td id="LC1149" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1150"></td>
          <td id="LC1150" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PNM</td>
        </tr>
        <tr>
          <td id="L1151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1151"></td>
          <td id="LC1151" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__pnm_test</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__pnm_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1152"></td>
          <td id="LC1152" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1153"></td>
          <td id="LC1153" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1154"></td>
          <td id="LC1154" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1155"></td>
          <td id="LC1155" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__hdr_test</span>(s)) {</td>
        </tr>
        <tr>
          <td id="L1156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1156"></td>
          <td id="LC1156" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">float</span> *hdr = <span class="pl-c1">stbi__hdr_load</span>(s, x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1157"></td>
          <td id="LC1157" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__hdr_to_ldr</span>(hdr, *x, *y, req_comp ? req_comp : *comp);</td>
        </tr>
        <tr>
          <td id="L1158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1158"></td>
          <td id="LC1158" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1159"></td>
          <td id="LC1159" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1160"></td>
          <td id="LC1160" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1161"></td>
          <td id="LC1161" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_TGA</td>
        </tr>
        <tr>
          <td id="L1162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1162"></td>
          <td id="LC1162" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> test tga last because it&#39;s a crappy test!</span></td>
        </tr>
        <tr>
          <td id="L1163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1163"></td>
          <td id="LC1163" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__tga_test</span>(s))</td>
        </tr>
        <tr>
          <td id="L1164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1164"></td>
          <td id="LC1164" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__tga_load</span>(s,x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L1165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1165"></td>
          <td id="LC1165" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1166"></td>
          <td id="LC1166" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1167"></td>
          <td id="LC1167" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unknown image type<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Image not of any known type, or corrupt<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1168"></td>
          <td id="LC1168" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1169"></td>
          <td id="LC1169" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1170"></td>
          <td id="LC1170" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__convert_16_to_8</span>(stbi__uint16 *orig, <span class="pl-k">int</span> w, <span class="pl-k">int</span> h, <span class="pl-k">int</span> channels)</td>
        </tr>
        <tr>
          <td id="L1171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1171"></td>
          <td id="LC1171" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1172"></td>
          <td id="LC1172" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L1173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1173"></td>
          <td id="LC1173" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_len = w * h * channels;</td>
        </tr>
        <tr>
          <td id="L1174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1174"></td>
          <td id="LC1174" class="blob-code blob-code-inner js-file-line">   stbi_uc *reduced;</td>
        </tr>
        <tr>
          <td id="L1175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1175"></td>
          <td id="LC1175" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1176"></td>
          <td id="LC1176" class="blob-code blob-code-inner js-file-line">   reduced = (stbi_uc *) <span class="pl-c1">stbi__malloc</span>(img_len);</td>
        </tr>
        <tr>
          <td id="L1177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1177"></td>
          <td id="LC1177" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (reduced == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1178"></td>
          <td id="LC1178" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1179"></td>
          <td id="LC1179" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; img_len; ++i)</td>
        </tr>
        <tr>
          <td id="L1180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1180"></td>
          <td id="LC1180" class="blob-code blob-code-inner js-file-line">      reduced[i] = (stbi_uc)((orig[i] &gt;&gt; <span class="pl-c1">8</span>) &amp; <span class="pl-c1">0xFF</span>); <span class="pl-c"><span class="pl-c">//</span> top half of each byte is sufficient approx of 16-&gt;8 bit scaling</span></td>
        </tr>
        <tr>
          <td id="L1181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1181"></td>
          <td id="LC1181" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1182"></td>
          <td id="LC1182" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(orig);</td>
        </tr>
        <tr>
          <td id="L1183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1183"></td>
          <td id="LC1183" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> reduced;</td>
        </tr>
        <tr>
          <td id="L1184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1184"></td>
          <td id="LC1184" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1185"></td>
          <td id="LC1185" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1186"></td>
          <td id="LC1186" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__uint16 *<span class="pl-c1">stbi__convert_8_to_16</span>(stbi_uc *orig, <span class="pl-k">int</span> w, <span class="pl-k">int</span> h, <span class="pl-k">int</span> channels)</td>
        </tr>
        <tr>
          <td id="L1187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1187"></td>
          <td id="LC1187" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1188"></td>
          <td id="LC1188" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L1189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1189"></td>
          <td id="LC1189" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_len = w * h * channels;</td>
        </tr>
        <tr>
          <td id="L1190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1190"></td>
          <td id="LC1190" class="blob-code blob-code-inner js-file-line">   stbi__uint16 *enlarged;</td>
        </tr>
        <tr>
          <td id="L1191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1191"></td>
          <td id="LC1191" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1192"></td>
          <td id="LC1192" class="blob-code blob-code-inner js-file-line">   enlarged = (stbi__uint16 *) <span class="pl-c1">stbi__malloc</span>(img_len*<span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L1193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1193"></td>
          <td id="LC1193" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (enlarged == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> (stbi__uint16 *) <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1194"></td>
          <td id="LC1194" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1195"></td>
          <td id="LC1195" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; img_len; ++i)</td>
        </tr>
        <tr>
          <td id="L1196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1196"></td>
          <td id="LC1196" class="blob-code blob-code-inner js-file-line">      enlarged[i] = (stbi__uint16)((orig[i] &lt;&lt; <span class="pl-c1">8</span>) + orig[i]); <span class="pl-c"><span class="pl-c">//</span> replicate to high and low byte, maps 0-&gt;0, 255-&gt;0xffff</span></td>
        </tr>
        <tr>
          <td id="L1197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1197"></td>
          <td id="LC1197" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1198"></td>
          <td id="LC1198" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(orig);</td>
        </tr>
        <tr>
          <td id="L1199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1199"></td>
          <td id="LC1199" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> enlarged;</td>
        </tr>
        <tr>
          <td id="L1200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1200"></td>
          <td id="LC1200" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1201"></td>
          <td id="LC1201" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1202"></td>
          <td id="LC1202" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__vertical_flip</span>(<span class="pl-k">void</span> *image, <span class="pl-k">int</span> w, <span class="pl-k">int</span> h, <span class="pl-k">int</span> bytes_per_pixel)</td>
        </tr>
        <tr>
          <td id="L1203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1203"></td>
          <td id="LC1203" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1204"></td>
          <td id="LC1204" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> row;</td>
        </tr>
        <tr>
          <td id="L1205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1205"></td>
          <td id="LC1205" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">size_t</span> bytes_per_row = (<span class="pl-c1">size_t</span>)w * bytes_per_pixel;</td>
        </tr>
        <tr>
          <td id="L1206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1206"></td>
          <td id="LC1206" class="blob-code blob-code-inner js-file-line">   stbi_uc temp[<span class="pl-c1">2048</span>];</td>
        </tr>
        <tr>
          <td id="L1207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1207"></td>
          <td id="LC1207" class="blob-code blob-code-inner js-file-line">   stbi_uc *bytes = (stbi_uc *)image;</td>
        </tr>
        <tr>
          <td id="L1208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1208"></td>
          <td id="LC1208" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1209"></td>
          <td id="LC1209" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (row = <span class="pl-c1">0</span>; row &lt; (h&gt;&gt;<span class="pl-c1">1</span>); row++) {</td>
        </tr>
        <tr>
          <td id="L1210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1210"></td>
          <td id="LC1210" class="blob-code blob-code-inner js-file-line">      stbi_uc *row0 = bytes + row*bytes_per_row;</td>
        </tr>
        <tr>
          <td id="L1211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1211"></td>
          <td id="LC1211" class="blob-code blob-code-inner js-file-line">      stbi_uc *row1 = bytes + (h - row - <span class="pl-c1">1</span>)*bytes_per_row;</td>
        </tr>
        <tr>
          <td id="L1212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1212"></td>
          <td id="LC1212" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> swap row0 with row1</span></td>
        </tr>
        <tr>
          <td id="L1213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1213"></td>
          <td id="LC1213" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">size_t</span> bytes_left = bytes_per_row;</td>
        </tr>
        <tr>
          <td id="L1214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1214"></td>
          <td id="LC1214" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (bytes_left) {</td>
        </tr>
        <tr>
          <td id="L1215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1215"></td>
          <td id="LC1215" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">size_t</span> bytes_copy = (bytes_left &lt; <span class="pl-k">sizeof</span>(temp)) ? bytes_left : <span class="pl-k">sizeof</span>(temp);</td>
        </tr>
        <tr>
          <td id="L1216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1216"></td>
          <td id="LC1216" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">memcpy</span>(temp, row0, bytes_copy);</td>
        </tr>
        <tr>
          <td id="L1217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1217"></td>
          <td id="LC1217" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">memcpy</span>(row0, row1, bytes_copy);</td>
        </tr>
        <tr>
          <td id="L1218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1218"></td>
          <td id="LC1218" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">memcpy</span>(row1, temp, bytes_copy);</td>
        </tr>
        <tr>
          <td id="L1219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1219"></td>
          <td id="LC1219" class="blob-code blob-code-inner js-file-line">         row0 += bytes_copy;</td>
        </tr>
        <tr>
          <td id="L1220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1220"></td>
          <td id="LC1220" class="blob-code blob-code-inner js-file-line">         row1 += bytes_copy;</td>
        </tr>
        <tr>
          <td id="L1221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1221"></td>
          <td id="LC1221" class="blob-code blob-code-inner js-file-line">         bytes_left -= bytes_copy;</td>
        </tr>
        <tr>
          <td id="L1222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1222"></td>
          <td id="LC1222" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1223"></td>
          <td id="LC1223" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1224"></td>
          <td id="LC1224" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1225"></td>
          <td id="LC1225" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1226"></td>
          <td id="LC1226" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L1227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1227"></td>
          <td id="LC1227" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__vertical_flip_slices</span>(<span class="pl-k">void</span> *image, <span class="pl-k">int</span> w, <span class="pl-k">int</span> h, <span class="pl-k">int</span> z, <span class="pl-k">int</span> bytes_per_pixel)</td>
        </tr>
        <tr>
          <td id="L1228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1228"></td>
          <td id="LC1228" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1229"></td>
          <td id="LC1229" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> slice;</td>
        </tr>
        <tr>
          <td id="L1230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1230"></td>
          <td id="LC1230" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> slice_size = w * h * bytes_per_pixel;</td>
        </tr>
        <tr>
          <td id="L1231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1231"></td>
          <td id="LC1231" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1232"></td>
          <td id="LC1232" class="blob-code blob-code-inner js-file-line">   stbi_uc *bytes = (stbi_uc *)image;</td>
        </tr>
        <tr>
          <td id="L1233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1233"></td>
          <td id="LC1233" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (slice = <span class="pl-c1">0</span>; slice &lt; z; ++slice) {</td>
        </tr>
        <tr>
          <td id="L1234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1234"></td>
          <td id="LC1234" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__vertical_flip</span>(bytes, w, h, bytes_per_pixel);</td>
        </tr>
        <tr>
          <td id="L1235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1235"></td>
          <td id="LC1235" class="blob-code blob-code-inner js-file-line">      bytes += slice_size;</td>
        </tr>
        <tr>
          <td id="L1236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1236"></td>
          <td id="LC1236" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1237"></td>
          <td id="LC1237" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1238"></td>
          <td id="LC1238" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1239"></td>
          <td id="LC1239" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1240"></td>
          <td id="LC1240" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *<span class="pl-c1">stbi__load_and_postprocess_8bit</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1241"></td>
          <td id="LC1241" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1242"></td>
          <td id="LC1242" class="blob-code blob-code-inner js-file-line">   stbi__result_info ri;</td>
        </tr>
        <tr>
          <td id="L1243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1243"></td>
          <td id="LC1243" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">void</span> *result = <span class="pl-c1">stbi__load_main</span>(s, x, y, comp, req_comp, &amp;ri, <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L1244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1244"></td>
          <td id="LC1244" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1245"></td>
          <td id="LC1245" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (result == <span class="pl-c1">NULL</span>)</td>
        </tr>
        <tr>
          <td id="L1246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1246"></td>
          <td id="LC1246" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1247"></td>
          <td id="LC1247" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1248"></td>
          <td id="LC1248" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> it is the responsibility of the loaders to make sure we get either 8 or 16 bit.</span></td>
        </tr>
        <tr>
          <td id="L1249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1249"></td>
          <td id="LC1249" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(ri.<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">8</span> || ri.<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L1250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1250"></td>
          <td id="LC1250" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1251"></td>
          <td id="LC1251" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (ri.<span class="pl-smi">bits_per_channel</span> != <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L1252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1252"></td>
          <td id="LC1252" class="blob-code blob-code-inner js-file-line">      result = <span class="pl-c1">stbi__convert_16_to_8</span>((stbi__uint16 *) result, *x, *y, req_comp == <span class="pl-c1">0</span> ? *comp : req_comp);</td>
        </tr>
        <tr>
          <td id="L1253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1253"></td>
          <td id="LC1253" class="blob-code blob-code-inner js-file-line">      ri.<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L1254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1254"></td>
          <td id="LC1254" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1255"></td>
          <td id="LC1255" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1256"></td>
          <td id="LC1256" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> @TODO: move stbi__convert_format to here</span></td>
        </tr>
        <tr>
          <td id="L1257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1257"></td>
          <td id="LC1257" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1258"></td>
          <td id="LC1258" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (stbi__vertically_flip_on_load) {</td>
        </tr>
        <tr>
          <td id="L1259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1259"></td>
          <td id="LC1259" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> channels = req_comp ? req_comp : *comp;</td>
        </tr>
        <tr>
          <td id="L1260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1260"></td>
          <td id="LC1260" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__vertical_flip</span>(result, *x, *y, channels * <span class="pl-k">sizeof</span>(stbi_uc));</td>
        </tr>
        <tr>
          <td id="L1261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1261"></td>
          <td id="LC1261" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1262"></td>
          <td id="LC1262" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1263"></td>
          <td id="LC1263" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (<span class="pl-k">unsigned</span> <span class="pl-k">char</span> *) result;</td>
        </tr>
        <tr>
          <td id="L1264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1264"></td>
          <td id="LC1264" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1265"></td>
          <td id="LC1265" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1266"></td>
          <td id="LC1266" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__uint16 *<span class="pl-c1">stbi__load_and_postprocess_16bit</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1267"></td>
          <td id="LC1267" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1268"></td>
          <td id="LC1268" class="blob-code blob-code-inner js-file-line">   stbi__result_info ri;</td>
        </tr>
        <tr>
          <td id="L1269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1269"></td>
          <td id="LC1269" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">void</span> *result = <span class="pl-c1">stbi__load_main</span>(s, x, y, comp, req_comp, &amp;ri, <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L1270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1270"></td>
          <td id="LC1270" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1271"></td>
          <td id="LC1271" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (result == <span class="pl-c1">NULL</span>)</td>
        </tr>
        <tr>
          <td id="L1272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1272"></td>
          <td id="LC1272" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1273"></td>
          <td id="LC1273" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1274"></td>
          <td id="LC1274" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> it is the responsibility of the loaders to make sure we get either 8 or 16 bit.</span></td>
        </tr>
        <tr>
          <td id="L1275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1275"></td>
          <td id="LC1275" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(ri.<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">8</span> || ri.<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L1276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1276"></td>
          <td id="LC1276" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1277"></td>
          <td id="LC1277" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (ri.<span class="pl-smi">bits_per_channel</span> != <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L1278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1278"></td>
          <td id="LC1278" class="blob-code blob-code-inner js-file-line">      result = <span class="pl-c1">stbi__convert_8_to_16</span>((stbi_uc *) result, *x, *y, req_comp == <span class="pl-c1">0</span> ? *comp : req_comp);</td>
        </tr>
        <tr>
          <td id="L1279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1279"></td>
          <td id="LC1279" class="blob-code blob-code-inner js-file-line">      ri.<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L1280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1280"></td>
          <td id="LC1280" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1281"></td>
          <td id="LC1281" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1282"></td>
          <td id="LC1282" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> @TODO: move stbi__convert_format16 to here</span></td>
        </tr>
        <tr>
          <td id="L1283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1283"></td>
          <td id="LC1283" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> @TODO: special case RGB-to-Y (and RGBA-to-YA) for 8-bit-to-16-bit case to keep more precision</span></td>
        </tr>
        <tr>
          <td id="L1284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1284"></td>
          <td id="LC1284" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1285"></td>
          <td id="LC1285" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (stbi__vertically_flip_on_load) {</td>
        </tr>
        <tr>
          <td id="L1286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1286"></td>
          <td id="LC1286" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> channels = req_comp ? req_comp : *comp;</td>
        </tr>
        <tr>
          <td id="L1287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1287"></td>
          <td id="LC1287" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__vertical_flip</span>(result, *x, *y, channels * <span class="pl-k">sizeof</span>(stbi__uint16));</td>
        </tr>
        <tr>
          <td id="L1288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1288"></td>
          <td id="LC1288" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1289"></td>
          <td id="LC1289" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1290"></td>
          <td id="LC1290" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (stbi__uint16 *) result;</td>
        </tr>
        <tr>
          <td id="L1291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1291"></td>
          <td id="LC1291" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1292"></td>
          <td id="LC1292" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1293"></td>
          <td id="LC1293" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(STBI_NO_HDR) &amp;&amp; !defined(STBI_NO_LINEAR)</td>
        </tr>
        <tr>
          <td id="L1294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1294"></td>
          <td id="LC1294" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__float_postprocess</span>(<span class="pl-k">float</span> *result, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1295"></td>
          <td id="LC1295" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1296"></td>
          <td id="LC1296" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (stbi__vertically_flip_on_load &amp;&amp; result != <span class="pl-c1">NULL</span>) {</td>
        </tr>
        <tr>
          <td id="L1297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1297"></td>
          <td id="LC1297" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> channels = req_comp ? req_comp : *comp;</td>
        </tr>
        <tr>
          <td id="L1298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1298"></td>
          <td id="LC1298" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__vertical_flip</span>(result, *x, *y, channels * <span class="pl-k">sizeof</span>(<span class="pl-k">float</span>));</td>
        </tr>
        <tr>
          <td id="L1299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1299"></td>
          <td id="LC1299" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1300"></td>
          <td id="LC1300" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1301"></td>
          <td id="LC1301" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1302"></td>
          <td id="LC1302" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1303"></td>
          <td id="LC1303" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L1304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1304"></td>
          <td id="LC1304" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1305"></td>
          <td id="LC1305" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(_WIN32) &amp;&amp; defined(STBI_WINDOWS_UTF8)</td>
        </tr>
        <tr>
          <td id="L1306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1306"></td>
          <td id="LC1306" class="blob-code blob-code-inner js-file-line">STBI_EXTERN <span class="pl-smi">__declspec</span>(dllimport) <span class="pl-k">int</span> __stdcall <span class="pl-smi">MultiByteToWideChar</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> cp, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> flags, <span class="pl-k">const</span> <span class="pl-k">char</span> *str, <span class="pl-k">int</span> cbmb, <span class="pl-c1">wchar_t</span> *widestr, <span class="pl-k">int</span> cchwide);</td>
        </tr>
        <tr>
          <td id="L1307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1307"></td>
          <td id="LC1307" class="blob-code blob-code-inner js-file-line">STBI_EXTERN <span class="pl-smi">__declspec</span>(dllimport) <span class="pl-k">int</span> __stdcall <span class="pl-smi">WideCharToMultiByte</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> cp, <span class="pl-k">unsigned</span> <span class="pl-k">long</span> flags, <span class="pl-k">const</span> <span class="pl-c1">wchar_t</span> *widestr, <span class="pl-k">int</span> cchwide, <span class="pl-k">char</span> *str, <span class="pl-k">int</span> cbmb, <span class="pl-k">const</span> <span class="pl-k">char</span> *defchar, <span class="pl-k">int</span> *used_default);</td>
        </tr>
        <tr>
          <td id="L1308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1308"></td>
          <td id="LC1308" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1309"></td>
          <td id="LC1309" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1310"></td>
          <td id="LC1310" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(_WIN32) &amp;&amp; defined(STBI_WINDOWS_UTF8)</td>
        </tr>
        <tr>
          <td id="L1311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1311"></td>
          <td id="LC1311" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_convert_wchar_to_utf8</span>(<span class="pl-k">char</span> *buffer, <span class="pl-c1">size_t</span> bufferlen, <span class="pl-k">const</span> <span class="pl-c1">wchar_t</span>* input)</td>
        </tr>
        <tr>
          <td id="L1312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1312"></td>
          <td id="LC1312" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1313"></td>
          <td id="LC1313" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">return</span> <span class="pl-c1">WideCharToMultiByte</span>(<span class="pl-c1">65001</span> <span class="pl-c"><span class="pl-c">/*</span> UTF8 <span class="pl-c">*/</span></span>, <span class="pl-c1">0</span>, input, -<span class="pl-c1">1</span>, buffer, (<span class="pl-k">int</span>) bufferlen, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>);</td>
        </tr>
        <tr>
          <td id="L1314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1314"></td>
          <td id="LC1314" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1315"></td>
          <td id="LC1315" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1316"></td>
          <td id="LC1316" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1317"></td>
          <td id="LC1317" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> FILE *<span class="pl-c1">stbi__fopen</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">char</span> <span class="pl-k">const</span> *mode)</td>
        </tr>
        <tr>
          <td id="L1318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1318"></td>
          <td id="LC1318" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1319"></td>
          <td id="LC1319" class="blob-code blob-code-inner js-file-line">   FILE *f;</td>
        </tr>
        <tr>
          <td id="L1320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1320"></td>
          <td id="LC1320" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(_WIN32) &amp;&amp; defined(STBI_WINDOWS_UTF8)</td>
        </tr>
        <tr>
          <td id="L1321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1321"></td>
          <td id="LC1321" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">wchar_t</span> wMode[<span class="pl-c1">64</span>];</td>
        </tr>
        <tr>
          <td id="L1322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1322"></td>
          <td id="LC1322" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">wchar_t</span> wFilename[<span class="pl-c1">1024</span>];</td>
        </tr>
        <tr>
          <td id="L1323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1323"></td>
          <td id="LC1323" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">if</span> (<span class="pl-c1">0</span> == <span class="pl-c1">MultiByteToWideChar</span>(<span class="pl-c1">65001</span> <span class="pl-c"><span class="pl-c">/*</span> UTF8 <span class="pl-c">*/</span></span>, <span class="pl-c1">0</span>, filename, -<span class="pl-c1">1</span>, wFilename, <span class="pl-k">sizeof</span>(wFilename)/<span class="pl-k">sizeof</span>(*wFilename)))</td>
        </tr>
        <tr>
          <td id="L1324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1324"></td>
          <td id="LC1324" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1325"></td>
          <td id="LC1325" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1326"></td>
          <td id="LC1326" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">if</span> (<span class="pl-c1">0</span> == <span class="pl-c1">MultiByteToWideChar</span>(<span class="pl-c1">65001</span> <span class="pl-c"><span class="pl-c">/*</span> UTF8 <span class="pl-c">*/</span></span>, <span class="pl-c1">0</span>, mode, -<span class="pl-c1">1</span>, wMode, <span class="pl-k">sizeof</span>(wMode)/<span class="pl-k">sizeof</span>(*wMode)))</td>
        </tr>
        <tr>
          <td id="L1327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1327"></td>
          <td id="LC1327" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1328"></td>
          <td id="LC1328" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1329"></td>
          <td id="LC1329" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(_MSC_VER) &amp;&amp; _MSC_VER &gt;= 1400</td>
        </tr>
        <tr>
          <td id="L1330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1330"></td>
          <td id="LC1330" class="blob-code blob-code-inner js-file-line">	<span class="pl-k">if</span> (<span class="pl-c1">0</span> != <span class="pl-c1">_wfopen_s</span>(&amp;f, wFilename, wMode))</td>
        </tr>
        <tr>
          <td id="L1331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1331"></td>
          <td id="LC1331" class="blob-code blob-code-inner js-file-line">		f = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1332"></td>
          <td id="LC1332" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1333"></td>
          <td id="LC1333" class="blob-code blob-code-inner js-file-line">   f = <span class="pl-c1">_wfopen</span>(wFilename, wMode);</td>
        </tr>
        <tr>
          <td id="L1334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1334"></td>
          <td id="LC1334" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1335"></td>
          <td id="LC1335" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1336"></td>
          <td id="LC1336" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> defined(_MSC_VER) &amp;&amp; _MSC_VER &gt;= 1400</td>
        </tr>
        <tr>
          <td id="L1337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1337"></td>
          <td id="LC1337" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">0</span> != <span class="pl-c1">fopen_s</span>(&amp;f, filename, mode))</td>
        </tr>
        <tr>
          <td id="L1338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1338"></td>
          <td id="LC1338" class="blob-code blob-code-inner js-file-line">      f=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1339"></td>
          <td id="LC1339" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1340"></td>
          <td id="LC1340" class="blob-code blob-code-inner js-file-line">   f = <span class="pl-c1">fopen</span>(filename, mode);</td>
        </tr>
        <tr>
          <td id="L1341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1341"></td>
          <td id="LC1341" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1342"></td>
          <td id="LC1342" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> f;</td>
        </tr>
        <tr>
          <td id="L1343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1343"></td>
          <td id="LC1343" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1344"></td>
          <td id="LC1344" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1345"></td>
          <td id="LC1345" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1346"></td>
          <td id="LC1346" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1347"></td>
          <td id="LC1347" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1348"></td>
          <td id="LC1348" class="blob-code blob-code-inner js-file-line">   FILE *f = <span class="pl-c1">stbi__fopen</span>(filename, <span class="pl-s"><span class="pl-pds">&quot;</span>rb<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1349"></td>
          <td id="LC1349" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *result;</td>
        </tr>
        <tr>
          <td id="L1350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1350"></td>
          <td id="LC1350" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!f) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t fopen<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unable to open file<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1351"></td>
          <td id="LC1351" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">stbi_load_from_file</span>(f,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1352"></td>
          <td id="LC1352" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fclose</span>(f);</td>
        </tr>
        <tr>
          <td id="L1353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1353"></td>
          <td id="LC1353" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1354"></td>
          <td id="LC1354" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1355"></td>
          <td id="LC1355" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1356"></td>
          <td id="LC1356" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_from_file</span>(FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1357"></td>
          <td id="LC1357" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1358"></td>
          <td id="LC1358" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *result;</td>
        </tr>
        <tr>
          <td id="L1359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1359"></td>
          <td id="LC1359" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1360"></td>
          <td id="LC1360" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_file</span>(&amp;s,f);</td>
        </tr>
        <tr>
          <td id="L1361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1361"></td>
          <td id="LC1361" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">stbi__load_and_postprocess_8bit</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1362"></td>
          <td id="LC1362" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (result) {</td>
        </tr>
        <tr>
          <td id="L1363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1363"></td>
          <td id="LC1363" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> need to &#39;unget&#39; all the characters in the IO buffer</span></td>
        </tr>
        <tr>
          <td id="L1364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1364"></td>
          <td id="LC1364" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">fseek</span>(f, - (<span class="pl-k">int</span>) (s.<span class="pl-smi">img_buffer_end</span> - s.<span class="pl-smi">img_buffer</span>), SEEK_CUR);</td>
        </tr>
        <tr>
          <td id="L1365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1365"></td>
          <td id="LC1365" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1366"></td>
          <td id="LC1366" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1367"></td>
          <td id="LC1367" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1368"></td>
          <td id="LC1368" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1369"></td>
          <td id="LC1369" class="blob-code blob-code-inner js-file-line">STBIDEF stbi__uint16 *<span class="pl-c1">stbi_load_from_file_16</span>(FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1370"></td>
          <td id="LC1370" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1371"></td>
          <td id="LC1371" class="blob-code blob-code-inner js-file-line">   stbi__uint16 *result;</td>
        </tr>
        <tr>
          <td id="L1372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1372"></td>
          <td id="LC1372" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1373"></td>
          <td id="LC1373" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_file</span>(&amp;s,f);</td>
        </tr>
        <tr>
          <td id="L1374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1374"></td>
          <td id="LC1374" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">stbi__load_and_postprocess_16bit</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1375"></td>
          <td id="LC1375" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (result) {</td>
        </tr>
        <tr>
          <td id="L1376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1376"></td>
          <td id="LC1376" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> need to &#39;unget&#39; all the characters in the IO buffer</span></td>
        </tr>
        <tr>
          <td id="L1377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1377"></td>
          <td id="LC1377" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">fseek</span>(f, - (<span class="pl-k">int</span>) (s.<span class="pl-smi">img_buffer_end</span> - s.<span class="pl-smi">img_buffer</span>), SEEK_CUR);</td>
        </tr>
        <tr>
          <td id="L1378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1378"></td>
          <td id="LC1378" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1379"></td>
          <td id="LC1379" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1380"></td>
          <td id="LC1380" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1381"></td>
          <td id="LC1381" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1382"></td>
          <td id="LC1382" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_16</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1383"></td>
          <td id="LC1383" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1384"></td>
          <td id="LC1384" class="blob-code blob-code-inner js-file-line">   FILE *f = <span class="pl-c1">stbi__fopen</span>(filename, <span class="pl-s"><span class="pl-pds">&quot;</span>rb<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1385"></td>
          <td id="LC1385" class="blob-code blob-code-inner js-file-line">   stbi__uint16 *result;</td>
        </tr>
        <tr>
          <td id="L1386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1386"></td>
          <td id="LC1386" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!f) <span class="pl-k">return</span> (stbi_us *) <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t fopen<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unable to open file<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1387"></td>
          <td id="LC1387" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">stbi_load_from_file_16</span>(f,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1388"></td>
          <td id="LC1388" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fclose</span>(f);</td>
        </tr>
        <tr>
          <td id="L1389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1389"></td>
          <td id="LC1389" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1390"></td>
          <td id="LC1390" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1391"></td>
          <td id="LC1391" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1392"></td>
          <td id="LC1392" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1393"></td>
          <td id="LC1393" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span>!STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L1394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1394"></td>
          <td id="LC1394" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1395"></td>
          <td id="LC1395" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_16_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels)</td>
        </tr>
        <tr>
          <td id="L1396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1396"></td>
          <td id="LC1396" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1397"></td>
          <td id="LC1397" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1398"></td>
          <td id="LC1398" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L1399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1399"></td>
          <td id="LC1399" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__load_and_postprocess_16bit</span>(&amp;s,x,y,channels_in_file,desired_channels);</td>
        </tr>
        <tr>
          <td id="L1400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1400"></td>
          <td id="LC1400" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1401"></td>
          <td id="LC1401" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1402"></td>
          <td id="LC1402" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_us *<span class="pl-c1">stbi_load_16_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *channels_in_file, <span class="pl-k">int</span> desired_channels)</td>
        </tr>
        <tr>
          <td id="L1403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1403"></td>
          <td id="LC1403" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1404"></td>
          <td id="LC1404" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1405"></td>
          <td id="LC1405" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(&amp;s, (stbi_io_callbacks *)clbk, user);</td>
        </tr>
        <tr>
          <td id="L1406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1406"></td>
          <td id="LC1406" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__load_and_postprocess_16bit</span>(&amp;s,x,y,channels_in_file,desired_channels);</td>
        </tr>
        <tr>
          <td id="L1407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1407"></td>
          <td id="LC1407" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1408"></td>
          <td id="LC1408" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1409"></td>
          <td id="LC1409" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1410"></td>
          <td id="LC1410" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1411"></td>
          <td id="LC1411" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1412"></td>
          <td id="LC1412" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L1413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1413"></td>
          <td id="LC1413" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__load_and_postprocess_8bit</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1414"></td>
          <td id="LC1414" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1415"></td>
          <td id="LC1415" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1416"></td>
          <td id="LC1416" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1417"></td>
          <td id="LC1417" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1418"></td>
          <td id="LC1418" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1419"></td>
          <td id="LC1419" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(&amp;s, (stbi_io_callbacks *) clbk, user);</td>
        </tr>
        <tr>
          <td id="L1420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1420"></td>
          <td id="LC1420" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__load_and_postprocess_8bit</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1421"></td>
          <td id="LC1421" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1422"></td>
          <td id="LC1422" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1423"></td>
          <td id="LC1423" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L1424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1424"></td>
          <td id="LC1424" class="blob-code blob-code-inner js-file-line">STBIDEF stbi_uc *<span class="pl-c1">stbi_load_gif_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> **delays, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *z, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1425"></td>
          <td id="LC1425" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1426"></td>
          <td id="LC1426" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *result;</td>
        </tr>
        <tr>
          <td id="L1427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1427"></td>
          <td id="LC1427" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1428"></td>
          <td id="LC1428" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L1429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1429"></td>
          <td id="LC1429" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1430"></td>
          <td id="LC1430" class="blob-code blob-code-inner js-file-line">   result = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>*) <span class="pl-c1">stbi__load_gif_main</span>(&amp;s, delays, x, y, z, comp, req_comp);</td>
        </tr>
        <tr>
          <td id="L1431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1431"></td>
          <td id="LC1431" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (stbi__vertically_flip_on_load) {</td>
        </tr>
        <tr>
          <td id="L1432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1432"></td>
          <td id="LC1432" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__vertical_flip_slices</span>( result, *x, *y, *z, *comp );</td>
        </tr>
        <tr>
          <td id="L1433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1433"></td>
          <td id="LC1433" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1434"></td>
          <td id="LC1434" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1435"></td>
          <td id="LC1435" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1436"></td>
          <td id="LC1436" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1437"></td>
          <td id="LC1437" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1438"></td>
          <td id="LC1438" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1439"></td>
          <td id="LC1439" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_LINEAR</td>
        </tr>
        <tr>
          <td id="L1440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1440"></td>
          <td id="LC1440" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span> *<span class="pl-c1">stbi__loadf_main</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1441"></td>
          <td id="LC1441" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1442"></td>
          <td id="LC1442" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *data;</td>
        </tr>
        <tr>
          <td id="L1443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1443"></td>
          <td id="LC1443" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1444"></td>
          <td id="LC1444" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__hdr_test</span>(s)) {</td>
        </tr>
        <tr>
          <td id="L1445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1445"></td>
          <td id="LC1445" class="blob-code blob-code-inner js-file-line">      stbi__result_info ri;</td>
        </tr>
        <tr>
          <td id="L1446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1446"></td>
          <td id="LC1446" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">float</span> *hdr_data = <span class="pl-c1">stbi__hdr_load</span>(s,x,y,comp,req_comp, &amp;ri);</td>
        </tr>
        <tr>
          <td id="L1447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1447"></td>
          <td id="LC1447" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (hdr_data)</td>
        </tr>
        <tr>
          <td id="L1448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1448"></td>
          <td id="LC1448" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">stbi__float_postprocess</span>(hdr_data,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1449"></td>
          <td id="LC1449" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> hdr_data;</td>
        </tr>
        <tr>
          <td id="L1450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1450"></td>
          <td id="LC1450" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1451"></td>
          <td id="LC1451" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1452"></td>
          <td id="LC1452" class="blob-code blob-code-inner js-file-line">   data = <span class="pl-c1">stbi__load_and_postprocess_8bit</span>(s, x, y, comp, req_comp);</td>
        </tr>
        <tr>
          <td id="L1453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1453"></td>
          <td id="LC1453" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (data)</td>
        </tr>
        <tr>
          <td id="L1454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1454"></td>
          <td id="LC1454" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__ldr_to_hdr</span>(data, *x, *y, req_comp ? req_comp : *comp);</td>
        </tr>
        <tr>
          <td id="L1455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1455"></td>
          <td id="LC1455" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unknown image type<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Image not of any known type, or corrupt<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1456"></td>
          <td id="LC1456" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1457"></td>
          <td id="LC1457" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1458"></td>
          <td id="LC1458" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1459"></td>
          <td id="LC1459" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1460"></td>
          <td id="LC1460" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1461"></td>
          <td id="LC1461" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L1462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1462"></td>
          <td id="LC1462" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__loadf_main</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1463"></td>
          <td id="LC1463" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1464"></td>
          <td id="LC1464" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1465"></td>
          <td id="LC1465" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1466"></td>
          <td id="LC1466" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1467"></td>
          <td id="LC1467" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1468"></td>
          <td id="LC1468" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(&amp;s, (stbi_io_callbacks *) clbk, user);</td>
        </tr>
        <tr>
          <td id="L1469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1469"></td>
          <td id="LC1469" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__loadf_main</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1470"></td>
          <td id="LC1470" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1471"></td>
          <td id="LC1471" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1472"></td>
          <td id="LC1472" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L1473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1473"></td>
          <td id="LC1473" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1474"></td>
          <td id="LC1474" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1475"></td>
          <td id="LC1475" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">float</span> *result;</td>
        </tr>
        <tr>
          <td id="L1476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1476"></td>
          <td id="LC1476" class="blob-code blob-code-inner js-file-line">   FILE *f = <span class="pl-c1">stbi__fopen</span>(filename, <span class="pl-s"><span class="pl-pds">&quot;</span>rb<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1477"></td>
          <td id="LC1477" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!f) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t fopen<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unable to open file<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1478"></td>
          <td id="LC1478" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">stbi_loadf_from_file</span>(f,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1479"></td>
          <td id="LC1479" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fclose</span>(f);</td>
        </tr>
        <tr>
          <td id="L1480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1480"></td>
          <td id="LC1480" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1481"></td>
          <td id="LC1481" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1482"></td>
          <td id="LC1482" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1483"></td>
          <td id="LC1483" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">float</span> *<span class="pl-c1">stbi_loadf_from_file</span>(FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L1484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1484"></td>
          <td id="LC1484" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1485"></td>
          <td id="LC1485" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1486"></td>
          <td id="LC1486" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_file</span>(&amp;s,f);</td>
        </tr>
        <tr>
          <td id="L1487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1487"></td>
          <td id="LC1487" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__loadf_main</span>(&amp;s,x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L1488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1488"></td>
          <td id="LC1488" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1489"></td>
          <td id="LC1489" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L1490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1490"></td>
          <td id="LC1490" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1491"></td>
          <td id="LC1491" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !STBI_NO_LINEAR</span></td>
        </tr>
        <tr>
          <td id="L1492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1492"></td>
          <td id="LC1492" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1493"></td>
          <td id="LC1493" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> these is-hdr-or-not is defined independent of whether STBI_NO_LINEAR is</span></td>
        </tr>
        <tr>
          <td id="L1494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1494"></td>
          <td id="LC1494" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> defined, for API simplicity; if STBI_NO_LINEAR is defined, it always</span></td>
        </tr>
        <tr>
          <td id="L1495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1495"></td>
          <td id="LC1495" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> reports false!</span></td>
        </tr>
        <tr>
          <td id="L1496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1496"></td>
          <td id="LC1496" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1497"></td>
          <td id="LC1497" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_is_hdr_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len)</td>
        </tr>
        <tr>
          <td id="L1498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1498"></td>
          <td id="LC1498" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1499"></td>
          <td id="LC1499" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1500"></td>
          <td id="LC1500" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1501"></td>
          <td id="LC1501" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L1502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1502"></td>
          <td id="LC1502" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__hdr_test</span>(&amp;s);</td>
        </tr>
        <tr>
          <td id="L1503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1503"></td>
          <td id="LC1503" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1504"></td>
          <td id="LC1504" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(buffer);</td>
        </tr>
        <tr>
          <td id="L1505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1505"></td>
          <td id="LC1505" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(len);</td>
        </tr>
        <tr>
          <td id="L1506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1506"></td>
          <td id="LC1506" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1507"></td>
          <td id="LC1507" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1508"></td>
          <td id="LC1508" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1509"></td>
          <td id="LC1509" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1510"></td>
          <td id="LC1510" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L1511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1511"></td>
          <td id="LC1511" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_hdr</span>          (<span class="pl-k">char</span> <span class="pl-k">const</span> *filename)</td>
        </tr>
        <tr>
          <td id="L1512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1512"></td>
          <td id="LC1512" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1513"></td>
          <td id="LC1513" class="blob-code blob-code-inner js-file-line">   FILE *f = <span class="pl-c1">stbi__fopen</span>(filename, <span class="pl-s"><span class="pl-pds">&quot;</span>rb<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1514"></td>
          <td id="LC1514" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> result=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1515"></td>
          <td id="LC1515" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (f) {</td>
        </tr>
        <tr>
          <td id="L1516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1516"></td>
          <td id="LC1516" class="blob-code blob-code-inner js-file-line">      result = <span class="pl-c1">stbi_is_hdr_from_file</span>(f);</td>
        </tr>
        <tr>
          <td id="L1517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1517"></td>
          <td id="LC1517" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">fclose</span>(f);</td>
        </tr>
        <tr>
          <td id="L1518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1518"></td>
          <td id="LC1518" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1519"></td>
          <td id="LC1519" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L1520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1520"></td>
          <td id="LC1520" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1521"></td>
          <td id="LC1521" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1522"></td>
          <td id="LC1522" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_is_hdr_from_file</span>(FILE *f)</td>
        </tr>
        <tr>
          <td id="L1523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1523"></td>
          <td id="LC1523" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1524"></td>
          <td id="LC1524" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1525"></td>
          <td id="LC1525" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">long</span> pos = <span class="pl-c1">ftell</span>(f);</td>
        </tr>
        <tr>
          <td id="L1526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1526"></td>
          <td id="LC1526" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> res;</td>
        </tr>
        <tr>
          <td id="L1527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1527"></td>
          <td id="LC1527" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1528"></td>
          <td id="LC1528" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_file</span>(&amp;s,f);</td>
        </tr>
        <tr>
          <td id="L1529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1529"></td>
          <td id="LC1529" class="blob-code blob-code-inner js-file-line">   res = <span class="pl-c1">stbi__hdr_test</span>(&amp;s);</td>
        </tr>
        <tr>
          <td id="L1530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1530"></td>
          <td id="LC1530" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fseek</span>(f, pos, SEEK_SET);</td>
        </tr>
        <tr>
          <td id="L1531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1531"></td>
          <td id="LC1531" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> res;</td>
        </tr>
        <tr>
          <td id="L1532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1532"></td>
          <td id="LC1532" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1533"></td>
          <td id="LC1533" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(f);</td>
        </tr>
        <tr>
          <td id="L1534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1534"></td>
          <td id="LC1534" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1535"></td>
          <td id="LC1535" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1536"></td>
          <td id="LC1536" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1537"></td>
          <td id="LC1537" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L1538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1538"></td>
          <td id="LC1538" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1539"></td>
          <td id="LC1539" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span>      <span class="pl-smi">stbi_is_hdr_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *clbk, <span class="pl-k">void</span> *user)</td>
        </tr>
        <tr>
          <td id="L1540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1540"></td>
          <td id="LC1540" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1541"></td>
          <td id="LC1541" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1542"></td>
          <td id="LC1542" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L1543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1543"></td>
          <td id="LC1543" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(&amp;s, (stbi_io_callbacks *) clbk, user);</td>
        </tr>
        <tr>
          <td id="L1544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1544"></td>
          <td id="LC1544" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__hdr_test</span>(&amp;s);</td>
        </tr>
        <tr>
          <td id="L1545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1545"></td>
          <td id="LC1545" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1546"></td>
          <td id="LC1546" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(clbk);</td>
        </tr>
        <tr>
          <td id="L1547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1547"></td>
          <td id="LC1547" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(user);</td>
        </tr>
        <tr>
          <td id="L1548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1548"></td>
          <td id="LC1548" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1549"></td>
          <td id="LC1549" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1550"></td>
          <td id="LC1550" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1551"></td>
          <td id="LC1551" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1552"></td>
          <td id="LC1552" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_LINEAR</td>
        </tr>
        <tr>
          <td id="L1553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1553"></td>
          <td id="LC1553" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span> stbi__l2h_gamma=<span class="pl-c1">2</span>.<span class="pl-c1">2f</span>, stbi__l2h_scale=<span class="pl-c1">1</span>.<span class="pl-c1">0f</span>;</td>
        </tr>
        <tr>
          <td id="L1554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1554"></td>
          <td id="LC1554" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1555"></td>
          <td id="LC1555" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_ldr_to_hdr_gamma</span>(<span class="pl-k">float</span> <span class="pl-bu">gamma</span>) { stbi__l2h_gamma = <span class="pl-bu">gamma</span>; }</td>
        </tr>
        <tr>
          <td id="L1556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1556"></td>
          <td id="LC1556" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_ldr_to_hdr_scale</span>(<span class="pl-k">float</span> scale) { stbi__l2h_scale = scale; }</td>
        </tr>
        <tr>
          <td id="L1557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1557"></td>
          <td id="LC1557" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1558"></td>
          <td id="LC1558" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1559"></td>
          <td id="LC1559" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span> stbi__h2l_gamma_i=<span class="pl-c1">1</span>.<span class="pl-c1">0f</span>/<span class="pl-c1">2</span>.<span class="pl-c1">2f</span>, stbi__h2l_scale_i=<span class="pl-c1">1</span>.<span class="pl-c1">0f</span>;</td>
        </tr>
        <tr>
          <td id="L1560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1560"></td>
          <td id="LC1560" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1561"></td>
          <td id="LC1561" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_hdr_to_ldr_gamma</span>(<span class="pl-k">float</span> <span class="pl-bu">gamma</span>) { stbi__h2l_gamma_i = <span class="pl-c1">1</span>/<span class="pl-bu">gamma</span>; }</td>
        </tr>
        <tr>
          <td id="L1562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1562"></td>
          <td id="LC1562" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span>   <span class="pl-smi">stbi_hdr_to_ldr_scale</span>(<span class="pl-k">float</span> scale) { stbi__h2l_scale_i = <span class="pl-c1">1</span>/scale; }</td>
        </tr>
        <tr>
          <td id="L1563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1563"></td>
          <td id="LC1563" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1564"></td>
          <td id="LC1564" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1565"></td>
          <td id="LC1565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>////////////////////////////////////////////////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L1566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1566"></td>
          <td id="LC1566" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L1567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1567"></td>
          <td id="LC1567" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Common code used by all image loaders</span></td>
        </tr>
        <tr>
          <td id="L1568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1568"></td>
          <td id="LC1568" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L1569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1569"></td>
          <td id="LC1569" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1570"></td>
          <td id="LC1570" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span></td>
        </tr>
        <tr>
          <td id="L1571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1571"></td>
          <td id="LC1571" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1572"></td>
          <td id="LC1572" class="blob-code blob-code-inner js-file-line">   STBI__SCAN_load=<span class="pl-c1">0</span>,</td>
        </tr>
        <tr>
          <td id="L1573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1573"></td>
          <td id="LC1573" class="blob-code blob-code-inner js-file-line">   STBI__SCAN_type,</td>
        </tr>
        <tr>
          <td id="L1574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1574"></td>
          <td id="LC1574" class="blob-code blob-code-inner js-file-line">   STBI__SCAN_header</td>
        </tr>
        <tr>
          <td id="L1575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1575"></td>
          <td id="LC1575" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1576"></td>
          <td id="LC1576" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1577"></td>
          <td id="LC1577" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__refill_buffer</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1578"></td>
          <td id="LC1578" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1579"></td>
          <td id="LC1579" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> n = (s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">read</span>)(s-&gt;<span class="pl-smi">io_user_data</span>,(<span class="pl-k">char</span>*)s-&gt;<span class="pl-smi">buffer_start</span>,s-&gt;<span class="pl-smi">buflen</span>);</td>
        </tr>
        <tr>
          <td id="L1580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1580"></td>
          <td id="LC1580" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">callback_already_read</span> += (<span class="pl-k">int</span>) (s-&gt;<span class="pl-smi">img_buffer</span> - s-&gt;<span class="pl-smi">img_buffer_original</span>);</td>
        </tr>
        <tr>
          <td id="L1581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1581"></td>
          <td id="LC1581" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (n == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L1582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1582"></td>
          <td id="LC1582" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> at end of file, treat same as if from memory, but need to handle case</span></td>
        </tr>
        <tr>
          <td id="L1583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1583"></td>
          <td id="LC1583" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> where s-&gt;img_buffer isn&#39;t pointing to safe memory, e.g. 0-byte file</span></td>
        </tr>
        <tr>
          <td id="L1584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1584"></td>
          <td id="LC1584" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">read_from_callbacks</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1585"></td>
          <td id="LC1585" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">buffer_start</span>;</td>
        </tr>
        <tr>
          <td id="L1586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1586"></td>
          <td id="LC1586" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_buffer_end</span> = s-&gt;<span class="pl-smi">buffer_start</span>+<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L1587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1587"></td>
          <td id="LC1587" class="blob-code blob-code-inner js-file-line">      *s-&gt;<span class="pl-smi">img_buffer</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1588"></td>
          <td id="LC1588" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L1589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1589"></td>
          <td id="LC1589" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">buffer_start</span>;</td>
        </tr>
        <tr>
          <td id="L1590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1590"></td>
          <td id="LC1590" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_buffer_end</span> = s-&gt;<span class="pl-smi">buffer_start</span> + n;</td>
        </tr>
        <tr>
          <td id="L1591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1591"></td>
          <td id="LC1591" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1592"></td>
          <td id="LC1592" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1593"></td>
          <td id="LC1593" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1594"></td>
          <td id="LC1594" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> stbi_uc <span class="pl-smi">stbi__get8</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1595"></td>
          <td id="LC1595" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1596"></td>
          <td id="LC1596" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_buffer</span> &lt; s-&gt;<span class="pl-smi">img_buffer_end</span>)</td>
        </tr>
        <tr>
          <td id="L1597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1597"></td>
          <td id="LC1597" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> *s-&gt;<span class="pl-smi">img_buffer</span>++;</td>
        </tr>
        <tr>
          <td id="L1598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1598"></td>
          <td id="LC1598" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">read_from_callbacks</span>) {</td>
        </tr>
        <tr>
          <td id="L1599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1599"></td>
          <td id="LC1599" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__refill_buffer</span>(s);</td>
        </tr>
        <tr>
          <td id="L1600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1600"></td>
          <td id="LC1600" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> *s-&gt;<span class="pl-smi">img_buffer</span>++;</td>
        </tr>
        <tr>
          <td id="L1601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1601"></td>
          <td id="LC1601" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1602"></td>
          <td id="LC1602" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1603"></td>
          <td id="LC1603" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1604"></td>
          <td id="LC1604" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1605"></td>
          <td id="LC1605" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_JPEG) &amp;&amp; defined(STBI_NO_HDR) &amp;&amp; defined(STBI_NO_PIC) &amp;&amp; defined(STBI_NO_PNM)</td>
        </tr>
        <tr>
          <td id="L1606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1606"></td>
          <td id="LC1606" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1607"></td>
          <td id="LC1607" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1608"></td>
          <td id="LC1608" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__at_eof</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1609"></td>
          <td id="LC1609" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1610"></td>
          <td id="LC1610" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">read</span>) {</td>
        </tr>
        <tr>
          <td id="L1611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1611"></td>
          <td id="LC1611" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!(s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">eof</span>)(s-&gt;<span class="pl-smi">io_user_data</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1612"></td>
          <td id="LC1612" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> if feof() is true, check if buffer = end</span></td>
        </tr>
        <tr>
          <td id="L1613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1613"></td>
          <td id="LC1613" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> special case: we&#39;ve only got the special 0 character at the end</span></td>
        </tr>
        <tr>
          <td id="L1614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1614"></td>
          <td id="LC1614" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">read_from_callbacks</span> == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L1615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1615"></td>
          <td id="LC1615" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1616"></td>
          <td id="LC1616" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1617"></td>
          <td id="LC1617" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> s-&gt;<span class="pl-smi">img_buffer</span> &gt;= s-&gt;<span class="pl-smi">img_buffer_end</span>;</td>
        </tr>
        <tr>
          <td id="L1618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1618"></td>
          <td id="LC1618" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1619"></td>
          <td id="LC1619" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1620"></td>
          <td id="LC1620" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1621"></td>
          <td id="LC1621" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_JPEG) &amp;&amp; defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_BMP) &amp;&amp; defined(STBI_NO_PSD) &amp;&amp; defined(STBI_NO_TGA) &amp;&amp; defined(STBI_NO_GIF) &amp;&amp; defined(STBI_NO_PIC)</td>
        </tr>
        <tr>
          <td id="L1622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1622"></td>
          <td id="LC1622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1623"></td>
          <td id="LC1623" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1624"></td>
          <td id="LC1624" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__skip</span>(stbi__context *s, <span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L1625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1625"></td>
          <td id="LC1625" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1626"></td>
          <td id="LC1626" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (n == <span class="pl-c1">0</span>) <span class="pl-k">return</span>;  <span class="pl-c"><span class="pl-c">//</span> already there!</span></td>
        </tr>
        <tr>
          <td id="L1627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1627"></td>
          <td id="LC1627" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (n &lt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L1628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1628"></td>
          <td id="LC1628" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">img_buffer_end</span>;</td>
        </tr>
        <tr>
          <td id="L1629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1629"></td>
          <td id="LC1629" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L1630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1630"></td>
          <td id="LC1630" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1631"></td>
          <td id="LC1631" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">read</span>) {</td>
        </tr>
        <tr>
          <td id="L1632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1632"></td>
          <td id="LC1632" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> blen = (<span class="pl-k">int</span>) (s-&gt;<span class="pl-smi">img_buffer_end</span> - s-&gt;<span class="pl-smi">img_buffer</span>);</td>
        </tr>
        <tr>
          <td id="L1633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1633"></td>
          <td id="LC1633" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (blen &lt; n) {</td>
        </tr>
        <tr>
          <td id="L1634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1634"></td>
          <td id="LC1634" class="blob-code blob-code-inner js-file-line">         s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">img_buffer_end</span>;</td>
        </tr>
        <tr>
          <td id="L1635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1635"></td>
          <td id="LC1635" class="blob-code blob-code-inner js-file-line">         (s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">skip</span>)(s-&gt;<span class="pl-smi">io_user_data</span>, n - blen);</td>
        </tr>
        <tr>
          <td id="L1636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1636"></td>
          <td id="LC1636" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L1637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1637"></td>
          <td id="LC1637" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1638"></td>
          <td id="LC1638" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1639"></td>
          <td id="LC1639" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_buffer</span> += n;</td>
        </tr>
        <tr>
          <td id="L1640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1640"></td>
          <td id="LC1640" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1641"></td>
          <td id="LC1641" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1642"></td>
          <td id="LC1642" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1643"></td>
          <td id="LC1643" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_TGA) &amp;&amp; defined(STBI_NO_HDR) &amp;&amp; defined(STBI_NO_PNM)</td>
        </tr>
        <tr>
          <td id="L1644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1644"></td>
          <td id="LC1644" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1645"></td>
          <td id="LC1645" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1646"></td>
          <td id="LC1646" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__getn</span>(stbi__context *s, stbi_uc *buffer, <span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L1647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1647"></td>
          <td id="LC1647" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1648"></td>
          <td id="LC1648" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">read</span>) {</td>
        </tr>
        <tr>
          <td id="L1649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1649"></td>
          <td id="LC1649" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> blen = (<span class="pl-k">int</span>) (s-&gt;<span class="pl-smi">img_buffer_end</span> - s-&gt;<span class="pl-smi">img_buffer</span>);</td>
        </tr>
        <tr>
          <td id="L1650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1650"></td>
          <td id="LC1650" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (blen &lt; n) {</td>
        </tr>
        <tr>
          <td id="L1651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1651"></td>
          <td id="LC1651" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> res, count;</td>
        </tr>
        <tr>
          <td id="L1652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1652"></td>
          <td id="LC1652" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1653"></td>
          <td id="LC1653" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">memcpy</span>(buffer, s-&gt;<span class="pl-smi">img_buffer</span>, blen);</td>
        </tr>
        <tr>
          <td id="L1654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1654"></td>
          <td id="LC1654" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1655"></td>
          <td id="LC1655" class="blob-code blob-code-inner js-file-line">         count = (s-&gt;<span class="pl-smi">io</span>.<span class="pl-smi">read</span>)(s-&gt;<span class="pl-smi">io_user_data</span>, (<span class="pl-k">char</span>*) buffer + blen, n - blen);</td>
        </tr>
        <tr>
          <td id="L1656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1656"></td>
          <td id="LC1656" class="blob-code blob-code-inner js-file-line">         res = (count == (n-blen));</td>
        </tr>
        <tr>
          <td id="L1657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1657"></td>
          <td id="LC1657" class="blob-code blob-code-inner js-file-line">         s-&gt;<span class="pl-smi">img_buffer</span> = s-&gt;<span class="pl-smi">img_buffer_end</span>;</td>
        </tr>
        <tr>
          <td id="L1658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1658"></td>
          <td id="LC1658" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> res;</td>
        </tr>
        <tr>
          <td id="L1659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1659"></td>
          <td id="LC1659" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1660"></td>
          <td id="LC1660" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1661"></td>
          <td id="LC1661" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1662"></td>
          <td id="LC1662" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_buffer</span>+n &lt;= s-&gt;<span class="pl-smi">img_buffer_end</span>) {</td>
        </tr>
        <tr>
          <td id="L1663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1663"></td>
          <td id="LC1663" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memcpy</span>(buffer, s-&gt;<span class="pl-smi">img_buffer</span>, n);</td>
        </tr>
        <tr>
          <td id="L1664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1664"></td>
          <td id="LC1664" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_buffer</span> += n;</td>
        </tr>
        <tr>
          <td id="L1665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1665"></td>
          <td id="LC1665" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L1666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1666"></td>
          <td id="LC1666" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1667"></td>
          <td id="LC1667" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1668"></td>
          <td id="LC1668" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1669"></td>
          <td id="LC1669" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1670"></td>
          <td id="LC1670" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1671"></td>
          <td id="LC1671" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_JPEG) &amp;&amp; defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_PSD) &amp;&amp; defined(STBI_NO_PIC)</td>
        </tr>
        <tr>
          <td id="L1672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1672"></td>
          <td id="LC1672" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1673"></td>
          <td id="LC1673" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1674"></td>
          <td id="LC1674" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__get16be</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1675"></td>
          <td id="LC1675" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1676"></td>
          <td id="LC1676" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> z = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L1677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1677"></td>
          <td id="LC1677" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (z &lt;&lt; <span class="pl-c1">8</span>) + <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L1678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1678"></td>
          <td id="LC1678" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1679"></td>
          <td id="LC1679" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1680"></td>
          <td id="LC1680" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1681"></td>
          <td id="LC1681" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_PSD) &amp;&amp; defined(STBI_NO_PIC)</td>
        </tr>
        <tr>
          <td id="L1682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1682"></td>
          <td id="LC1682" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1683"></td>
          <td id="LC1683" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1684"></td>
          <td id="LC1684" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__uint32 <span class="pl-smi">stbi__get32be</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1685"></td>
          <td id="LC1685" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1686"></td>
          <td id="LC1686" class="blob-code blob-code-inner js-file-line">   stbi__uint32 z = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L1687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1687"></td>
          <td id="LC1687" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (z &lt;&lt; <span class="pl-c1">16</span>) + <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L1688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1688"></td>
          <td id="LC1688" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1689"></td>
          <td id="LC1689" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1690"></td>
          <td id="LC1690" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1691"></td>
          <td id="LC1691" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_BMP) &amp;&amp; defined(STBI_NO_TGA) &amp;&amp; defined(STBI_NO_GIF)</td>
        </tr>
        <tr>
          <td id="L1692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1692"></td>
          <td id="LC1692" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1693"></td>
          <td id="LC1693" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1694"></td>
          <td id="LC1694" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__get16le</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1695"></td>
          <td id="LC1695" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1696"></td>
          <td id="LC1696" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> z = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L1697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1697"></td>
          <td id="LC1697" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> z + (<span class="pl-c1">stbi__get8</span>(s) &lt;&lt; <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L1698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1698"></td>
          <td id="LC1698" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1699"></td>
          <td id="LC1699" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1700"></td>
          <td id="LC1700" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1701"></td>
          <td id="LC1701" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_BMP</td>
        </tr>
        <tr>
          <td id="L1702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1702"></td>
          <td id="LC1702" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__uint32 <span class="pl-smi">stbi__get32le</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L1703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1703"></td>
          <td id="LC1703" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1704"></td>
          <td id="LC1704" class="blob-code blob-code-inner js-file-line">   stbi__uint32 z = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L1705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1705"></td>
          <td id="LC1705" class="blob-code blob-code-inner js-file-line">   z += (stbi__uint32)<span class="pl-c1">stbi__get16le</span>(s) &lt;&lt; <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L1706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1706"></td>
          <td id="LC1706" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> z;</td>
        </tr>
        <tr>
          <td id="L1707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1707"></td>
          <td id="LC1707" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1708"></td>
          <td id="LC1708" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1709"></td>
          <td id="LC1709" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1710"></td>
          <td id="LC1710" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__BYTECAST</span>(<span class="pl-v">x</span>)  ((stbi_uc) ((x) &amp; <span class="pl-c1">255</span>))  <span class="pl-c"><span class="pl-c">//</span> truncate int to byte without warnings</span></td>
        </tr>
        <tr>
          <td id="L1711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1711"></td>
          <td id="LC1711" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1712"></td>
          <td id="LC1712" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_JPEG) &amp;&amp; defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_BMP) &amp;&amp; defined(STBI_NO_PSD) &amp;&amp; defined(STBI_NO_TGA) &amp;&amp; defined(STBI_NO_GIF) &amp;&amp; defined(STBI_NO_PIC) &amp;&amp; defined(STBI_NO_PNM)</td>
        </tr>
        <tr>
          <td id="L1713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1713"></td>
          <td id="LC1713" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1714"></td>
          <td id="LC1714" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1715"></td>
          <td id="LC1715" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>////////////////////////////////////////////////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L1716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1716"></td>
          <td id="LC1716" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L1717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1717"></td>
          <td id="LC1717" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  generic converter from built-in img_n to req_comp</span></td>
        </tr>
        <tr>
          <td id="L1718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1718"></td>
          <td id="LC1718" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    individual types do this automatically as much as possible (e.g. jpeg</span></td>
        </tr>
        <tr>
          <td id="L1719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1719"></td>
          <td id="LC1719" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    does all cases internally since it needs to colorspace convert anyway,</span></td>
        </tr>
        <tr>
          <td id="L1720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1720"></td>
          <td id="LC1720" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    and it never has alpha, so very few cases ). png can automatically</span></td>
        </tr>
        <tr>
          <td id="L1721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1721"></td>
          <td id="LC1721" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    interleave an alpha=255 channel, but falls back to this for other cases</span></td>
        </tr>
        <tr>
          <td id="L1722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1722"></td>
          <td id="LC1722" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L1723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1723"></td>
          <td id="LC1723" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  assume data buffer is malloced, so malloc a new one and free that one</span></td>
        </tr>
        <tr>
          <td id="L1724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1724"></td>
          <td id="LC1724" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  only failure mode is malloc failing</span></td>
        </tr>
        <tr>
          <td id="L1725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1725"></td>
          <td id="LC1725" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1726"></td>
          <td id="LC1726" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc <span class="pl-smi">stbi__compute_y</span>(<span class="pl-k">int</span> r, <span class="pl-k">int</span> g, <span class="pl-k">int</span> b)</td>
        </tr>
        <tr>
          <td id="L1727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1727"></td>
          <td id="LC1727" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1728"></td>
          <td id="LC1728" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (stbi_uc) (((r*<span class="pl-c1">77</span>) + (g*<span class="pl-c1">150</span>) +  (<span class="pl-c1">29</span>*b)) &gt;&gt; <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L1729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1729"></td>
          <td id="LC1729" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1730"></td>
          <td id="LC1730" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1731"></td>
          <td id="LC1731" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1732"></td>
          <td id="LC1732" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_BMP) &amp;&amp; defined(STBI_NO_PSD) &amp;&amp; defined(STBI_NO_TGA) &amp;&amp; defined(STBI_NO_GIF) &amp;&amp; defined(STBI_NO_PIC) &amp;&amp; defined(STBI_NO_PNM)</td>
        </tr>
        <tr>
          <td id="L1733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1733"></td>
          <td id="LC1733" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1734"></td>
          <td id="LC1734" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1735"></td>
          <td id="LC1735" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *<span class="pl-c1">stbi__convert_format</span>(<span class="pl-k">unsigned</span> <span class="pl-k">char</span> *data, <span class="pl-k">int</span> img_n, <span class="pl-k">int</span> req_comp, <span class="pl-k">unsigned</span> <span class="pl-k">int</span> x, <span class="pl-k">unsigned</span> <span class="pl-k">int</span> y)</td>
        </tr>
        <tr>
          <td id="L1736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1736"></td>
          <td id="LC1736" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1737"></td>
          <td id="LC1737" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,j;</td>
        </tr>
        <tr>
          <td id="L1738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1738"></td>
          <td id="LC1738" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *good;</td>
        </tr>
        <tr>
          <td id="L1739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1739"></td>
          <td id="LC1739" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1740"></td>
          <td id="LC1740" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp == img_n) <span class="pl-k">return</span> data;</td>
        </tr>
        <tr>
          <td id="L1741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1741"></td>
          <td id="LC1741" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(req_comp &gt;= <span class="pl-c1">1</span> &amp;&amp; req_comp &lt;= <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L1742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1742"></td>
          <td id="LC1742" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1743"></td>
          <td id="LC1743" class="blob-code blob-code-inner js-file-line">   good = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span> *) <span class="pl-c1">stbi__malloc_mad3</span>(req_comp, x, y, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L1744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1744"></td>
          <td id="LC1744" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (good == <span class="pl-c1">NULL</span>) {</td>
        </tr>
        <tr>
          <td id="L1745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1745"></td>
          <td id="LC1745" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(data);</td>
        </tr>
        <tr>
          <td id="L1746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1746"></td>
          <td id="LC1746" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1747"></td>
          <td id="LC1747" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1748"></td>
          <td id="LC1748" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1749"></td>
          <td id="LC1749" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; (<span class="pl-k">int</span>) y; ++j) {</td>
        </tr>
        <tr>
          <td id="L1750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1750"></td>
          <td id="LC1750" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *src  = data + j * x * img_n   ;</td>
        </tr>
        <tr>
          <td id="L1751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1751"></td>
          <td id="LC1751" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *dest = good + j * x * req_comp;</td>
        </tr>
        <tr>
          <td id="L1752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1752"></td>
          <td id="LC1752" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1753"></td>
          <td id="LC1753" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI__COMBO</span>(<span class="pl-v">a,b</span>)  ((a)*<span class="pl-c1">8</span>+(b))</td>
        </tr>
        <tr>
          <td id="L1754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1754"></td>
          <td id="LC1754" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI__CASE</span>(<span class="pl-v">a,b</span>)   <span class="pl-k">case</span> <span class="pl-en">STBI__COMBO</span>(a,b): for(i=x-<span class="pl-c1">1</span>; i &gt;= <span class="pl-c1">0</span>; --i, src += a, dest += b)</td>
        </tr>
        <tr>
          <td id="L1755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1755"></td>
          <td id="LC1755" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> convert source image with img_n components to one with req_comp components;</span></td>
        </tr>
        <tr>
          <td id="L1756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1756"></td>
          <td id="LC1756" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> avoid switch per pixel, so use switch per scanline and massive macros</span></td>
        </tr>
        <tr>
          <td id="L1757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1757"></td>
          <td id="LC1757" class="blob-code blob-code-inner js-file-line">      switch (STBI__COMBO(img_n, req_comp)) {</td>
        </tr>
        <tr>
          <td id="L1758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1758"></td>
          <td id="LC1758" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>]; dest[<span class="pl-c1">1</span>]=<span class="pl-c1">255</span>;                                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1759"></td>
          <td id="LC1759" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">1</span>,<span class="pl-c1">3</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>];                                  } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1760"></td>
          <td id="LC1760" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">1</span>,<span class="pl-c1">4</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>]; dest[<span class="pl-c1">3</span>]=<span class="pl-c1">255</span>;                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1761"></td>
          <td id="LC1761" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">2</span>,<span class="pl-c1">1</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>];                                                  } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1762"></td>
          <td id="LC1762" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>];                                  } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1763"></td>
          <td id="LC1763" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">2</span>,<span class="pl-c1">4</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>]; dest[<span class="pl-c1">3</span>]=src[<span class="pl-c1">1</span>];                  } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1764"></td>
          <td id="LC1764" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">3</span>,<span class="pl-c1">4</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>];dest[<span class="pl-c1">1</span>]=src[<span class="pl-c1">1</span>];dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">2</span>];dest[<span class="pl-c1">3</span>]=<span class="pl-c1">255</span>;        } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1765"></td>
          <td id="LC1765" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">3</span>,<span class="pl-c1">1</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]);                   } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1766"></td>
          <td id="LC1766" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]); dest[<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>;    } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1767"></td>
          <td id="LC1767" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">4</span>,<span class="pl-c1">1</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]);                   } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1768"></td>
          <td id="LC1768" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">4</span>,<span class="pl-c1">2</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]); dest[<span class="pl-c1">1</span>] = src[<span class="pl-c1">3</span>]; } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1769"></td>
          <td id="LC1769" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">4</span>,<span class="pl-c1">3</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>];dest[<span class="pl-c1">1</span>]=src[<span class="pl-c1">1</span>];dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">2</span>];                    } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1770"></td>
          <td id="LC1770" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">default</span>: <span class="pl-c1">STBI_ASSERT</span>(<span class="pl-c1">0</span>); <span class="pl-c1">STBI_FREE</span>(data); <span class="pl-c1">STBI_FREE</span>(good); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unsupported<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported format conversion<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1771"></td>
          <td id="LC1771" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1772"></td>
          <td id="LC1772" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">undef</span> STBI__CASE</td>
        </tr>
        <tr>
          <td id="L1773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1773"></td>
          <td id="LC1773" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1774"></td>
          <td id="LC1774" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1775"></td>
          <td id="LC1775" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(data);</td>
        </tr>
        <tr>
          <td id="L1776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1776"></td>
          <td id="LC1776" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> good;</td>
        </tr>
        <tr>
          <td id="L1777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1777"></td>
          <td id="LC1777" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1778"></td>
          <td id="LC1778" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1779"></td>
          <td id="LC1779" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1780"></td>
          <td id="LC1780" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_PSD)</td>
        </tr>
        <tr>
          <td id="L1781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1781"></td>
          <td id="LC1781" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1782"></td>
          <td id="LC1782" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1783"></td>
          <td id="LC1783" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__uint16 <span class="pl-smi">stbi__compute_y_16</span>(<span class="pl-k">int</span> r, <span class="pl-k">int</span> g, <span class="pl-k">int</span> b)</td>
        </tr>
        <tr>
          <td id="L1784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1784"></td>
          <td id="LC1784" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1785"></td>
          <td id="LC1785" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (stbi__uint16) (((r*<span class="pl-c1">77</span>) + (g*<span class="pl-c1">150</span>) +  (<span class="pl-c1">29</span>*b)) &gt;&gt; <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L1786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1786"></td>
          <td id="LC1786" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1787"></td>
          <td id="LC1787" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1788"></td>
          <td id="LC1788" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1789"></td>
          <td id="LC1789" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_NO_PNG) &amp;&amp; defined(STBI_NO_PSD)</td>
        </tr>
        <tr>
          <td id="L1790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1790"></td>
          <td id="LC1790" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> nothing</span></td>
        </tr>
        <tr>
          <td id="L1791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1791"></td>
          <td id="LC1791" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1792"></td>
          <td id="LC1792" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__uint16 *<span class="pl-c1">stbi__convert_format16</span>(stbi__uint16 *data, <span class="pl-k">int</span> img_n, <span class="pl-k">int</span> req_comp, <span class="pl-k">unsigned</span> <span class="pl-k">int</span> x, <span class="pl-k">unsigned</span> <span class="pl-k">int</span> y)</td>
        </tr>
        <tr>
          <td id="L1793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1793"></td>
          <td id="LC1793" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1794"></td>
          <td id="LC1794" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,j;</td>
        </tr>
        <tr>
          <td id="L1795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1795"></td>
          <td id="LC1795" class="blob-code blob-code-inner js-file-line">   stbi__uint16 *good;</td>
        </tr>
        <tr>
          <td id="L1796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1796"></td>
          <td id="LC1796" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1797"></td>
          <td id="LC1797" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp == img_n) <span class="pl-k">return</span> data;</td>
        </tr>
        <tr>
          <td id="L1798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1798"></td>
          <td id="LC1798" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(req_comp &gt;= <span class="pl-c1">1</span> &amp;&amp; req_comp &lt;= <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L1799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1799"></td>
          <td id="LC1799" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1800"></td>
          <td id="LC1800" class="blob-code blob-code-inner js-file-line">   good = (stbi__uint16 *) <span class="pl-c1">stbi__malloc</span>(req_comp * x * y * <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L1801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1801"></td>
          <td id="LC1801" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (good == <span class="pl-c1">NULL</span>) {</td>
        </tr>
        <tr>
          <td id="L1802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1802"></td>
          <td id="LC1802" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(data);</td>
        </tr>
        <tr>
          <td id="L1803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1803"></td>
          <td id="LC1803" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (stbi__uint16 *) <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1804"></td>
          <td id="LC1804" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1805"></td>
          <td id="LC1805" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1806"></td>
          <td id="LC1806" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; (<span class="pl-k">int</span>) y; ++j) {</td>
        </tr>
        <tr>
          <td id="L1807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1807"></td>
          <td id="LC1807" class="blob-code blob-code-inner js-file-line">      stbi__uint16 *src  = data + j * x * img_n   ;</td>
        </tr>
        <tr>
          <td id="L1808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1808"></td>
          <td id="LC1808" class="blob-code blob-code-inner js-file-line">      stbi__uint16 *dest = good + j * x * req_comp;</td>
        </tr>
        <tr>
          <td id="L1809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1809"></td>
          <td id="LC1809" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1810"></td>
          <td id="LC1810" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI__COMBO</span>(<span class="pl-v">a,b</span>)  ((a)*<span class="pl-c1">8</span>+(b))</td>
        </tr>
        <tr>
          <td id="L1811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1811"></td>
          <td id="LC1811" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">define</span> <span class="pl-en">STBI__CASE</span>(<span class="pl-v">a,b</span>)   <span class="pl-k">case</span> <span class="pl-en">STBI__COMBO</span>(a,b): for(i=x-<span class="pl-c1">1</span>; i &gt;= <span class="pl-c1">0</span>; --i, src += a, dest += b)</td>
        </tr>
        <tr>
          <td id="L1812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1812"></td>
          <td id="LC1812" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> convert source image with img_n components to one with req_comp components;</span></td>
        </tr>
        <tr>
          <td id="L1813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1813"></td>
          <td id="LC1813" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> avoid switch per pixel, so use switch per scanline and massive macros</span></td>
        </tr>
        <tr>
          <td id="L1814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1814"></td>
          <td id="LC1814" class="blob-code blob-code-inner js-file-line">      switch (STBI__COMBO(img_n, req_comp)) {</td>
        </tr>
        <tr>
          <td id="L1815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1815"></td>
          <td id="LC1815" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">1</span>,<span class="pl-c1">2</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>]; dest[<span class="pl-c1">1</span>]=<span class="pl-c1">0xffff</span>;                                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1816"></td>
          <td id="LC1816" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">1</span>,<span class="pl-c1">3</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>];                                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1817"></td>
          <td id="LC1817" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">1</span>,<span class="pl-c1">4</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>]; dest[<span class="pl-c1">3</span>]=<span class="pl-c1">0xffff</span>;                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1818"></td>
          <td id="LC1818" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">2</span>,<span class="pl-c1">1</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>];                                                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1819"></td>
          <td id="LC1819" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>];                                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1820"></td>
          <td id="LC1820" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">2</span>,<span class="pl-c1">4</span>) { dest[<span class="pl-c1">0</span>]=dest[<span class="pl-c1">1</span>]=dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">0</span>]; dest[<span class="pl-c1">3</span>]=src[<span class="pl-c1">1</span>];                     } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1821"></td>
          <td id="LC1821" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">3</span>,<span class="pl-c1">4</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>];dest[<span class="pl-c1">1</span>]=src[<span class="pl-c1">1</span>];dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">2</span>];dest[<span class="pl-c1">3</span>]=<span class="pl-c1">0xffff</span>;        } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1822"></td>
          <td id="LC1822" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">3</span>,<span class="pl-c1">1</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y_16</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]);                   } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1823"></td>
          <td id="LC1823" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y_16</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]); dest[<span class="pl-c1">1</span>] = <span class="pl-c1">0xffff</span>; } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1824"></td>
          <td id="LC1824" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">4</span>,<span class="pl-c1">1</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y_16</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]);                   } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1825"></td>
          <td id="LC1825" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">4</span>,<span class="pl-c1">2</span>) { dest[<span class="pl-c1">0</span>]=<span class="pl-c1">stbi__compute_y_16</span>(src[<span class="pl-c1">0</span>],src[<span class="pl-c1">1</span>],src[<span class="pl-c1">2</span>]); dest[<span class="pl-c1">1</span>] = src[<span class="pl-c1">3</span>]; } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1826"></td>
          <td id="LC1826" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__CASE</span>(<span class="pl-c1">4</span>,<span class="pl-c1">3</span>) { dest[<span class="pl-c1">0</span>]=src[<span class="pl-c1">0</span>];dest[<span class="pl-c1">1</span>]=src[<span class="pl-c1">1</span>];dest[<span class="pl-c1">2</span>]=src[<span class="pl-c1">2</span>];                       } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1827"></td>
          <td id="LC1827" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">default</span>: <span class="pl-c1">STBI_ASSERT</span>(<span class="pl-c1">0</span>); <span class="pl-c1">STBI_FREE</span>(data); <span class="pl-c1">STBI_FREE</span>(good); <span class="pl-k">return</span> (stbi__uint16*) <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unsupported<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported format conversion<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1828"></td>
          <td id="LC1828" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1829"></td>
          <td id="LC1829" class="blob-code blob-code-inner js-file-line">      #<span class="pl-k">undef</span> STBI__CASE</td>
        </tr>
        <tr>
          <td id="L1830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1830"></td>
          <td id="LC1830" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1831"></td>
          <td id="LC1831" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1832"></td>
          <td id="LC1832" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(data);</td>
        </tr>
        <tr>
          <td id="L1833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1833"></td>
          <td id="LC1833" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> good;</td>
        </tr>
        <tr>
          <td id="L1834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1834"></td>
          <td id="LC1834" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1835"></td>
          <td id="LC1835" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1836"></td>
          <td id="LC1836" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1837"></td>
          <td id="LC1837" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_LINEAR</td>
        </tr>
        <tr>
          <td id="L1838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1838"></td>
          <td id="LC1838" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span>   *<span class="pl-c1">stbi__ldr_to_hdr</span>(stbi_uc *data, <span class="pl-k">int</span> x, <span class="pl-k">int</span> y, <span class="pl-k">int</span> comp)</td>
        </tr>
        <tr>
          <td id="L1839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1839"></td>
          <td id="LC1839" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1840"></td>
          <td id="LC1840" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,k,n;</td>
        </tr>
        <tr>
          <td id="L1841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1841"></td>
          <td id="LC1841" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">float</span> *output;</td>
        </tr>
        <tr>
          <td id="L1842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1842"></td>
          <td id="LC1842" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!data) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1843"></td>
          <td id="LC1843" class="blob-code blob-code-inner js-file-line">   output = (<span class="pl-k">float</span> *) <span class="pl-c1">stbi__malloc_mad4</span>(x, y, comp, <span class="pl-k">sizeof</span>(<span class="pl-k">float</span>), <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L1844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1844"></td>
          <td id="LC1844" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (output == <span class="pl-c1">NULL</span>) { <span class="pl-c1">STBI_FREE</span>(data); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L1845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1845"></td>
          <td id="LC1845" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> compute number of non-alpha components</span></td>
        </tr>
        <tr>
          <td id="L1846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1846"></td>
          <td id="LC1846" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp &amp; <span class="pl-c1">1</span>) n = comp; <span class="pl-k">else</span> n = comp-<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L1847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1847"></td>
          <td id="LC1847" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; x*y; ++i) {</td>
        </tr>
        <tr>
          <td id="L1848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1848"></td>
          <td id="LC1848" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; n; ++k) {</td>
        </tr>
        <tr>
          <td id="L1849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1849"></td>
          <td id="LC1849" class="blob-code blob-code-inner js-file-line">         output[i*comp + k] = (<span class="pl-k">float</span>) (<span class="pl-c1">pow</span>(data[i*comp+k]/<span class="pl-c1">255</span>.<span class="pl-c1">0f</span>, stbi__l2h_gamma) * stbi__l2h_scale);</td>
        </tr>
        <tr>
          <td id="L1850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1850"></td>
          <td id="LC1850" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1851"></td>
          <td id="LC1851" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1852"></td>
          <td id="LC1852" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (n &lt; comp) {</td>
        </tr>
        <tr>
          <td id="L1853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1853"></td>
          <td id="LC1853" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; x*y; ++i) {</td>
        </tr>
        <tr>
          <td id="L1854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1854"></td>
          <td id="LC1854" class="blob-code blob-code-inner js-file-line">         output[i*comp + n] = data[i*comp + n]/<span class="pl-c1">255</span>.<span class="pl-c1">0f</span>;</td>
        </tr>
        <tr>
          <td id="L1855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1855"></td>
          <td id="LC1855" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1856"></td>
          <td id="LC1856" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1857"></td>
          <td id="LC1857" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(data);</td>
        </tr>
        <tr>
          <td id="L1858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1858"></td>
          <td id="LC1858" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> output;</td>
        </tr>
        <tr>
          <td id="L1859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1859"></td>
          <td id="LC1859" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1860"></td>
          <td id="LC1860" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1861"></td>
          <td id="LC1861" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1862"></td>
          <td id="LC1862" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L1863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1863"></td>
          <td id="LC1863" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__float2int</span>(<span class="pl-v">x</span>)   ((<span class="pl-k">int</span>) (x))</td>
        </tr>
        <tr>
          <td id="L1864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1864"></td>
          <td id="LC1864" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__hdr_to_ldr</span>(<span class="pl-k">float</span>   *data, <span class="pl-k">int</span> x, <span class="pl-k">int</span> y, <span class="pl-k">int</span> comp)</td>
        </tr>
        <tr>
          <td id="L1865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1865"></td>
          <td id="LC1865" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1866"></td>
          <td id="LC1866" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,k,n;</td>
        </tr>
        <tr>
          <td id="L1867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1867"></td>
          <td id="LC1867" class="blob-code blob-code-inner js-file-line">   stbi_uc *output;</td>
        </tr>
        <tr>
          <td id="L1868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1868"></td>
          <td id="LC1868" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!data) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L1869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1869"></td>
          <td id="LC1869" class="blob-code blob-code-inner js-file-line">   output = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(x, y, comp, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L1870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1870"></td>
          <td id="LC1870" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (output == <span class="pl-c1">NULL</span>) { <span class="pl-c1">STBI_FREE</span>(data); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L1871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1871"></td>
          <td id="LC1871" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> compute number of non-alpha components</span></td>
        </tr>
        <tr>
          <td id="L1872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1872"></td>
          <td id="LC1872" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp &amp; <span class="pl-c1">1</span>) n = comp; <span class="pl-k">else</span> n = comp-<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L1873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1873"></td>
          <td id="LC1873" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; x*y; ++i) {</td>
        </tr>
        <tr>
          <td id="L1874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1874"></td>
          <td id="LC1874" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; n; ++k) {</td>
        </tr>
        <tr>
          <td id="L1875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1875"></td>
          <td id="LC1875" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">float</span> z = (<span class="pl-k">float</span>) <span class="pl-c1">pow</span>(data[i*comp+k]*stbi__h2l_scale_i, stbi__h2l_gamma_i) * <span class="pl-c1">255</span> + <span class="pl-c1">0</span>.<span class="pl-c1">5f</span>;</td>
        </tr>
        <tr>
          <td id="L1876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1876"></td>
          <td id="LC1876" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z &lt; <span class="pl-c1">0</span>) z = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1877"></td>
          <td id="LC1877" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z &gt; <span class="pl-c1">255</span>) z = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L1878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1878"></td>
          <td id="LC1878" class="blob-code blob-code-inner js-file-line">         output[i*comp + k] = (stbi_uc) <span class="pl-c1">stbi__float2int</span>(z);</td>
        </tr>
        <tr>
          <td id="L1879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1879"></td>
          <td id="LC1879" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1880"></td>
          <td id="LC1880" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (k &lt; comp) {</td>
        </tr>
        <tr>
          <td id="L1881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1881"></td>
          <td id="LC1881" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">float</span> z = data[i*comp+k] * <span class="pl-c1">255</span> + <span class="pl-c1">0</span>.<span class="pl-c1">5f</span>;</td>
        </tr>
        <tr>
          <td id="L1882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1882"></td>
          <td id="LC1882" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z &lt; <span class="pl-c1">0</span>) z = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1883"></td>
          <td id="LC1883" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z &gt; <span class="pl-c1">255</span>) z = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L1884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1884"></td>
          <td id="LC1884" class="blob-code blob-code-inner js-file-line">         output[i*comp + k] = (stbi_uc) <span class="pl-c1">stbi__float2int</span>(z);</td>
        </tr>
        <tr>
          <td id="L1885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1885"></td>
          <td id="LC1885" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1886"></td>
          <td id="LC1886" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L1887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1887"></td>
          <td id="LC1887" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(data);</td>
        </tr>
        <tr>
          <td id="L1888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1888"></td>
          <td id="LC1888" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> output;</td>
        </tr>
        <tr>
          <td id="L1889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1889"></td>
          <td id="LC1889" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1890"></td>
          <td id="LC1890" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L1891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1891"></td>
          <td id="LC1891" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1892"></td>
          <td id="LC1892" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>////////////////////////////////////////////////////////////////////////////</span></td>
        </tr>
        <tr>
          <td id="L1893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1893"></td>
          <td id="LC1893" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L1894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1894"></td>
          <td id="LC1894" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  &quot;baseline&quot; JPEG/JFIF decoder</span></td>
        </tr>
        <tr>
          <td id="L1895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1895"></td>
          <td id="LC1895" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L1896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1896"></td>
          <td id="LC1896" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    simple implementation</span></td>
        </tr>
        <tr>
          <td id="L1897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1897"></td>
          <td id="LC1897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - doesn&#39;t support delayed output of y-dimension</span></td>
        </tr>
        <tr>
          <td id="L1898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1898"></td>
          <td id="LC1898" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - simple interface (only one output format: 8-bit interleaved RGB)</span></td>
        </tr>
        <tr>
          <td id="L1899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1899"></td>
          <td id="LC1899" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - doesn&#39;t try to recover corrupt jpegs</span></td>
        </tr>
        <tr>
          <td id="L1900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1900"></td>
          <td id="LC1900" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - doesn&#39;t allow partial loading, loading multiple at once</span></td>
        </tr>
        <tr>
          <td id="L1901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1901"></td>
          <td id="LC1901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - still fast on x86 (copying globals into locals doesn&#39;t help x86)</span></td>
        </tr>
        <tr>
          <td id="L1902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1902"></td>
          <td id="LC1902" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - allocates lots of intermediate memory (full size of all components)</span></td>
        </tr>
        <tr>
          <td id="L1903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1903"></td>
          <td id="LC1903" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        - non-interleaved case requires this anyway</span></td>
        </tr>
        <tr>
          <td id="L1904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1904"></td>
          <td id="LC1904" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        - allows good upsampling (see next)</span></td>
        </tr>
        <tr>
          <td id="L1905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1905"></td>
          <td id="LC1905" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    high-quality</span></td>
        </tr>
        <tr>
          <td id="L1906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1906"></td>
          <td id="LC1906" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - upsampled channels are bilinearly interpolated, even across blocks</span></td>
        </tr>
        <tr>
          <td id="L1907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1907"></td>
          <td id="LC1907" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - quality integer IDCT derived from IJG&#39;s &#39;slow&#39;</span></td>
        </tr>
        <tr>
          <td id="L1908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1908"></td>
          <td id="LC1908" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    performance</span></td>
        </tr>
        <tr>
          <td id="L1909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1909"></td>
          <td id="LC1909" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - fast huffman; reasonable integer IDCT</span></td>
        </tr>
        <tr>
          <td id="L1910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1910"></td>
          <td id="LC1910" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - some SIMD kernels for common paths on targets with SSE2/NEON</span></td>
        </tr>
        <tr>
          <td id="L1911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1911"></td>
          <td id="LC1911" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - uses a lot of intermediate memory, could cache poorly</span></td>
        </tr>
        <tr>
          <td id="L1912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1912"></td>
          <td id="LC1912" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1913"></td>
          <td id="LC1913" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_JPEG</td>
        </tr>
        <tr>
          <td id="L1914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1914"></td>
          <td id="LC1914" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1915"></td>
          <td id="LC1915" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> huffman decoding acceleration</span></td>
        </tr>
        <tr>
          <td id="L1916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1916"></td>
          <td id="LC1916" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">FAST_BITS</span>   <span class="pl-c1">9</span>  <span class="pl-c"><span class="pl-c">//</span> larger handles more cases; smaller stomps less cache</span></td>
        </tr>
        <tr>
          <td id="L1917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1917"></td>
          <td id="LC1917" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1918"></td>
          <td id="LC1918" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L1919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1919"></td>
          <td id="LC1919" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1920"></td>
          <td id="LC1920" class="blob-code blob-code-inner js-file-line">   stbi_uc  fast[<span class="pl-c1">1</span> &lt;&lt; FAST_BITS];</td>
        </tr>
        <tr>
          <td id="L1921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1921"></td>
          <td id="LC1921" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> weirdly, repacking this into AoS is a 10% speed loss, instead of a win</span></td>
        </tr>
        <tr>
          <td id="L1922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1922"></td>
          <td id="LC1922" class="blob-code blob-code-inner js-file-line">   stbi__uint16 code[<span class="pl-c1">256</span>];</td>
        </tr>
        <tr>
          <td id="L1923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1923"></td>
          <td id="LC1923" class="blob-code blob-code-inner js-file-line">   stbi_uc  values[<span class="pl-c1">256</span>];</td>
        </tr>
        <tr>
          <td id="L1924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1924"></td>
          <td id="LC1924" class="blob-code blob-code-inner js-file-line">   stbi_uc  size[<span class="pl-c1">257</span>];</td>
        </tr>
        <tr>
          <td id="L1925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1925"></td>
          <td id="LC1925" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> maxcode[<span class="pl-c1">18</span>];</td>
        </tr>
        <tr>
          <td id="L1926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1926"></td>
          <td id="LC1926" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>    delta[<span class="pl-c1">17</span>];   <span class="pl-c"><span class="pl-c">//</span> old &#39;firstsymbol&#39; - old &#39;firstcode&#39;</span></td>
        </tr>
        <tr>
          <td id="L1927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1927"></td>
          <td id="LC1927" class="blob-code blob-code-inner js-file-line">} stbi__huffman;</td>
        </tr>
        <tr>
          <td id="L1928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1928"></td>
          <td id="LC1928" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1929"></td>
          <td id="LC1929" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L1930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1930"></td>
          <td id="LC1930" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1931"></td>
          <td id="LC1931" class="blob-code blob-code-inner js-file-line">   stbi__context *s;</td>
        </tr>
        <tr>
          <td id="L1932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1932"></td>
          <td id="LC1932" class="blob-code blob-code-inner js-file-line">   stbi__huffman huff_dc[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L1933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1933"></td>
          <td id="LC1933" class="blob-code blob-code-inner js-file-line">   stbi__huffman huff_ac[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L1934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1934"></td>
          <td id="LC1934" class="blob-code blob-code-inner js-file-line">   stbi__uint16 dequant[<span class="pl-c1">4</span>][<span class="pl-c1">64</span>];</td>
        </tr>
        <tr>
          <td id="L1935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1935"></td>
          <td id="LC1935" class="blob-code blob-code-inner js-file-line">   stbi__int16 fast_ac[<span class="pl-c1">4</span>][<span class="pl-c1">1</span> &lt;&lt; FAST_BITS];</td>
        </tr>
        <tr>
          <td id="L1936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1936"></td>
          <td id="LC1936" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1937"></td>
          <td id="LC1937" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> sizes for components, interleaved MCUs</span></td>
        </tr>
        <tr>
          <td id="L1938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1938"></td>
          <td id="LC1938" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_h_max, img_v_max;</td>
        </tr>
        <tr>
          <td id="L1939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1939"></td>
          <td id="LC1939" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_mcu_x, img_mcu_y;</td>
        </tr>
        <tr>
          <td id="L1940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1940"></td>
          <td id="LC1940" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_mcu_w, img_mcu_h;</td>
        </tr>
        <tr>
          <td id="L1941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1941"></td>
          <td id="LC1941" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1942"></td>
          <td id="LC1942" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> definition of jpeg image component</span></td>
        </tr>
        <tr>
          <td id="L1943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1943"></td>
          <td id="LC1943" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L1944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1944"></td>
          <td id="LC1944" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L1945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1945"></td>
          <td id="LC1945" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> id;</td>
        </tr>
        <tr>
          <td id="L1946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1946"></td>
          <td id="LC1946" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> h,v;</td>
        </tr>
        <tr>
          <td id="L1947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1947"></td>
          <td id="LC1947" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> tq;</td>
        </tr>
        <tr>
          <td id="L1948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1948"></td>
          <td id="LC1948" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> hd,ha;</td>
        </tr>
        <tr>
          <td id="L1949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1949"></td>
          <td id="LC1949" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> dc_pred;</td>
        </tr>
        <tr>
          <td id="L1950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1950"></td>
          <td id="LC1950" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1951"></td>
          <td id="LC1951" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> x,y,w2,h2;</td>
        </tr>
        <tr>
          <td id="L1952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1952"></td>
          <td id="LC1952" class="blob-code blob-code-inner js-file-line">      stbi_uc *data;</td>
        </tr>
        <tr>
          <td id="L1953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1953"></td>
          <td id="LC1953" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">void</span> *raw_data, *raw_coeff;</td>
        </tr>
        <tr>
          <td id="L1954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1954"></td>
          <td id="LC1954" class="blob-code blob-code-inner js-file-line">      stbi_uc *linebuf;</td>
        </tr>
        <tr>
          <td id="L1955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1955"></td>
          <td id="LC1955" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">short</span>   *coeff;   <span class="pl-c"><span class="pl-c">//</span> progressive only</span></td>
        </tr>
        <tr>
          <td id="L1956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1956"></td>
          <td id="LC1956" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span>      coeff_w, coeff_h; <span class="pl-c"><span class="pl-c">//</span> number of 8x8 coefficient blocks</span></td>
        </tr>
        <tr>
          <td id="L1957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1957"></td>
          <td id="LC1957" class="blob-code blob-code-inner js-file-line">   } img_comp[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L1958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1958"></td>
          <td id="LC1958" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1959"></td>
          <td id="LC1959" class="blob-code blob-code-inner js-file-line">   stbi__uint32   code_buffer; <span class="pl-c"><span class="pl-c">//</span> jpeg entropy-coded buffer</span></td>
        </tr>
        <tr>
          <td id="L1960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1960"></td>
          <td id="LC1960" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            code_bits;   <span class="pl-c"><span class="pl-c">//</span> number of valid bits</span></td>
        </tr>
        <tr>
          <td id="L1961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1961"></td>
          <td id="LC1961" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span>  marker;      <span class="pl-c"><span class="pl-c">//</span> marker seen while filling entropy buffer</span></td>
        </tr>
        <tr>
          <td id="L1962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1962"></td>
          <td id="LC1962" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            nomore;      <span class="pl-c"><span class="pl-c">//</span> flag if we saw a marker so must stop</span></td>
        </tr>
        <tr>
          <td id="L1963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1963"></td>
          <td id="LC1963" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1964"></td>
          <td id="LC1964" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            progressive;</td>
        </tr>
        <tr>
          <td id="L1965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1965"></td>
          <td id="LC1965" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            spec_start;</td>
        </tr>
        <tr>
          <td id="L1966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1966"></td>
          <td id="LC1966" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            spec_end;</td>
        </tr>
        <tr>
          <td id="L1967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1967"></td>
          <td id="LC1967" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            succ_high;</td>
        </tr>
        <tr>
          <td id="L1968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1968"></td>
          <td id="LC1968" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            succ_low;</td>
        </tr>
        <tr>
          <td id="L1969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1969"></td>
          <td id="LC1969" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            eob_run;</td>
        </tr>
        <tr>
          <td id="L1970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1970"></td>
          <td id="LC1970" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            jfif;</td>
        </tr>
        <tr>
          <td id="L1971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1971"></td>
          <td id="LC1971" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            app14_color_transform; <span class="pl-c"><span class="pl-c">//</span> Adobe APP14 tag</span></td>
        </tr>
        <tr>
          <td id="L1972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1972"></td>
          <td id="LC1972" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>            rgb;</td>
        </tr>
        <tr>
          <td id="L1973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1973"></td>
          <td id="LC1973" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1974"></td>
          <td id="LC1974" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> scan_n, order[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L1975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1975"></td>
          <td id="LC1975" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> restart_interval, todo;</td>
        </tr>
        <tr>
          <td id="L1976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1976"></td>
          <td id="LC1976" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1977"></td>
          <td id="LC1977" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> kernels</span></td>
        </tr>
        <tr>
          <td id="L1978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1978"></td>
          <td id="LC1978" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">void</span> (*idct_block_kernel)(stbi_uc *out, <span class="pl-k">int</span> out_stride, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>]);</td>
        </tr>
        <tr>
          <td id="L1979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1979"></td>
          <td id="LC1979" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">void</span> (*YCbCr_to_RGB_kernel)(stbi_uc *out, <span class="pl-k">const</span> stbi_uc *y, <span class="pl-k">const</span> stbi_uc *pcb, <span class="pl-k">const</span> stbi_uc *pcr, <span class="pl-k">int</span> count, <span class="pl-k">int</span> step);</td>
        </tr>
        <tr>
          <td id="L1980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1980"></td>
          <td id="LC1980" class="blob-code blob-code-inner js-file-line">   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs);</td>
        </tr>
        <tr>
          <td id="L1981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1981"></td>
          <td id="LC1981" class="blob-code blob-code-inner js-file-line">} stbi__jpeg;</td>
        </tr>
        <tr>
          <td id="L1982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1982"></td>
          <td id="LC1982" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1983"></td>
          <td id="LC1983" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__build_huffman</span>(stbi__huffman *h, <span class="pl-k">int</span> *count)</td>
        </tr>
        <tr>
          <td id="L1984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1984"></td>
          <td id="LC1984" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L1985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1985"></td>
          <td id="LC1985" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,j,k=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1986"></td>
          <td id="LC1986" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> code;</td>
        </tr>
        <tr>
          <td id="L1987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1987"></td>
          <td id="LC1987" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> build size list for each symbol (from JPEG spec)</span></td>
        </tr>
        <tr>
          <td id="L1988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1988"></td>
          <td id="LC1988" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">16</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L1989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1989"></td>
          <td id="LC1989" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; count[i]; ++j)</td>
        </tr>
        <tr>
          <td id="L1990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1990"></td>
          <td id="LC1990" class="blob-code blob-code-inner js-file-line">         h-&gt;<span class="pl-smi">size</span>[k++] = (stbi_uc) (i+<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L1991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1991"></td>
          <td id="LC1991" class="blob-code blob-code-inner js-file-line">   h-&gt;<span class="pl-smi">size</span>[k] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1992"></td>
          <td id="LC1992" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1993"></td>
          <td id="LC1993" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> compute actual symbols (from jpeg spec)</span></td>
        </tr>
        <tr>
          <td id="L1994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1994"></td>
          <td id="LC1994" class="blob-code blob-code-inner js-file-line">   code = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1995"></td>
          <td id="LC1995" class="blob-code blob-code-inner js-file-line">   k = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1996"></td>
          <td id="LC1996" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(j=<span class="pl-c1">1</span>; j &lt;= <span class="pl-c1">16</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L1997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1997"></td>
          <td id="LC1997" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> compute delta to add to code to compute symbol id</span></td>
        </tr>
        <tr>
          <td id="L1998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1998"></td>
          <td id="LC1998" class="blob-code blob-code-inner js-file-line">      h-&gt;<span class="pl-smi">delta</span>[j] = k - code;</td>
        </tr>
        <tr>
          <td id="L1999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="1999"></td>
          <td id="LC1999" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (h-&gt;<span class="pl-smi">size</span>[k] == j) {</td>
        </tr>
        <tr>
          <td id="L2000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2000"></td>
          <td id="LC2000" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (h-&gt;<span class="pl-smi">size</span>[k] == j)</td>
        </tr>
        <tr>
          <td id="L2001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2001"></td>
          <td id="LC2001" class="blob-code blob-code-inner js-file-line">            h-&gt;<span class="pl-smi">code</span>[k++] = (stbi__uint16) (code++);</td>
        </tr>
        <tr>
          <td id="L2002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2002"></td>
          <td id="LC2002" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (code-<span class="pl-c1">1</span> &gt;= (<span class="pl-c1">1u</span> &lt;&lt; j)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad code lengths<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2003"></td>
          <td id="LC2003" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2004"></td>
          <td id="LC2004" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> compute largest code + 1 for this size, preshifted as needed later</span></td>
        </tr>
        <tr>
          <td id="L2005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2005"></td>
          <td id="LC2005" class="blob-code blob-code-inner js-file-line">      h-&gt;<span class="pl-smi">maxcode</span>[j] = code &lt;&lt; (<span class="pl-c1">16</span>-j);</td>
        </tr>
        <tr>
          <td id="L2006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2006"></td>
          <td id="LC2006" class="blob-code blob-code-inner js-file-line">      code &lt;&lt;= <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2007"></td>
          <td id="LC2007" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2008"></td>
          <td id="LC2008" class="blob-code blob-code-inner js-file-line">   h-&gt;<span class="pl-smi">maxcode</span>[j] = <span class="pl-c1">0xffffffff</span>;</td>
        </tr>
        <tr>
          <td id="L2009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2009"></td>
          <td id="LC2009" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2010"></td>
          <td id="LC2010" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> build non-spec acceleration table; 255 is flag for not-accelerated</span></td>
        </tr>
        <tr>
          <td id="L2011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2011"></td>
          <td id="LC2011" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(h-&gt;<span class="pl-smi">fast</span>, <span class="pl-c1">255</span>, <span class="pl-c1">1</span> &lt;&lt; FAST_BITS);</td>
        </tr>
        <tr>
          <td id="L2012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2012"></td>
          <td id="LC2012" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; k; ++i) {</td>
        </tr>
        <tr>
          <td id="L2013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2013"></td>
          <td id="LC2013" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> s = h-&gt;<span class="pl-smi">size</span>[i];</td>
        </tr>
        <tr>
          <td id="L2014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2014"></td>
          <td id="LC2014" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (s &lt;= FAST_BITS) {</td>
        </tr>
        <tr>
          <td id="L2015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2015"></td>
          <td id="LC2015" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> c = h-&gt;<span class="pl-smi">code</span>[i] &lt;&lt; (FAST_BITS-s);</td>
        </tr>
        <tr>
          <td id="L2016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2016"></td>
          <td id="LC2016" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> m = <span class="pl-c1">1</span> &lt;&lt; (FAST_BITS-s);</td>
        </tr>
        <tr>
          <td id="L2017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2017"></td>
          <td id="LC2017" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; m; ++j) {</td>
        </tr>
        <tr>
          <td id="L2018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2018"></td>
          <td id="LC2018" class="blob-code blob-code-inner js-file-line">            h-&gt;<span class="pl-smi">fast</span>[c+j] = (stbi_uc) i;</td>
        </tr>
        <tr>
          <td id="L2019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2019"></td>
          <td id="LC2019" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2020"></td>
          <td id="LC2020" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2021"></td>
          <td id="LC2021" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2022"></td>
          <td id="LC2022" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2023"></td>
          <td id="LC2023" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2024"></td>
          <td id="LC2024" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2025"></td>
          <td id="LC2025" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> build a table that decodes both magnitude and value of small ACs in</span></td>
        </tr>
        <tr>
          <td id="L2026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2026"></td>
          <td id="LC2026" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> one go.</span></td>
        </tr>
        <tr>
          <td id="L2027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2027"></td>
          <td id="LC2027" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__build_fast_ac</span>(stbi__int16 *fast_ac, stbi__huffman *h)</td>
        </tr>
        <tr>
          <td id="L2028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2028"></td>
          <td id="LC2028" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2029"></td>
          <td id="LC2029" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L2030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2030"></td>
          <td id="LC2030" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; (<span class="pl-c1">1</span> &lt;&lt; FAST_BITS); ++i) {</td>
        </tr>
        <tr>
          <td id="L2031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2031"></td>
          <td id="LC2031" class="blob-code blob-code-inner js-file-line">      stbi_uc fast = h-&gt;<span class="pl-smi">fast</span>[i];</td>
        </tr>
        <tr>
          <td id="L2032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2032"></td>
          <td id="LC2032" class="blob-code blob-code-inner js-file-line">      fast_ac[i] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2033"></td>
          <td id="LC2033" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (fast &lt; <span class="pl-c1">255</span>) {</td>
        </tr>
        <tr>
          <td id="L2034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2034"></td>
          <td id="LC2034" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> rs = h-&gt;<span class="pl-smi">values</span>[fast];</td>
        </tr>
        <tr>
          <td id="L2035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2035"></td>
          <td id="LC2035" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> run = (rs &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L2036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2036"></td>
          <td id="LC2036" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> magbits = rs &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L2037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2037"></td>
          <td id="LC2037" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> len = h-&gt;<span class="pl-smi">size</span>[fast];</td>
        </tr>
        <tr>
          <td id="L2038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2038"></td>
          <td id="LC2038" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2039"></td>
          <td id="LC2039" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (magbits &amp;&amp; len + magbits &lt;= FAST_BITS) {</td>
        </tr>
        <tr>
          <td id="L2040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2040"></td>
          <td id="LC2040" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> magnitude code followed by receive_extend code</span></td>
        </tr>
        <tr>
          <td id="L2041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2041"></td>
          <td id="LC2041" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> k = ((i &lt;&lt; len) &amp; ((<span class="pl-c1">1</span> &lt;&lt; FAST_BITS) - <span class="pl-c1">1</span>)) &gt;&gt; (FAST_BITS - magbits);</td>
        </tr>
        <tr>
          <td id="L2042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2042"></td>
          <td id="LC2042" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> m = <span class="pl-c1">1</span> &lt;&lt; (magbits - <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2043"></td>
          <td id="LC2043" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &lt; m) k += (~<span class="pl-c1">0U</span> &lt;&lt; magbits) + <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2044"></td>
          <td id="LC2044" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> if the result is small enough, we can fit it in fast_ac table</span></td>
        </tr>
        <tr>
          <td id="L2045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2045"></td>
          <td id="LC2045" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt;= -<span class="pl-c1">128</span> &amp;&amp; k &lt;= <span class="pl-c1">127</span>)</td>
        </tr>
        <tr>
          <td id="L2046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2046"></td>
          <td id="LC2046" class="blob-code blob-code-inner js-file-line">               fast_ac[i] = (stbi__int16) ((k * <span class="pl-c1">256</span>) + (run * <span class="pl-c1">16</span>) + (len + magbits));</td>
        </tr>
        <tr>
          <td id="L2047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2047"></td>
          <td id="LC2047" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2048"></td>
          <td id="LC2048" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2049"></td>
          <td id="LC2049" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2050"></td>
          <td id="LC2050" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2051"></td>
          <td id="LC2051" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2052"></td>
          <td id="LC2052" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__grow_buffer_unsafe</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L2053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2053"></td>
          <td id="LC2053" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2054"></td>
          <td id="LC2054" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L2055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2055"></td>
          <td id="LC2055" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">unsigned</span> <span class="pl-k">int</span> b = j-&gt;<span class="pl-smi">nomore</span> ? <span class="pl-c1">0</span> : <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L2056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2056"></td>
          <td id="LC2056" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (b == <span class="pl-c1">0xff</span>) {</td>
        </tr>
        <tr>
          <td id="L2057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2057"></td>
          <td id="LC2057" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> c = <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L2058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2058"></td>
          <td id="LC2058" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (c == <span class="pl-c1">0xff</span>) c = <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> consume fill bytes</span></td>
        </tr>
        <tr>
          <td id="L2059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2059"></td>
          <td id="LC2059" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (c != <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2060"></td>
          <td id="LC2060" class="blob-code blob-code-inner js-file-line">            j-&gt;<span class="pl-smi">marker</span> = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>) c;</td>
        </tr>
        <tr>
          <td id="L2061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2061"></td>
          <td id="LC2061" class="blob-code blob-code-inner js-file-line">            j-&gt;<span class="pl-smi">nomore</span> = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2062"></td>
          <td id="LC2062" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L2063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2063"></td>
          <td id="LC2063" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2064"></td>
          <td id="LC2064" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2065"></td>
          <td id="LC2065" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">code_buffer</span> |= b &lt;&lt; (<span class="pl-c1">24</span> - j-&gt;<span class="pl-smi">code_bits</span>);</td>
        </tr>
        <tr>
          <td id="L2066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2066"></td>
          <td id="LC2066" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">code_bits</span> += <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L2067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2067"></td>
          <td id="LC2067" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">while</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt;= <span class="pl-c1">24</span>);</td>
        </tr>
        <tr>
          <td id="L2068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2068"></td>
          <td id="LC2068" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2069"></td>
          <td id="LC2069" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2070"></td>
          <td id="LC2070" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> (1 &lt;&lt; n) - 1</span></td>
        </tr>
        <tr>
          <td id="L2071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2071"></td>
          <td id="LC2071" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> stbi__uint32 stbi__bmask[<span class="pl-c1">17</span>]={<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">7</span>,<span class="pl-c1">15</span>,<span class="pl-c1">31</span>,<span class="pl-c1">63</span>,<span class="pl-c1">127</span>,<span class="pl-c1">255</span>,<span class="pl-c1">511</span>,<span class="pl-c1">1023</span>,<span class="pl-c1">2047</span>,<span class="pl-c1">4095</span>,<span class="pl-c1">8191</span>,<span class="pl-c1">16383</span>,<span class="pl-c1">32767</span>,<span class="pl-c1">65535</span>};</td>
        </tr>
        <tr>
          <td id="L2072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2072"></td>
          <td id="LC2072" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2073"></td>
          <td id="LC2073" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> decode a jpeg huffman value from the bitstream</span></td>
        </tr>
        <tr>
          <td id="L2074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2074"></td>
          <td id="LC2074" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_huff_decode</span>(stbi__jpeg *j, stbi__huffman *h)</td>
        </tr>
        <tr>
          <td id="L2075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2075"></td>
          <td id="LC2075" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2076"></td>
          <td id="LC2076" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> temp;</td>
        </tr>
        <tr>
          <td id="L2077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2077"></td>
          <td id="LC2077" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> c,k;</td>
        </tr>
        <tr>
          <td id="L2078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2078"></td>
          <td id="LC2078" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2079"></td>
          <td id="LC2079" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">16</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2080"></td>
          <td id="LC2080" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2081"></td>
          <td id="LC2081" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> look at the top FAST_BITS and determine what symbol ID it is,</span></td>
        </tr>
        <tr>
          <td id="L2082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2082"></td>
          <td id="LC2082" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> if the code is &lt;= FAST_BITS</span></td>
        </tr>
        <tr>
          <td id="L2083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2083"></td>
          <td id="LC2083" class="blob-code blob-code-inner js-file-line">   c = (j-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt; (<span class="pl-c1">32</span> - FAST_BITS)) &amp; ((<span class="pl-c1">1</span> &lt;&lt; FAST_BITS)-<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2084"></td>
          <td id="LC2084" class="blob-code blob-code-inner js-file-line">   k = h-&gt;<span class="pl-smi">fast</span>[c];</td>
        </tr>
        <tr>
          <td id="L2085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2085"></td>
          <td id="LC2085" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (k &lt; <span class="pl-c1">255</span>) {</td>
        </tr>
        <tr>
          <td id="L2086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2086"></td>
          <td id="LC2086" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> s = h-&gt;<span class="pl-smi">size</span>[k];</td>
        </tr>
        <tr>
          <td id="L2087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2087"></td>
          <td id="LC2087" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (s &gt; j-&gt;<span class="pl-smi">code_bits</span>)</td>
        </tr>
        <tr>
          <td id="L2088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2088"></td>
          <td id="LC2088" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2089"></td>
          <td id="LC2089" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">code_buffer</span> &lt;&lt;= s;</td>
        </tr>
        <tr>
          <td id="L2090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2090"></td>
          <td id="LC2090" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">code_bits</span> -= s;</td>
        </tr>
        <tr>
          <td id="L2091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2091"></td>
          <td id="LC2091" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> h-&gt;<span class="pl-smi">values</span>[k];</td>
        </tr>
        <tr>
          <td id="L2092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2092"></td>
          <td id="LC2092" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2093"></td>
          <td id="LC2093" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2094"></td>
          <td id="LC2094" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> naive test is to shift the code_buffer down so k bits are</span></td>
        </tr>
        <tr>
          <td id="L2095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2095"></td>
          <td id="LC2095" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> valid, then test against maxcode. To speed this up, we&#39;ve</span></td>
        </tr>
        <tr>
          <td id="L2096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2096"></td>
          <td id="LC2096" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> preshifted maxcode left so that it has (16-k) 0s at the</span></td>
        </tr>
        <tr>
          <td id="L2097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2097"></td>
          <td id="LC2097" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> end; in other words, regardless of the number of bits, it</span></td>
        </tr>
        <tr>
          <td id="L2098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2098"></td>
          <td id="LC2098" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> wants to be compared against something shifted to have 16;</span></td>
        </tr>
        <tr>
          <td id="L2099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2099"></td>
          <td id="LC2099" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> that way we don&#39;t need to shift inside the loop.</span></td>
        </tr>
        <tr>
          <td id="L2100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2100"></td>
          <td id="LC2100" class="blob-code blob-code-inner js-file-line">   temp = j-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt; <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L2101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2101"></td>
          <td id="LC2101" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (k=FAST_BITS+<span class="pl-c1">1</span> ; ; ++k)</td>
        </tr>
        <tr>
          <td id="L2102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2102"></td>
          <td id="LC2102" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (temp &lt; h-&gt;<span class="pl-smi">maxcode</span>[k])</td>
        </tr>
        <tr>
          <td id="L2103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2103"></td>
          <td id="LC2103" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L2104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2104"></td>
          <td id="LC2104" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (k == <span class="pl-c1">17</span>) {</td>
        </tr>
        <tr>
          <td id="L2105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2105"></td>
          <td id="LC2105" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> error! code not found</span></td>
        </tr>
        <tr>
          <td id="L2106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2106"></td>
          <td id="LC2106" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">code_bits</span> -= <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L2107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2107"></td>
          <td id="LC2107" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2108"></td>
          <td id="LC2108" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2109"></td>
          <td id="LC2109" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2110"></td>
          <td id="LC2110" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (k &gt; j-&gt;<span class="pl-smi">code_bits</span>)</td>
        </tr>
        <tr>
          <td id="L2111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2111"></td>
          <td id="LC2111" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2112"></td>
          <td id="LC2112" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2113"></td>
          <td id="LC2113" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> convert the huffman code to the symbol id</span></td>
        </tr>
        <tr>
          <td id="L2114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2114"></td>
          <td id="LC2114" class="blob-code blob-code-inner js-file-line">   c = ((j-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt; (<span class="pl-c1">32</span> - k)) &amp; stbi__bmask[k]) + h-&gt;<span class="pl-smi">delta</span>[k];</td>
        </tr>
        <tr>
          <td id="L2115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2115"></td>
          <td id="LC2115" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>((((j-&gt;<span class="pl-smi">code_buffer</span>) &gt;&gt; (<span class="pl-c1">32</span> - h-&gt;<span class="pl-smi">size</span>[c])) &amp; stbi__bmask[h-&gt;<span class="pl-smi">size</span>[c]]) == h-&gt;<span class="pl-smi">code</span>[c]);</td>
        </tr>
        <tr>
          <td id="L2116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2116"></td>
          <td id="LC2116" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2117"></td>
          <td id="LC2117" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> convert the id to a symbol</span></td>
        </tr>
        <tr>
          <td id="L2118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2118"></td>
          <td id="LC2118" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_bits</span> -= k;</td>
        </tr>
        <tr>
          <td id="L2119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2119"></td>
          <td id="LC2119" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_buffer</span> &lt;&lt;= k;</td>
        </tr>
        <tr>
          <td id="L2120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2120"></td>
          <td id="LC2120" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> h-&gt;<span class="pl-smi">values</span>[c];</td>
        </tr>
        <tr>
          <td id="L2121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2121"></td>
          <td id="LC2121" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2122"></td>
          <td id="LC2122" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2123"></td>
          <td id="LC2123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> bias[n] = (-1&lt;&lt;n) + 1</span></td>
        </tr>
        <tr>
          <td id="L2124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2124"></td>
          <td id="LC2124" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> stbi__jbias[<span class="pl-c1">16</span>] = {<span class="pl-c1">0</span>,-<span class="pl-c1">1</span>,-<span class="pl-c1">3</span>,-<span class="pl-c1">7</span>,-<span class="pl-c1">15</span>,-<span class="pl-c1">31</span>,-<span class="pl-c1">63</span>,-<span class="pl-c1">127</span>,-<span class="pl-c1">255</span>,-<span class="pl-c1">511</span>,-<span class="pl-c1">1023</span>,-<span class="pl-c1">2047</span>,-<span class="pl-c1">4095</span>,-<span class="pl-c1">8191</span>,-<span class="pl-c1">16383</span>,-<span class="pl-c1">32767</span>};</td>
        </tr>
        <tr>
          <td id="L2125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2125"></td>
          <td id="LC2125" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2126"></td>
          <td id="LC2126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> combined JPEG &#39;receive&#39; and JPEG &#39;extend&#39;, since baseline</span></td>
        </tr>
        <tr>
          <td id="L2127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2127"></td>
          <td id="LC2127" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> always extends everything it receives.</span></td>
        </tr>
        <tr>
          <td id="L2128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2128"></td>
          <td id="LC2128" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__extend_receive</span>(stbi__jpeg *j, <span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L2129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2129"></td>
          <td id="LC2129" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2130"></td>
          <td id="LC2130" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L2131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2131"></td>
          <td id="LC2131" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> sgn;</td>
        </tr>
        <tr>
          <td id="L2132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2132"></td>
          <td id="LC2132" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; n) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2133"></td>
          <td id="LC2133" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2134"></td>
          <td id="LC2134" class="blob-code blob-code-inner js-file-line">   sgn = j-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt; <span class="pl-c1">31</span>; <span class="pl-c"><span class="pl-c">//</span> sign bit always in MSB; 0 if MSB clear (positive), 1 if MSB set (negative)</span></td>
        </tr>
        <tr>
          <td id="L2135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2135"></td>
          <td id="LC2135" class="blob-code blob-code-inner js-file-line">   k = <span class="pl-c1">stbi_lrot</span>(j-&gt;<span class="pl-smi">code_buffer</span>, n);</td>
        </tr>
        <tr>
          <td id="L2136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2136"></td>
          <td id="LC2136" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_buffer</span> = k &amp; ~stbi__bmask[n];</td>
        </tr>
        <tr>
          <td id="L2137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2137"></td>
          <td id="LC2137" class="blob-code blob-code-inner js-file-line">   k &amp;= stbi__bmask[n];</td>
        </tr>
        <tr>
          <td id="L2138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2138"></td>
          <td id="LC2138" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_bits</span> -= n;</td>
        </tr>
        <tr>
          <td id="L2139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2139"></td>
          <td id="LC2139" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> k + (stbi__jbias[n] &amp; (sgn - <span class="pl-c1">1</span>));</td>
        </tr>
        <tr>
          <td id="L2140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2140"></td>
          <td id="LC2140" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2141"></td>
          <td id="LC2141" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2142"></td>
          <td id="LC2142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> get some unsigned bits</span></td>
        </tr>
        <tr>
          <td id="L2143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2143"></td>
          <td id="LC2143" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_get_bits</span>(stbi__jpeg *j, <span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L2144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2144"></td>
          <td id="LC2144" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2145"></td>
          <td id="LC2145" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L2146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2146"></td>
          <td id="LC2146" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; n) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2147"></td>
          <td id="LC2147" class="blob-code blob-code-inner js-file-line">   k = <span class="pl-c1">stbi_lrot</span>(j-&gt;<span class="pl-smi">code_buffer</span>, n);</td>
        </tr>
        <tr>
          <td id="L2148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2148"></td>
          <td id="LC2148" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_buffer</span> = k &amp; ~stbi__bmask[n];</td>
        </tr>
        <tr>
          <td id="L2149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2149"></td>
          <td id="LC2149" class="blob-code blob-code-inner js-file-line">   k &amp;= stbi__bmask[n];</td>
        </tr>
        <tr>
          <td id="L2150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2150"></td>
          <td id="LC2150" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_bits</span> -= n;</td>
        </tr>
        <tr>
          <td id="L2151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2151"></td>
          <td id="LC2151" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> k;</td>
        </tr>
        <tr>
          <td id="L2152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2152"></td>
          <td id="LC2152" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2153"></td>
          <td id="LC2153" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2154"></td>
          <td id="LC2154" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_get_bit</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L2155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2155"></td>
          <td id="LC2155" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2156"></td>
          <td id="LC2156" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L2157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2157"></td>
          <td id="LC2157" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">1</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2158"></td>
          <td id="LC2158" class="blob-code blob-code-inner js-file-line">   k = j-&gt;<span class="pl-smi">code_buffer</span>;</td>
        </tr>
        <tr>
          <td id="L2159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2159"></td>
          <td id="LC2159" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_buffer</span> &lt;&lt;= <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2160"></td>
          <td id="LC2160" class="blob-code blob-code-inner js-file-line">   --j-&gt;<span class="pl-smi">code_bits</span>;</td>
        </tr>
        <tr>
          <td id="L2161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2161"></td>
          <td id="LC2161" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> k &amp; <span class="pl-c1">0x80000000</span>;</td>
        </tr>
        <tr>
          <td id="L2162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2162"></td>
          <td id="LC2162" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2163"></td>
          <td id="LC2163" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2164"></td>
          <td id="LC2164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> given a value that&#39;s at position X in the zigzag stream,</span></td>
        </tr>
        <tr>
          <td id="L2165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2165"></td>
          <td id="LC2165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> where does it appear in the 8x8 matrix coded as row-major?</span></td>
        </tr>
        <tr>
          <td id="L2166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2166"></td>
          <td id="LC2166" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> stbi_uc stbi__jpeg_dezigzag[<span class="pl-c1">64</span>+<span class="pl-c1">15</span>] =</td>
        </tr>
        <tr>
          <td id="L2167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2167"></td>
          <td id="LC2167" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2168"></td>
          <td id="LC2168" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">0</span>,  <span class="pl-c1">1</span>,  <span class="pl-c1">8</span>, <span class="pl-c1">16</span>,  <span class="pl-c1">9</span>,  <span class="pl-c1">2</span>,  <span class="pl-c1">3</span>, <span class="pl-c1">10</span>,</td>
        </tr>
        <tr>
          <td id="L2169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2169"></td>
          <td id="LC2169" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">17</span>, <span class="pl-c1">24</span>, <span class="pl-c1">32</span>, <span class="pl-c1">25</span>, <span class="pl-c1">18</span>, <span class="pl-c1">11</span>,  <span class="pl-c1">4</span>,  <span class="pl-c1">5</span>,</td>
        </tr>
        <tr>
          <td id="L2170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2170"></td>
          <td id="LC2170" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">12</span>, <span class="pl-c1">19</span>, <span class="pl-c1">26</span>, <span class="pl-c1">33</span>, <span class="pl-c1">40</span>, <span class="pl-c1">48</span>, <span class="pl-c1">41</span>, <span class="pl-c1">34</span>,</td>
        </tr>
        <tr>
          <td id="L2171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2171"></td>
          <td id="LC2171" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">27</span>, <span class="pl-c1">20</span>, <span class="pl-c1">13</span>,  <span class="pl-c1">6</span>,  <span class="pl-c1">7</span>, <span class="pl-c1">14</span>, <span class="pl-c1">21</span>, <span class="pl-c1">28</span>,</td>
        </tr>
        <tr>
          <td id="L2172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2172"></td>
          <td id="LC2172" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">35</span>, <span class="pl-c1">42</span>, <span class="pl-c1">49</span>, <span class="pl-c1">56</span>, <span class="pl-c1">57</span>, <span class="pl-c1">50</span>, <span class="pl-c1">43</span>, <span class="pl-c1">36</span>,</td>
        </tr>
        <tr>
          <td id="L2173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2173"></td>
          <td id="LC2173" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">29</span>, <span class="pl-c1">22</span>, <span class="pl-c1">15</span>, <span class="pl-c1">23</span>, <span class="pl-c1">30</span>, <span class="pl-c1">37</span>, <span class="pl-c1">44</span>, <span class="pl-c1">51</span>,</td>
        </tr>
        <tr>
          <td id="L2174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2174"></td>
          <td id="LC2174" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">58</span>, <span class="pl-c1">59</span>, <span class="pl-c1">52</span>, <span class="pl-c1">45</span>, <span class="pl-c1">38</span>, <span class="pl-c1">31</span>, <span class="pl-c1">39</span>, <span class="pl-c1">46</span>,</td>
        </tr>
        <tr>
          <td id="L2175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2175"></td>
          <td id="LC2175" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">53</span>, <span class="pl-c1">60</span>, <span class="pl-c1">61</span>, <span class="pl-c1">54</span>, <span class="pl-c1">47</span>, <span class="pl-c1">55</span>, <span class="pl-c1">62</span>, <span class="pl-c1">63</span>,</td>
        </tr>
        <tr>
          <td id="L2176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2176"></td>
          <td id="LC2176" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> let corrupt input sample past end</span></td>
        </tr>
        <tr>
          <td id="L2177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2177"></td>
          <td id="LC2177" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>,</td>
        </tr>
        <tr>
          <td id="L2178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2178"></td>
          <td id="LC2178" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span>, <span class="pl-c1">63</span></td>
        </tr>
        <tr>
          <td id="L2179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2179"></td>
          <td id="LC2179" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2180"></td>
          <td id="LC2180" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2181"></td>
          <td id="LC2181" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> decode one 64-entry block--</span></td>
        </tr>
        <tr>
          <td id="L2182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2182"></td>
          <td id="LC2182" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_decode_block</span>(stbi__jpeg *j, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, <span class="pl-k">int</span> b, stbi__uint16 *dequant)</td>
        </tr>
        <tr>
          <td id="L2183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2183"></td>
          <td id="LC2183" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2184"></td>
          <td id="LC2184" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> diff,dc,k;</td>
        </tr>
        <tr>
          <td id="L2185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2185"></td>
          <td id="LC2185" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> t;</td>
        </tr>
        <tr>
          <td id="L2186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2186"></td>
          <td id="LC2186" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2187"></td>
          <td id="LC2187" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">16</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2188"></td>
          <td id="LC2188" class="blob-code blob-code-inner js-file-line">   t = <span class="pl-c1">stbi__jpeg_huff_decode</span>(j, hdc);</td>
        </tr>
        <tr>
          <td id="L2189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2189"></td>
          <td id="LC2189" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (t &lt; <span class="pl-c1">0</span> || t &gt; <span class="pl-c1">15</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2190"></td>
          <td id="LC2190" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2191"></td>
          <td id="LC2191" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> 0 all the ac values now so we can do it 32-bits at a time</span></td>
        </tr>
        <tr>
          <td id="L2192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2192"></td>
          <td id="LC2192" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(data,<span class="pl-c1">0</span>,<span class="pl-c1">64</span>*<span class="pl-k">sizeof</span>(data[<span class="pl-c1">0</span>]));</td>
        </tr>
        <tr>
          <td id="L2193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2193"></td>
          <td id="LC2193" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2194"></td>
          <td id="LC2194" class="blob-code blob-code-inner js-file-line">   diff = t ? <span class="pl-c1">stbi__extend_receive</span>(j, t) : <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2195"></td>
          <td id="LC2195" class="blob-code blob-code-inner js-file-line">   dc = j-&gt;<span class="pl-smi">img_comp</span>[b].<span class="pl-smi">dc_pred</span> + diff;</td>
        </tr>
        <tr>
          <td id="L2196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2196"></td>
          <td id="LC2196" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">img_comp</span>[b].<span class="pl-smi">dc_pred</span> = dc;</td>
        </tr>
        <tr>
          <td id="L2197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2197"></td>
          <td id="LC2197" class="blob-code blob-code-inner js-file-line">   data[<span class="pl-c1">0</span>] = (<span class="pl-k">short</span>) (dc * dequant[<span class="pl-c1">0</span>]);</td>
        </tr>
        <tr>
          <td id="L2198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2198"></td>
          <td id="LC2198" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2199"></td>
          <td id="LC2199" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> decode AC components, see JPEG spec</span></td>
        </tr>
        <tr>
          <td id="L2200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2200"></td>
          <td id="LC2200" class="blob-code blob-code-inner js-file-line">   k = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2201"></td>
          <td id="LC2201" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L2202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2202"></td>
          <td id="LC2202" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">unsigned</span> <span class="pl-k">int</span> zig;</td>
        </tr>
        <tr>
          <td id="L2203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2203"></td>
          <td id="LC2203" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> c,r,s;</td>
        </tr>
        <tr>
          <td id="L2204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2204"></td>
          <td id="LC2204" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">16</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2205"></td>
          <td id="LC2205" class="blob-code blob-code-inner js-file-line">      c = (j-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt; (<span class="pl-c1">32</span> - FAST_BITS)) &amp; ((<span class="pl-c1">1</span> &lt;&lt; FAST_BITS)-<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2206"></td>
          <td id="LC2206" class="blob-code blob-code-inner js-file-line">      r = fac[c];</td>
        </tr>
        <tr>
          <td id="L2207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2207"></td>
          <td id="LC2207" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (r) { <span class="pl-c"><span class="pl-c">//</span> fast-AC path</span></td>
        </tr>
        <tr>
          <td id="L2208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2208"></td>
          <td id="LC2208" class="blob-code blob-code-inner js-file-line">         k += (r &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">15</span>; <span class="pl-c"><span class="pl-c">//</span> run</span></td>
        </tr>
        <tr>
          <td id="L2209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2209"></td>
          <td id="LC2209" class="blob-code blob-code-inner js-file-line">         s = r &amp; <span class="pl-c1">15</span>; <span class="pl-c"><span class="pl-c">//</span> combined length</span></td>
        </tr>
        <tr>
          <td id="L2210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2210"></td>
          <td id="LC2210" class="blob-code blob-code-inner js-file-line">         j-&gt;<span class="pl-smi">code_buffer</span> &lt;&lt;= s;</td>
        </tr>
        <tr>
          <td id="L2211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2211"></td>
          <td id="LC2211" class="blob-code blob-code-inner js-file-line">         j-&gt;<span class="pl-smi">code_bits</span> -= s;</td>
        </tr>
        <tr>
          <td id="L2212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2212"></td>
          <td id="LC2212" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> decode into unzigzag&#39;d location</span></td>
        </tr>
        <tr>
          <td id="L2213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2213"></td>
          <td id="LC2213" class="blob-code blob-code-inner js-file-line">         zig = stbi__jpeg_dezigzag[k++];</td>
        </tr>
        <tr>
          <td id="L2214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2214"></td>
          <td id="LC2214" class="blob-code blob-code-inner js-file-line">         data[zig] = (<span class="pl-k">short</span>) ((r &gt;&gt; <span class="pl-c1">8</span>) * dequant[zig]);</td>
        </tr>
        <tr>
          <td id="L2215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2215"></td>
          <td id="LC2215" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2216"></td>
          <td id="LC2216" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> rs = <span class="pl-c1">stbi__jpeg_huff_decode</span>(j, hac);</td>
        </tr>
        <tr>
          <td id="L2217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2217"></td>
          <td id="LC2217" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (rs &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2218"></td>
          <td id="LC2218" class="blob-code blob-code-inner js-file-line">         s = rs &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L2219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2219"></td>
          <td id="LC2219" class="blob-code blob-code-inner js-file-line">         r = rs &gt;&gt; <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L2220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2220"></td>
          <td id="LC2220" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (s == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2221"></td>
          <td id="LC2221" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (rs != <span class="pl-c1">0xf0</span>) <span class="pl-k">break</span>; <span class="pl-c"><span class="pl-c">//</span> end block</span></td>
        </tr>
        <tr>
          <td id="L2222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2222"></td>
          <td id="LC2222" class="blob-code blob-code-inner js-file-line">            k += <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L2223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2223"></td>
          <td id="LC2223" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2224"></td>
          <td id="LC2224" class="blob-code blob-code-inner js-file-line">            k += r;</td>
        </tr>
        <tr>
          <td id="L2225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2225"></td>
          <td id="LC2225" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> decode into unzigzag&#39;d location</span></td>
        </tr>
        <tr>
          <td id="L2226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2226"></td>
          <td id="LC2226" class="blob-code blob-code-inner js-file-line">            zig = stbi__jpeg_dezigzag[k++];</td>
        </tr>
        <tr>
          <td id="L2227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2227"></td>
          <td id="LC2227" class="blob-code blob-code-inner js-file-line">            data[zig] = (<span class="pl-k">short</span>) (<span class="pl-c1">stbi__extend_receive</span>(j,s) * dequant[zig]);</td>
        </tr>
        <tr>
          <td id="L2228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2228"></td>
          <td id="LC2228" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2229"></td>
          <td id="LC2229" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2230"></td>
          <td id="LC2230" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">while</span> (k &lt; <span class="pl-c1">64</span>);</td>
        </tr>
        <tr>
          <td id="L2231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2231"></td>
          <td id="LC2231" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2232"></td>
          <td id="LC2232" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2233"></td>
          <td id="LC2233" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2234"></td>
          <td id="LC2234" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_decode_block_prog_dc</span>(stbi__jpeg *j, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>], stbi__huffman *hdc, <span class="pl-k">int</span> b)</td>
        </tr>
        <tr>
          <td id="L2235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2235"></td>
          <td id="LC2235" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2236"></td>
          <td id="LC2236" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> diff,dc;</td>
        </tr>
        <tr>
          <td id="L2237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2237"></td>
          <td id="LC2237" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> t;</td>
        </tr>
        <tr>
          <td id="L2238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2238"></td>
          <td id="LC2238" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">spec_end</span> != <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t merge dc and ac<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2239"></td>
          <td id="LC2239" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2240"></td>
          <td id="LC2240" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">16</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2241"></td>
          <td id="LC2241" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2242"></td>
          <td id="LC2242" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">succ_high</span> == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2243"></td>
          <td id="LC2243" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> first scan for DC coefficient, must be first</span></td>
        </tr>
        <tr>
          <td id="L2244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2244"></td>
          <td id="LC2244" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memset</span>(data,<span class="pl-c1">0</span>,<span class="pl-c1">64</span>*<span class="pl-k">sizeof</span>(data[<span class="pl-c1">0</span>])); <span class="pl-c"><span class="pl-c">//</span> 0 all the ac values now</span></td>
        </tr>
        <tr>
          <td id="L2245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2245"></td>
          <td id="LC2245" class="blob-code blob-code-inner js-file-line">      t = <span class="pl-c1">stbi__jpeg_huff_decode</span>(j, hdc);</td>
        </tr>
        <tr>
          <td id="L2246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2246"></td>
          <td id="LC2246" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t &lt; <span class="pl-c1">0</span> || t &gt; <span class="pl-c1">15</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t merge dc and ac<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2247"></td>
          <td id="LC2247" class="blob-code blob-code-inner js-file-line">      diff = t ? <span class="pl-c1">stbi__extend_receive</span>(j, t) : <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2248"></td>
          <td id="LC2248" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2249"></td>
          <td id="LC2249" class="blob-code blob-code-inner js-file-line">      dc = j-&gt;<span class="pl-smi">img_comp</span>[b].<span class="pl-smi">dc_pred</span> + diff;</td>
        </tr>
        <tr>
          <td id="L2250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2250"></td>
          <td id="LC2250" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">img_comp</span>[b].<span class="pl-smi">dc_pred</span> = dc;</td>
        </tr>
        <tr>
          <td id="L2251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2251"></td>
          <td id="LC2251" class="blob-code blob-code-inner js-file-line">      data[<span class="pl-c1">0</span>] = (<span class="pl-k">short</span>) (dc * (<span class="pl-c1">1</span> &lt;&lt; j-&gt;<span class="pl-smi">succ_low</span>));</td>
        </tr>
        <tr>
          <td id="L2252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2252"></td>
          <td id="LC2252" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2253"></td>
          <td id="LC2253" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> refinement scan for DC coefficient</span></td>
        </tr>
        <tr>
          <td id="L2254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2254"></td>
          <td id="LC2254" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__jpeg_get_bit</span>(j))</td>
        </tr>
        <tr>
          <td id="L2255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2255"></td>
          <td id="LC2255" class="blob-code blob-code-inner js-file-line">         data[<span class="pl-c1">0</span>] += (<span class="pl-k">short</span>) (<span class="pl-c1">1</span> &lt;&lt; j-&gt;<span class="pl-smi">succ_low</span>);</td>
        </tr>
        <tr>
          <td id="L2256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2256"></td>
          <td id="LC2256" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2257"></td>
          <td id="LC2257" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2258"></td>
          <td id="LC2258" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2259"></td>
          <td id="LC2259" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2260"></td>
          <td id="LC2260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> @OPTIMIZE: store non-zigzagged during the decode passes,</span></td>
        </tr>
        <tr>
          <td id="L2261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2261"></td>
          <td id="LC2261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> and only de-zigzag when dequantizing</span></td>
        </tr>
        <tr>
          <td id="L2262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2262"></td>
          <td id="LC2262" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_decode_block_prog_ac</span>(stbi__jpeg *j, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>], stbi__huffman *hac, stbi__int16 *fac)</td>
        </tr>
        <tr>
          <td id="L2263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2263"></td>
          <td id="LC2263" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2264"></td>
          <td id="LC2264" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L2265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2265"></td>
          <td id="LC2265" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">spec_start</span> == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t merge dc and ac<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2266"></td>
          <td id="LC2266" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2267"></td>
          <td id="LC2267" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">succ_high</span> == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2268"></td>
          <td id="LC2268" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> shift = j-&gt;<span class="pl-smi">succ_low</span>;</td>
        </tr>
        <tr>
          <td id="L2269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2269"></td>
          <td id="LC2269" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2270"></td>
          <td id="LC2270" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">eob_run</span>) {</td>
        </tr>
        <tr>
          <td id="L2271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2271"></td>
          <td id="LC2271" class="blob-code blob-code-inner js-file-line">         --j-&gt;<span class="pl-smi">eob_run</span>;</td>
        </tr>
        <tr>
          <td id="L2272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2272"></td>
          <td id="LC2272" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2273"></td>
          <td id="LC2273" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2274"></td>
          <td id="LC2274" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2275"></td>
          <td id="LC2275" class="blob-code blob-code-inner js-file-line">      k = j-&gt;<span class="pl-smi">spec_start</span>;</td>
        </tr>
        <tr>
          <td id="L2276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2276"></td>
          <td id="LC2276" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L2277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2277"></td>
          <td id="LC2277" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">unsigned</span> <span class="pl-k">int</span> zig;</td>
        </tr>
        <tr>
          <td id="L2278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2278"></td>
          <td id="LC2278" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> c,r,s;</td>
        </tr>
        <tr>
          <td id="L2279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2279"></td>
          <td id="LC2279" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">16</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(j);</td>
        </tr>
        <tr>
          <td id="L2280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2280"></td>
          <td id="LC2280" class="blob-code blob-code-inner js-file-line">         c = (j-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt; (<span class="pl-c1">32</span> - FAST_BITS)) &amp; ((<span class="pl-c1">1</span> &lt;&lt; FAST_BITS)-<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2281"></td>
          <td id="LC2281" class="blob-code blob-code-inner js-file-line">         r = fac[c];</td>
        </tr>
        <tr>
          <td id="L2282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2282"></td>
          <td id="LC2282" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (r) { <span class="pl-c"><span class="pl-c">//</span> fast-AC path</span></td>
        </tr>
        <tr>
          <td id="L2283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2283"></td>
          <td id="LC2283" class="blob-code blob-code-inner js-file-line">            k += (r &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">15</span>; <span class="pl-c"><span class="pl-c">//</span> run</span></td>
        </tr>
        <tr>
          <td id="L2284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2284"></td>
          <td id="LC2284" class="blob-code blob-code-inner js-file-line">            s = r &amp; <span class="pl-c1">15</span>; <span class="pl-c"><span class="pl-c">//</span> combined length</span></td>
        </tr>
        <tr>
          <td id="L2285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2285"></td>
          <td id="LC2285" class="blob-code blob-code-inner js-file-line">            j-&gt;<span class="pl-smi">code_buffer</span> &lt;&lt;= s;</td>
        </tr>
        <tr>
          <td id="L2286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2286"></td>
          <td id="LC2286" class="blob-code blob-code-inner js-file-line">            j-&gt;<span class="pl-smi">code_bits</span> -= s;</td>
        </tr>
        <tr>
          <td id="L2287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2287"></td>
          <td id="LC2287" class="blob-code blob-code-inner js-file-line">            zig = stbi__jpeg_dezigzag[k++];</td>
        </tr>
        <tr>
          <td id="L2288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2288"></td>
          <td id="LC2288" class="blob-code blob-code-inner js-file-line">            data[zig] = (<span class="pl-k">short</span>) ((r &gt;&gt; <span class="pl-c1">8</span>) * (<span class="pl-c1">1</span> &lt;&lt; shift));</td>
        </tr>
        <tr>
          <td id="L2289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2289"></td>
          <td id="LC2289" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2290"></td>
          <td id="LC2290" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> rs = <span class="pl-c1">stbi__jpeg_huff_decode</span>(j, hac);</td>
        </tr>
        <tr>
          <td id="L2291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2291"></td>
          <td id="LC2291" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (rs &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2292"></td>
          <td id="LC2292" class="blob-code blob-code-inner js-file-line">            s = rs &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L2293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2293"></td>
          <td id="LC2293" class="blob-code blob-code-inner js-file-line">            r = rs &gt;&gt; <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L2294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2294"></td>
          <td id="LC2294" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (s == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2295"></td>
          <td id="LC2295" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (r &lt; <span class="pl-c1">15</span>) {</td>
        </tr>
        <tr>
          <td id="L2296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2296"></td>
          <td id="LC2296" class="blob-code blob-code-inner js-file-line">                  j-&gt;<span class="pl-smi">eob_run</span> = (<span class="pl-c1">1</span> &lt;&lt; r);</td>
        </tr>
        <tr>
          <td id="L2297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2297"></td>
          <td id="LC2297" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (r)</td>
        </tr>
        <tr>
          <td id="L2298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2298"></td>
          <td id="LC2298" class="blob-code blob-code-inner js-file-line">                     j-&gt;<span class="pl-smi">eob_run</span> += <span class="pl-c1">stbi__jpeg_get_bits</span>(j, r);</td>
        </tr>
        <tr>
          <td id="L2299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2299"></td>
          <td id="LC2299" class="blob-code blob-code-inner js-file-line">                  --j-&gt;<span class="pl-smi">eob_run</span>;</td>
        </tr>
        <tr>
          <td id="L2300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2300"></td>
          <td id="LC2300" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L2301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2301"></td>
          <td id="LC2301" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2302"></td>
          <td id="LC2302" class="blob-code blob-code-inner js-file-line">               k += <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L2303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2303"></td>
          <td id="LC2303" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2304"></td>
          <td id="LC2304" class="blob-code blob-code-inner js-file-line">               k += r;</td>
        </tr>
        <tr>
          <td id="L2305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2305"></td>
          <td id="LC2305" class="blob-code blob-code-inner js-file-line">               zig = stbi__jpeg_dezigzag[k++];</td>
        </tr>
        <tr>
          <td id="L2306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2306"></td>
          <td id="LC2306" class="blob-code blob-code-inner js-file-line">               data[zig] = (<span class="pl-k">short</span>) (<span class="pl-c1">stbi__extend_receive</span>(j,s) * (<span class="pl-c1">1</span> &lt;&lt; shift));</td>
        </tr>
        <tr>
          <td id="L2307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2307"></td>
          <td id="LC2307" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L2308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2308"></td>
          <td id="LC2308" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2309"></td>
          <td id="LC2309" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (k &lt;= j-&gt;<span class="pl-smi">spec_end</span>);</td>
        </tr>
        <tr>
          <td id="L2310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2310"></td>
          <td id="LC2310" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2311"></td>
          <td id="LC2311" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> refinement scan for these AC coefficients</span></td>
        </tr>
        <tr>
          <td id="L2312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2312"></td>
          <td id="LC2312" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2313"></td>
          <td id="LC2313" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">short</span> bit = (<span class="pl-k">short</span>) (<span class="pl-c1">1</span> &lt;&lt; j-&gt;<span class="pl-smi">succ_low</span>);</td>
        </tr>
        <tr>
          <td id="L2314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2314"></td>
          <td id="LC2314" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2315"></td>
          <td id="LC2315" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">eob_run</span>) {</td>
        </tr>
        <tr>
          <td id="L2316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2316"></td>
          <td id="LC2316" class="blob-code blob-code-inner js-file-line">         --j-&gt;<span class="pl-smi">eob_run</span>;</td>
        </tr>
        <tr>
          <td id="L2317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2317"></td>
          <td id="LC2317" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (k = j-&gt;<span class="pl-smi">spec_start</span>; k &lt;= j-&gt;<span class="pl-smi">spec_end</span>; ++k) {</td>
        </tr>
        <tr>
          <td id="L2318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2318"></td>
          <td id="LC2318" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">short</span> *p = &amp;data[stbi__jpeg_dezigzag[k]];</td>
        </tr>
        <tr>
          <td id="L2319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2319"></td>
          <td id="LC2319" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (*p != <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L2320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2320"></td>
          <td id="LC2320" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (<span class="pl-c1">stbi__jpeg_get_bit</span>(j))</td>
        </tr>
        <tr>
          <td id="L2321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2321"></td>
          <td id="LC2321" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> ((*p &amp; bit)==<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2322"></td>
          <td id="LC2322" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (*p &gt; <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L2323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2323"></td>
          <td id="LC2323" class="blob-code blob-code-inner js-file-line">                        *p += bit;</td>
        </tr>
        <tr>
          <td id="L2324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2324"></td>
          <td id="LC2324" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L2325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2325"></td>
          <td id="LC2325" class="blob-code blob-code-inner js-file-line">                        *p -= bit;</td>
        </tr>
        <tr>
          <td id="L2326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2326"></td>
          <td id="LC2326" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L2327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2327"></td>
          <td id="LC2327" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2328"></td>
          <td id="LC2328" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2329"></td>
          <td id="LC2329" class="blob-code blob-code-inner js-file-line">         k = j-&gt;<span class="pl-smi">spec_start</span>;</td>
        </tr>
        <tr>
          <td id="L2330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2330"></td>
          <td id="LC2330" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L2331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2331"></td>
          <td id="LC2331" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> r,s;</td>
        </tr>
        <tr>
          <td id="L2332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2332"></td>
          <td id="LC2332" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> rs = <span class="pl-c1">stbi__jpeg_huff_decode</span>(j, hac); <span class="pl-c"><span class="pl-c">//</span> @OPTIMIZE see if we can use the fast path here, advance-by-r is so slow, eh</span></td>
        </tr>
        <tr>
          <td id="L2333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2333"></td>
          <td id="LC2333" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (rs &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2334"></td>
          <td id="LC2334" class="blob-code blob-code-inner js-file-line">            s = rs &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L2335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2335"></td>
          <td id="LC2335" class="blob-code blob-code-inner js-file-line">            r = rs &gt;&gt; <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L2336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2336"></td>
          <td id="LC2336" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (s == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2337"></td>
          <td id="LC2337" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (r &lt; <span class="pl-c1">15</span>) {</td>
        </tr>
        <tr>
          <td id="L2338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2338"></td>
          <td id="LC2338" class="blob-code blob-code-inner js-file-line">                  j-&gt;<span class="pl-smi">eob_run</span> = (<span class="pl-c1">1</span> &lt;&lt; r) - <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2339"></td>
          <td id="LC2339" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (r)</td>
        </tr>
        <tr>
          <td id="L2340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2340"></td>
          <td id="LC2340" class="blob-code blob-code-inner js-file-line">                     j-&gt;<span class="pl-smi">eob_run</span> += <span class="pl-c1">stbi__jpeg_get_bits</span>(j, r);</td>
        </tr>
        <tr>
          <td id="L2341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2341"></td>
          <td id="LC2341" class="blob-code blob-code-inner js-file-line">                  r = <span class="pl-c1">64</span>; <span class="pl-c"><span class="pl-c">//</span> force end of block</span></td>
        </tr>
        <tr>
          <td id="L2342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2342"></td>
          <td id="LC2342" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2343"></td>
          <td id="LC2343" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> r=15 s=0 should write 16 0s, so we just do</span></td>
        </tr>
        <tr>
          <td id="L2344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2344"></td>
          <td id="LC2344" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> a run of 15 0s and then write s (which is 0),</span></td>
        </tr>
        <tr>
          <td id="L2345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2345"></td>
          <td id="LC2345" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> so we don&#39;t have to do anything special here</span></td>
        </tr>
        <tr>
          <td id="L2346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2346"></td>
          <td id="LC2346" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2347"></td>
          <td id="LC2347" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2348"></td>
          <td id="LC2348" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (s != <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2349"></td>
          <td id="LC2349" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> sign bit</span></td>
        </tr>
        <tr>
          <td id="L2350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2350"></td>
          <td id="LC2350" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (<span class="pl-c1">stbi__jpeg_get_bit</span>(j))</td>
        </tr>
        <tr>
          <td id="L2351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2351"></td>
          <td id="LC2351" class="blob-code blob-code-inner js-file-line">                  s = bit;</td>
        </tr>
        <tr>
          <td id="L2352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2352"></td>
          <td id="LC2352" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L2353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2353"></td>
          <td id="LC2353" class="blob-code blob-code-inner js-file-line">                  s = -bit;</td>
        </tr>
        <tr>
          <td id="L2354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2354"></td>
          <td id="LC2354" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L2355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2355"></td>
          <td id="LC2355" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2356"></td>
          <td id="LC2356" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> advance by r</span></td>
        </tr>
        <tr>
          <td id="L2357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2357"></td>
          <td id="LC2357" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (k &lt;= j-&gt;<span class="pl-smi">spec_end</span>) {</td>
        </tr>
        <tr>
          <td id="L2358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2358"></td>
          <td id="LC2358" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">short</span> *p = &amp;data[stbi__jpeg_dezigzag[k++]];</td>
        </tr>
        <tr>
          <td id="L2359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2359"></td>
          <td id="LC2359" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (*p != <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2360"></td>
          <td id="LC2360" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (<span class="pl-c1">stbi__jpeg_get_bit</span>(j))</td>
        </tr>
        <tr>
          <td id="L2361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2361"></td>
          <td id="LC2361" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> ((*p &amp; bit)==<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2362"></td>
          <td id="LC2362" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (*p &gt; <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L2363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2363"></td>
          <td id="LC2363" class="blob-code blob-code-inner js-file-line">                           *p += bit;</td>
        </tr>
        <tr>
          <td id="L2364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2364"></td>
          <td id="LC2364" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L2365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2365"></td>
          <td id="LC2365" class="blob-code blob-code-inner js-file-line">                           *p -= bit;</td>
        </tr>
        <tr>
          <td id="L2366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2366"></td>
          <td id="LC2366" class="blob-code blob-code-inner js-file-line">                     }</td>
        </tr>
        <tr>
          <td id="L2367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2367"></td>
          <td id="LC2367" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2368"></td>
          <td id="LC2368" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (r == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2369"></td>
          <td id="LC2369" class="blob-code blob-code-inner js-file-line">                     *p = (<span class="pl-k">short</span>) s;</td>
        </tr>
        <tr>
          <td id="L2370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2370"></td>
          <td id="LC2370" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L2371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2371"></td>
          <td id="LC2371" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L2372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2372"></td>
          <td id="LC2372" class="blob-code blob-code-inner js-file-line">                  --r;</td>
        </tr>
        <tr>
          <td id="L2373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2373"></td>
          <td id="LC2373" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2374"></td>
          <td id="LC2374" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L2375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2375"></td>
          <td id="LC2375" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">while</span> (k &lt;= j-&gt;<span class="pl-smi">spec_end</span>);</td>
        </tr>
        <tr>
          <td id="L2376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2376"></td>
          <td id="LC2376" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2377"></td>
          <td id="LC2377" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2378"></td>
          <td id="LC2378" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2379"></td>
          <td id="LC2379" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2380"></td>
          <td id="LC2380" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2381"></td>
          <td id="LC2381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> take a -128..127 value and stbi__clamp it and convert to 0..255</span></td>
        </tr>
        <tr>
          <td id="L2382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2382"></td>
          <td id="LC2382" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> stbi_uc <span class="pl-smi">stbi__clamp</span>(<span class="pl-k">int</span> x)</td>
        </tr>
        <tr>
          <td id="L2383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2383"></td>
          <td id="LC2383" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2384"></td>
          <td id="LC2384" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> trick to use a single test to catch both cases</span></td>
        </tr>
        <tr>
          <td id="L2385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2385"></td>
          <td id="LC2385" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span> <span class="pl-k">int</span>) x &gt; <span class="pl-c1">255</span>) {</td>
        </tr>
        <tr>
          <td id="L2386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2386"></td>
          <td id="LC2386" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2387"></td>
          <td id="LC2387" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x &gt; <span class="pl-c1">255</span>) <span class="pl-k">return</span> <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L2388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2388"></td>
          <td id="LC2388" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2389"></td>
          <td id="LC2389" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (stbi_uc) x;</td>
        </tr>
        <tr>
          <td id="L2390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2390"></td>
          <td id="LC2390" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2391"></td>
          <td id="LC2391" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2392"></td>
          <td id="LC2392" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__f2f</span>(<span class="pl-v">x</span>)  ((<span class="pl-k">int</span>) (((x) * <span class="pl-c1">4096</span> + <span class="pl-c1">0.5</span>)))</td>
        </tr>
        <tr>
          <td id="L2393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2393"></td>
          <td id="LC2393" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__fsh</span>(<span class="pl-v">x</span>)  ((x) * <span class="pl-c1">4096</span>)</td>
        </tr>
        <tr>
          <td id="L2394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2394"></td>
          <td id="LC2394" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2395"></td>
          <td id="LC2395" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> derived from jidctint -- DCT_ISLOW</span></td>
        </tr>
        <tr>
          <td id="L2396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2396"></td>
          <td id="LC2396" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__IDCT_1D</span>(<span class="pl-v">s0,s1,s2,s3,s4,s5,s6,s7</span>) \</td>
        </tr>
        <tr>
          <td id="L2397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2397"></td>
          <td id="LC2397" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> t0,t1,t2,t3,p1,p2,p3,p4,p5,x0,x1,x2,x3; \</td>
        </tr>
        <tr>
          <td id="L2398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2398"></td>
          <td id="LC2398" class="blob-code blob-code-inner js-file-line">   p2 = s2;                                    \</td>
        </tr>
        <tr>
          <td id="L2399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2399"></td>
          <td id="LC2399" class="blob-code blob-code-inner js-file-line">   p3 = s6;                                    \</td>
        </tr>
        <tr>
          <td id="L2400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2400"></td>
          <td id="LC2400" class="blob-code blob-code-inner js-file-line">   p1 = (p2+p3) * <span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">0</span>.<span class="pl-c1">5411961f</span>);       \</td>
        </tr>
        <tr>
          <td id="L2401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2401"></td>
          <td id="LC2401" class="blob-code blob-code-inner js-file-line">   t2 = p1 + p3*<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">847759065f</span>);      \</td>
        </tr>
        <tr>
          <td id="L2402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2402"></td>
          <td id="LC2402" class="blob-code blob-code-inner js-file-line">   t3 = p1 + p2*<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">0</span>.<span class="pl-c1">765366865f</span>);      \</td>
        </tr>
        <tr>
          <td id="L2403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2403"></td>
          <td id="LC2403" class="blob-code blob-code-inner js-file-line">   p2 = s0;                                    \</td>
        </tr>
        <tr>
          <td id="L2404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2404"></td>
          <td id="LC2404" class="blob-code blob-code-inner js-file-line">   p3 = s4;                                    \</td>
        </tr>
        <tr>
          <td id="L2405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2405"></td>
          <td id="LC2405" class="blob-code blob-code-inner js-file-line">   t0 = <span class="pl-c1">stbi__fsh</span>(p2+p3);                      \</td>
        </tr>
        <tr>
          <td id="L2406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2406"></td>
          <td id="LC2406" class="blob-code blob-code-inner js-file-line">   t1 = <span class="pl-c1">stbi__fsh</span>(p2-p3);                      \</td>
        </tr>
        <tr>
          <td id="L2407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2407"></td>
          <td id="LC2407" class="blob-code blob-code-inner js-file-line">   x0 = t0+t3;                                 \</td>
        </tr>
        <tr>
          <td id="L2408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2408"></td>
          <td id="LC2408" class="blob-code blob-code-inner js-file-line">   x3 = t0-t3;                                 \</td>
        </tr>
        <tr>
          <td id="L2409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2409"></td>
          <td id="LC2409" class="blob-code blob-code-inner js-file-line">   x1 = t1+t2;                                 \</td>
        </tr>
        <tr>
          <td id="L2410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2410"></td>
          <td id="LC2410" class="blob-code blob-code-inner js-file-line">   x2 = t1-t2;                                 \</td>
        </tr>
        <tr>
          <td id="L2411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2411"></td>
          <td id="LC2411" class="blob-code blob-code-inner js-file-line">   t0 = s7;                                    \</td>
        </tr>
        <tr>
          <td id="L2412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2412"></td>
          <td id="LC2412" class="blob-code blob-code-inner js-file-line">   t1 = s5;                                    \</td>
        </tr>
        <tr>
          <td id="L2413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2413"></td>
          <td id="LC2413" class="blob-code blob-code-inner js-file-line">   t2 = s3;                                    \</td>
        </tr>
        <tr>
          <td id="L2414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2414"></td>
          <td id="LC2414" class="blob-code blob-code-inner js-file-line">   t3 = s1;                                    \</td>
        </tr>
        <tr>
          <td id="L2415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2415"></td>
          <td id="LC2415" class="blob-code blob-code-inner js-file-line">   p3 = t0+t2;                                 \</td>
        </tr>
        <tr>
          <td id="L2416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2416"></td>
          <td id="LC2416" class="blob-code blob-code-inner js-file-line">   p4 = t1+t3;                                 \</td>
        </tr>
        <tr>
          <td id="L2417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2417"></td>
          <td id="LC2417" class="blob-code blob-code-inner js-file-line">   p1 = t0+t3;                                 \</td>
        </tr>
        <tr>
          <td id="L2418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2418"></td>
          <td id="LC2418" class="blob-code blob-code-inner js-file-line">   p2 = t1+t2;                                 \</td>
        </tr>
        <tr>
          <td id="L2419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2419"></td>
          <td id="LC2419" class="blob-code blob-code-inner js-file-line">   p5 = (p3+p4)*<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">1</span>.<span class="pl-c1">175875602f</span>);      \</td>
        </tr>
        <tr>
          <td id="L2420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2420"></td>
          <td id="LC2420" class="blob-code blob-code-inner js-file-line">   t0 = t0*<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">0</span>.<span class="pl-c1">298631336f</span>);           \</td>
        </tr>
        <tr>
          <td id="L2421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2421"></td>
          <td id="LC2421" class="blob-code blob-code-inner js-file-line">   t1 = t1*<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">2</span>.<span class="pl-c1">053119869f</span>);           \</td>
        </tr>
        <tr>
          <td id="L2422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2422"></td>
          <td id="LC2422" class="blob-code blob-code-inner js-file-line">   t2 = t2*<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">3</span>.<span class="pl-c1">072711026f</span>);           \</td>
        </tr>
        <tr>
          <td id="L2423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2423"></td>
          <td id="LC2423" class="blob-code blob-code-inner js-file-line">   t3 = t3*<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">1</span>.<span class="pl-c1">501321110f</span>);           \</td>
        </tr>
        <tr>
          <td id="L2424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2424"></td>
          <td id="LC2424" class="blob-code blob-code-inner js-file-line">   p1 = p5 + p1*<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">899976223f</span>);      \</td>
        </tr>
        <tr>
          <td id="L2425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2425"></td>
          <td id="LC2425" class="blob-code blob-code-inner js-file-line">   p2 = p5 + p2*<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">2</span>.<span class="pl-c1">562915447f</span>);      \</td>
        </tr>
        <tr>
          <td id="L2426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2426"></td>
          <td id="LC2426" class="blob-code blob-code-inner js-file-line">   p3 = p3*<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">961570560f</span>);           \</td>
        </tr>
        <tr>
          <td id="L2427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2427"></td>
          <td id="LC2427" class="blob-code blob-code-inner js-file-line">   p4 = p4*<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">390180644f</span>);           \</td>
        </tr>
        <tr>
          <td id="L2428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2428"></td>
          <td id="LC2428" class="blob-code blob-code-inner js-file-line">   t3 += p1+p4;                                \</td>
        </tr>
        <tr>
          <td id="L2429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2429"></td>
          <td id="LC2429" class="blob-code blob-code-inner js-file-line">   t2 += p2+p3;                                \</td>
        </tr>
        <tr>
          <td id="L2430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2430"></td>
          <td id="LC2430" class="blob-code blob-code-inner js-file-line">   t1 += p2+p4;                                \</td>
        </tr>
        <tr>
          <td id="L2431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2431"></td>
          <td id="LC2431" class="blob-code blob-code-inner js-file-line">   t0 += p1+p3;</td>
        </tr>
        <tr>
          <td id="L2432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2432"></td>
          <td id="LC2432" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2433"></td>
          <td id="LC2433" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__idct_block</span>(stbi_uc *out, <span class="pl-k">int</span> out_stride, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>])</td>
        </tr>
        <tr>
          <td id="L2434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2434"></td>
          <td id="LC2434" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2435"></td>
          <td id="LC2435" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,val[<span class="pl-c1">64</span>],*v=val;</td>
        </tr>
        <tr>
          <td id="L2436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2436"></td>
          <td id="LC2436" class="blob-code blob-code-inner js-file-line">   stbi_uc *o;</td>
        </tr>
        <tr>
          <td id="L2437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2437"></td>
          <td id="LC2437" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">short</span> *d = data;</td>
        </tr>
        <tr>
          <td id="L2438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2438"></td>
          <td id="LC2438" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2439"></td>
          <td id="LC2439" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> columns</span></td>
        </tr>
        <tr>
          <td id="L2440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2440"></td>
          <td id="LC2440" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">8</span>; ++i,++d, ++v) {</td>
        </tr>
        <tr>
          <td id="L2441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2441"></td>
          <td id="LC2441" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> if all zeroes, shortcut -- this avoids dequantizing 0s and IDCTing</span></td>
        </tr>
        <tr>
          <td id="L2442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2442"></td>
          <td id="LC2442" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (d[ <span class="pl-c1">8</span>]==<span class="pl-c1">0</span> &amp;&amp; d[<span class="pl-c1">16</span>]==<span class="pl-c1">0</span> &amp;&amp; d[<span class="pl-c1">24</span>]==<span class="pl-c1">0</span> &amp;&amp; d[<span class="pl-c1">32</span>]==<span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L2443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2443"></td>
          <td id="LC2443" class="blob-code blob-code-inner js-file-line">           &amp;&amp; d[<span class="pl-c1">40</span>]==<span class="pl-c1">0</span> &amp;&amp; d[<span class="pl-c1">48</span>]==<span class="pl-c1">0</span> &amp;&amp; d[<span class="pl-c1">56</span>]==<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2444"></td>
          <td id="LC2444" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>    no shortcut                 0     seconds</span></td>
        </tr>
        <tr>
          <td id="L2445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2445"></td>
          <td id="LC2445" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>    (1|2|3|4|5|6|7)==0          0     seconds</span></td>
        </tr>
        <tr>
          <td id="L2446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2446"></td>
          <td id="LC2446" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>    all separate               -0.047 seconds</span></td>
        </tr>
        <tr>
          <td id="L2447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2447"></td>
          <td id="LC2447" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>    1 &amp;&amp; 2|3 &amp;&amp; 4|5 &amp;&amp; 6|7:    -0.047 seconds</span></td>
        </tr>
        <tr>
          <td id="L2448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2448"></td>
          <td id="LC2448" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> dcterm = d[<span class="pl-c1">0</span>]*<span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L2449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2449"></td>
          <td id="LC2449" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">0</span>] = v[<span class="pl-c1">8</span>] = v[<span class="pl-c1">16</span>] = v[<span class="pl-c1">24</span>] = v[<span class="pl-c1">32</span>] = v[<span class="pl-c1">40</span>] = v[<span class="pl-c1">48</span>] = v[<span class="pl-c1">56</span>] = dcterm;</td>
        </tr>
        <tr>
          <td id="L2450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2450"></td>
          <td id="LC2450" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2451"></td>
          <td id="LC2451" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI__IDCT_1D</span>(d[ <span class="pl-c1">0</span>],d[ <span class="pl-c1">8</span>],d[<span class="pl-c1">16</span>],d[<span class="pl-c1">24</span>],d[<span class="pl-c1">32</span>],d[<span class="pl-c1">40</span>],d[<span class="pl-c1">48</span>],d[<span class="pl-c1">56</span>])</td>
        </tr>
        <tr>
          <td id="L2452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2452"></td>
          <td id="LC2452" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> constants scaled things up by 1&lt;&lt;12; let&#39;s bring them back</span></td>
        </tr>
        <tr>
          <td id="L2453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2453"></td>
          <td id="LC2453" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> down, but keep 2 extra bits of precision</span></td>
        </tr>
        <tr>
          <td id="L2454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2454"></td>
          <td id="LC2454" class="blob-code blob-code-inner js-file-line">         x0 += <span class="pl-c1">512</span>; x1 += <span class="pl-c1">512</span>; x2 += <span class="pl-c1">512</span>; x3 += <span class="pl-c1">512</span>;</td>
        </tr>
        <tr>
          <td id="L2455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2455"></td>
          <td id="LC2455" class="blob-code blob-code-inner js-file-line">         v[ <span class="pl-c1">0</span>] = (x0+t3) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2456"></td>
          <td id="LC2456" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">56</span>] = (x0-t3) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2457"></td>
          <td id="LC2457" class="blob-code blob-code-inner js-file-line">         v[ <span class="pl-c1">8</span>] = (x1+t2) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2458"></td>
          <td id="LC2458" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">48</span>] = (x1-t2) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2459"></td>
          <td id="LC2459" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">16</span>] = (x2+t1) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2460"></td>
          <td id="LC2460" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">40</span>] = (x2-t1) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2461"></td>
          <td id="LC2461" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">24</span>] = (x3+t0) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2462"></td>
          <td id="LC2462" class="blob-code blob-code-inner js-file-line">         v[<span class="pl-c1">32</span>] = (x3-t0) &gt;&gt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L2463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2463"></td>
          <td id="LC2463" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2464"></td>
          <td id="LC2464" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2465"></td>
          <td id="LC2465" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2466"></td>
          <td id="LC2466" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>, v=val, o=out; i &lt; <span class="pl-c1">8</span>; ++i,v+=<span class="pl-c1">8</span>,o+=out_stride) {</td>
        </tr>
        <tr>
          <td id="L2467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2467"></td>
          <td id="LC2467" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> no fast case since the first 1D IDCT spread components out</span></td>
        </tr>
        <tr>
          <td id="L2468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2468"></td>
          <td id="LC2468" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI__IDCT_1D</span>(v[<span class="pl-c1">0</span>],v[<span class="pl-c1">1</span>],v[<span class="pl-c1">2</span>],v[<span class="pl-c1">3</span>],v[<span class="pl-c1">4</span>],v[<span class="pl-c1">5</span>],v[<span class="pl-c1">6</span>],v[<span class="pl-c1">7</span>])</td>
        </tr>
        <tr>
          <td id="L2469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2469"></td>
          <td id="LC2469" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> constants scaled things up by 1&lt;&lt;12, plus we had 1&lt;&lt;2 from first</span></td>
        </tr>
        <tr>
          <td id="L2470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2470"></td>
          <td id="LC2470" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> loop, plus horizontal and vertical each scale by sqrt(8) so together</span></td>
        </tr>
        <tr>
          <td id="L2471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2471"></td>
          <td id="LC2471" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> we&#39;ve got an extra 1&lt;&lt;3, so 1&lt;&lt;17 total we need to remove.</span></td>
        </tr>
        <tr>
          <td id="L2472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2472"></td>
          <td id="LC2472" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> so we want to round that, which means adding 0.5 * 1&lt;&lt;17,</span></td>
        </tr>
        <tr>
          <td id="L2473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2473"></td>
          <td id="LC2473" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> aka 65536. Also, we&#39;ll end up with -128 to 127 that we want</span></td>
        </tr>
        <tr>
          <td id="L2474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2474"></td>
          <td id="LC2474" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> to encode as 0..255 by adding 128, so we&#39;ll add that before the shift</span></td>
        </tr>
        <tr>
          <td id="L2475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2475"></td>
          <td id="LC2475" class="blob-code blob-code-inner js-file-line">      x0 += <span class="pl-c1">65536</span> + (<span class="pl-c1">128</span>&lt;&lt;<span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2476"></td>
          <td id="LC2476" class="blob-code blob-code-inner js-file-line">      x1 += <span class="pl-c1">65536</span> + (<span class="pl-c1">128</span>&lt;&lt;<span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2477"></td>
          <td id="LC2477" class="blob-code blob-code-inner js-file-line">      x2 += <span class="pl-c1">65536</span> + (<span class="pl-c1">128</span>&lt;&lt;<span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2478"></td>
          <td id="LC2478" class="blob-code blob-code-inner js-file-line">      x3 += <span class="pl-c1">65536</span> + (<span class="pl-c1">128</span>&lt;&lt;<span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2479"></td>
          <td id="LC2479" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> tried computing the shifts into temps, or&#39;ing the temps to see</span></td>
        </tr>
        <tr>
          <td id="L2480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2480"></td>
          <td id="LC2480" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> if any were out of range, but that was slower</span></td>
        </tr>
        <tr>
          <td id="L2481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2481"></td>
          <td id="LC2481" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__clamp</span>((x0+t3) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2482"></td>
          <td id="LC2482" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">7</span>] = <span class="pl-c1">stbi__clamp</span>((x0-t3) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2483"></td>
          <td id="LC2483" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__clamp</span>((x1+t2) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2484"></td>
          <td id="LC2484" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">6</span>] = <span class="pl-c1">stbi__clamp</span>((x1-t2) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2485"></td>
          <td id="LC2485" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__clamp</span>((x2+t1) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2486"></td>
          <td id="LC2486" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">5</span>] = <span class="pl-c1">stbi__clamp</span>((x2-t1) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2487"></td>
          <td id="LC2487" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">3</span>] = <span class="pl-c1">stbi__clamp</span>((x3+t0) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2488"></td>
          <td id="LC2488" class="blob-code blob-code-inner js-file-line">      o[<span class="pl-c1">4</span>] = <span class="pl-c1">stbi__clamp</span>((x3-t0) &gt;&gt; <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2489"></td>
          <td id="LC2489" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2490"></td>
          <td id="LC2490" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2491"></td>
          <td id="LC2491" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2492"></td>
          <td id="LC2492" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_SSE2</td>
        </tr>
        <tr>
          <td id="L2493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2493"></td>
          <td id="LC2493" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> sse2 integer IDCT. not the fastest possible implementation but it</span></td>
        </tr>
        <tr>
          <td id="L2494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2494"></td>
          <td id="LC2494" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> produces bit-identical results to the generic C version so it&#39;s</span></td>
        </tr>
        <tr>
          <td id="L2495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2495"></td>
          <td id="LC2495" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> fully &quot;transparent&quot;.</span></td>
        </tr>
        <tr>
          <td id="L2496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2496"></td>
          <td id="LC2496" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__idct_simd</span>(stbi_uc *out, <span class="pl-k">int</span> out_stride, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>])</td>
        </tr>
        <tr>
          <td id="L2497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2497"></td>
          <td id="LC2497" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2498"></td>
          <td id="LC2498" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> This is constructed to match our regular (generic) integer IDCT exactly.</span></td>
        </tr>
        <tr>
          <td id="L2499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2499"></td>
          <td id="LC2499" class="blob-code blob-code-inner js-file-line">   __m128i row0, row1, row2, row3, row4, row5, row6, row7;</td>
        </tr>
        <tr>
          <td id="L2500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2500"></td>
          <td id="LC2500" class="blob-code blob-code-inner js-file-line">   __m128i tmp;</td>
        </tr>
        <tr>
          <td id="L2501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2501"></td>
          <td id="LC2501" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2502"></td>
          <td id="LC2502" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> dot product constant: even elems=x, odd elems=y</span></td>
        </tr>
        <tr>
          <td id="L2503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2503"></td>
          <td id="LC2503" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_const</span>(<span class="pl-v">x,y</span>)  _mm_setr_epi16((x),(y),(x),(y),(x),(y),(x),(y))</td>
        </tr>
        <tr>
          <td id="L2504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2504"></td>
          <td id="LC2504" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2505"></td>
          <td id="LC2505" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> out(0) = c0[even]*x + c0[odd]*y   (c0, x, y 16-bit, out 32-bit)</span></td>
        </tr>
        <tr>
          <td id="L2506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2506"></td>
          <td id="LC2506" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> out(1) = c1[even]*x + c1[odd]*y</span></td>
        </tr>
        <tr>
          <td id="L2507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2507"></td>
          <td id="LC2507" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_rot</span>(<span class="pl-v">out0,out1, x,y,c0,c1</span>) \</td>
        </tr>
        <tr>
          <td id="L2508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2508"></td>
          <td id="LC2508" class="blob-code blob-code-inner js-file-line">      __m128i c0##lo = <span class="pl-c1">_mm_unpacklo_epi16</span>((x),(y)); \</td>
        </tr>
        <tr>
          <td id="L2509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2509"></td>
          <td id="LC2509" class="blob-code blob-code-inner js-file-line">      __m128i c0##hi = <span class="pl-c1">_mm_unpackhi_epi16</span>((x),(y)); \</td>
        </tr>
        <tr>
          <td id="L2510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2510"></td>
          <td id="LC2510" class="blob-code blob-code-inner js-file-line">      __m128i out0##_l = <span class="pl-c1">_mm_madd_epi16</span>(c0##lo, c0); \</td>
        </tr>
        <tr>
          <td id="L2511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2511"></td>
          <td id="LC2511" class="blob-code blob-code-inner js-file-line">      __m128i out0##_h = <span class="pl-c1">_mm_madd_epi16</span>(c0##hi, c0); \</td>
        </tr>
        <tr>
          <td id="L2512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2512"></td>
          <td id="LC2512" class="blob-code blob-code-inner js-file-line">      __m128i out1##_l = <span class="pl-c1">_mm_madd_epi16</span>(c0##lo, c1); \</td>
        </tr>
        <tr>
          <td id="L2513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2513"></td>
          <td id="LC2513" class="blob-code blob-code-inner js-file-line">      __m128i out1##_h = <span class="pl-c1">_mm_madd_epi16</span>(c0##hi, c1)</td>
        </tr>
        <tr>
          <td id="L2514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2514"></td>
          <td id="LC2514" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2515"></td>
          <td id="LC2515" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> out = in &lt;&lt; 12  (in 16-bit, out 32-bit)</span></td>
        </tr>
        <tr>
          <td id="L2516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2516"></td>
          <td id="LC2516" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_widen</span>(<span class="pl-v">out, in</span>) \</td>
        </tr>
        <tr>
          <td id="L2517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2517"></td>
          <td id="LC2517" class="blob-code blob-code-inner js-file-line">      __m128i out##_l = <span class="pl-c1">_mm_srai_epi32</span>(<span class="pl-c1">_mm_unpacklo_epi16</span>(<span class="pl-c1">_mm_setzero_si128</span>(), (in)), <span class="pl-c1">4</span>); \</td>
        </tr>
        <tr>
          <td id="L2518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2518"></td>
          <td id="LC2518" class="blob-code blob-code-inner js-file-line">      __m128i out##_h = <span class="pl-c1">_mm_srai_epi32</span>(<span class="pl-c1">_mm_unpackhi_epi16</span>(<span class="pl-c1">_mm_setzero_si128</span>(), (in)), <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L2519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2519"></td>
          <td id="LC2519" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2520"></td>
          <td id="LC2520" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> wide add</span></td>
        </tr>
        <tr>
          <td id="L2521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2521"></td>
          <td id="LC2521" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_wadd</span>(<span class="pl-v">out, a, b</span>) \</td>
        </tr>
        <tr>
          <td id="L2522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2522"></td>
          <td id="LC2522" class="blob-code blob-code-inner js-file-line">      __m128i out##_l = <span class="pl-c1">_mm_add_epi32</span>(a##_l, b##_l); \</td>
        </tr>
        <tr>
          <td id="L2523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2523"></td>
          <td id="LC2523" class="blob-code blob-code-inner js-file-line">      __m128i out##_h = <span class="pl-c1">_mm_add_epi32</span>(a##_h, b##_h)</td>
        </tr>
        <tr>
          <td id="L2524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2524"></td>
          <td id="LC2524" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2525"></td>
          <td id="LC2525" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> wide sub</span></td>
        </tr>
        <tr>
          <td id="L2526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2526"></td>
          <td id="LC2526" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_wsub</span>(<span class="pl-v">out, a, b</span>) \</td>
        </tr>
        <tr>
          <td id="L2527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2527"></td>
          <td id="LC2527" class="blob-code blob-code-inner js-file-line">      __m128i out##_l = <span class="pl-c1">_mm_sub_epi32</span>(a##_l, b##_l); \</td>
        </tr>
        <tr>
          <td id="L2528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2528"></td>
          <td id="LC2528" class="blob-code blob-code-inner js-file-line">      __m128i out##_h = <span class="pl-c1">_mm_sub_epi32</span>(a##_h, b##_h)</td>
        </tr>
        <tr>
          <td id="L2529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2529"></td>
          <td id="LC2529" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2530"></td>
          <td id="LC2530" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> butterfly a/b, add bias, then shift by &quot;s&quot; and pack</span></td>
        </tr>
        <tr>
          <td id="L2531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2531"></td>
          <td id="LC2531" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_bfly32o</span>(<span class="pl-v">out0, out1, a,b,bias,s</span>) \</td>
        </tr>
        <tr>
          <td id="L2532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2532"></td>
          <td id="LC2532" class="blob-code blob-code-inner js-file-line">      { \</td>
        </tr>
        <tr>
          <td id="L2533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2533"></td>
          <td id="LC2533" class="blob-code blob-code-inner js-file-line">         __m128i abiased_l = <span class="pl-c1">_mm_add_epi32</span>(a##_l, bias); \</td>
        </tr>
        <tr>
          <td id="L2534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2534"></td>
          <td id="LC2534" class="blob-code blob-code-inner js-file-line">         __m128i abiased_h = <span class="pl-c1">_mm_add_epi32</span>(a##_h, bias); \</td>
        </tr>
        <tr>
          <td id="L2535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2535"></td>
          <td id="LC2535" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(sum, abiased, b); \</td>
        </tr>
        <tr>
          <td id="L2536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2536"></td>
          <td id="LC2536" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wsub</span>(dif, abiased, b); \</td>
        </tr>
        <tr>
          <td id="L2537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2537"></td>
          <td id="LC2537" class="blob-code blob-code-inner js-file-line">         out0 = <span class="pl-c1">_mm_packs_epi32</span>(<span class="pl-c1">_mm_srai_epi32</span>(sum_l, s), <span class="pl-c1">_mm_srai_epi32</span>(sum_h, s)); \</td>
        </tr>
        <tr>
          <td id="L2538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2538"></td>
          <td id="LC2538" class="blob-code blob-code-inner js-file-line">         out1 = <span class="pl-c1">_mm_packs_epi32</span>(<span class="pl-c1">_mm_srai_epi32</span>(dif_l, s), <span class="pl-c1">_mm_srai_epi32</span>(dif_h, s)); \</td>
        </tr>
        <tr>
          <td id="L2539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2539"></td>
          <td id="LC2539" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2540"></td>
          <td id="LC2540" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2541"></td>
          <td id="LC2541" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> 8-bit interleave step (for transposes)</span></td>
        </tr>
        <tr>
          <td id="L2542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2542"></td>
          <td id="LC2542" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_interleave8</span>(<span class="pl-v">a, b</span>) \</td>
        </tr>
        <tr>
          <td id="L2543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2543"></td>
          <td id="LC2543" class="blob-code blob-code-inner js-file-line">      tmp = a; \</td>
        </tr>
        <tr>
          <td id="L2544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2544"></td>
          <td id="LC2544" class="blob-code blob-code-inner js-file-line">      a = <span class="pl-c1">_mm_unpacklo_epi8</span>(a, b); \</td>
        </tr>
        <tr>
          <td id="L2545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2545"></td>
          <td id="LC2545" class="blob-code blob-code-inner js-file-line">      b = <span class="pl-c1">_mm_unpackhi_epi8</span>(tmp, b)</td>
        </tr>
        <tr>
          <td id="L2546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2546"></td>
          <td id="LC2546" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2547"></td>
          <td id="LC2547" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> 16-bit interleave step (for transposes)</span></td>
        </tr>
        <tr>
          <td id="L2548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2548"></td>
          <td id="LC2548" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_interleave16</span>(<span class="pl-v">a, b</span>) \</td>
        </tr>
        <tr>
          <td id="L2549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2549"></td>
          <td id="LC2549" class="blob-code blob-code-inner js-file-line">      tmp = a; \</td>
        </tr>
        <tr>
          <td id="L2550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2550"></td>
          <td id="LC2550" class="blob-code blob-code-inner js-file-line">      a = <span class="pl-c1">_mm_unpacklo_epi16</span>(a, b); \</td>
        </tr>
        <tr>
          <td id="L2551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2551"></td>
          <td id="LC2551" class="blob-code blob-code-inner js-file-line">      b = <span class="pl-c1">_mm_unpackhi_epi16</span>(tmp, b)</td>
        </tr>
        <tr>
          <td id="L2552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2552"></td>
          <td id="LC2552" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2553"></td>
          <td id="LC2553" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">define</span> <span class="pl-en">dct_pass</span>(<span class="pl-v">bias,shift</span>) \</td>
        </tr>
        <tr>
          <td id="L2554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2554"></td>
          <td id="LC2554" class="blob-code blob-code-inner js-file-line">      { \</td>
        </tr>
        <tr>
          <td id="L2555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2555"></td>
          <td id="LC2555" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">/*</span> even part <span class="pl-c">*/</span></span> \</td>
        </tr>
        <tr>
          <td id="L2556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2556"></td>
          <td id="LC2556" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_rot</span>(t2e,t3e, row2,row6, rot0_0,rot0_1); \</td>
        </tr>
        <tr>
          <td id="L2557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2557"></td>
          <td id="LC2557" class="blob-code blob-code-inner js-file-line">         __m128i sum04 = <span class="pl-c1">_mm_add_epi16</span>(row0, row4); \</td>
        </tr>
        <tr>
          <td id="L2558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2558"></td>
          <td id="LC2558" class="blob-code blob-code-inner js-file-line">         __m128i dif04 = <span class="pl-c1">_mm_sub_epi16</span>(row0, row4); \</td>
        </tr>
        <tr>
          <td id="L2559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2559"></td>
          <td id="LC2559" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_widen</span>(t0e, sum04); \</td>
        </tr>
        <tr>
          <td id="L2560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2560"></td>
          <td id="LC2560" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_widen</span>(t1e, dif04); \</td>
        </tr>
        <tr>
          <td id="L2561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2561"></td>
          <td id="LC2561" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(x0, t0e, t3e); \</td>
        </tr>
        <tr>
          <td id="L2562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2562"></td>
          <td id="LC2562" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wsub</span>(x3, t0e, t3e); \</td>
        </tr>
        <tr>
          <td id="L2563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2563"></td>
          <td id="LC2563" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(x1, t1e, t2e); \</td>
        </tr>
        <tr>
          <td id="L2564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2564"></td>
          <td id="LC2564" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wsub</span>(x2, t1e, t2e); \</td>
        </tr>
        <tr>
          <td id="L2565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2565"></td>
          <td id="LC2565" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">/*</span> odd part <span class="pl-c">*/</span></span> \</td>
        </tr>
        <tr>
          <td id="L2566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2566"></td>
          <td id="LC2566" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_rot</span>(y0o,y2o, row7,row3, rot2_0,rot2_1); \</td>
        </tr>
        <tr>
          <td id="L2567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2567"></td>
          <td id="LC2567" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_rot</span>(y1o,y3o, row5,row1, rot3_0,rot3_1); \</td>
        </tr>
        <tr>
          <td id="L2568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2568"></td>
          <td id="LC2568" class="blob-code blob-code-inner js-file-line">         __m128i sum17 = <span class="pl-c1">_mm_add_epi16</span>(row1, row7); \</td>
        </tr>
        <tr>
          <td id="L2569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2569"></td>
          <td id="LC2569" class="blob-code blob-code-inner js-file-line">         __m128i sum35 = <span class="pl-c1">_mm_add_epi16</span>(row3, row5); \</td>
        </tr>
        <tr>
          <td id="L2570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2570"></td>
          <td id="LC2570" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_rot</span>(y4o,y5o, sum17,sum35, rot1_0,rot1_1); \</td>
        </tr>
        <tr>
          <td id="L2571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2571"></td>
          <td id="LC2571" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(x4, y0o, y4o); \</td>
        </tr>
        <tr>
          <td id="L2572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2572"></td>
          <td id="LC2572" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(x5, y1o, y5o); \</td>
        </tr>
        <tr>
          <td id="L2573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2573"></td>
          <td id="LC2573" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(x6, y2o, y5o); \</td>
        </tr>
        <tr>
          <td id="L2574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2574"></td>
          <td id="LC2574" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_wadd</span>(x7, y3o, y4o); \</td>
        </tr>
        <tr>
          <td id="L2575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2575"></td>
          <td id="LC2575" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_bfly32o</span>(row0,row7, x0,x7,bias,shift); \</td>
        </tr>
        <tr>
          <td id="L2576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2576"></td>
          <td id="LC2576" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_bfly32o</span>(row1,row6, x1,x6,bias,shift); \</td>
        </tr>
        <tr>
          <td id="L2577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2577"></td>
          <td id="LC2577" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_bfly32o</span>(row2,row5, x2,x5,bias,shift); \</td>
        </tr>
        <tr>
          <td id="L2578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2578"></td>
          <td id="LC2578" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">dct_bfly32o</span>(row3,row4, x3,x4,bias,shift); \</td>
        </tr>
        <tr>
          <td id="L2579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2579"></td>
          <td id="LC2579" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2580"></td>
          <td id="LC2580" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2581"></td>
          <td id="LC2581" class="blob-code blob-code-inner js-file-line">   __m128i rot0_0 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">0</span>.<span class="pl-c1">5411961f</span>), <span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">0</span>.<span class="pl-c1">5411961f</span>) + <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">847759065f</span>));</td>
        </tr>
        <tr>
          <td id="L2582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2582"></td>
          <td id="LC2582" class="blob-code blob-code-inner js-file-line">   __m128i rot0_1 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">0</span>.<span class="pl-c1">5411961f</span>) + <span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">0</span>.<span class="pl-c1">765366865f</span>), <span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">0</span>.<span class="pl-c1">5411961f</span>));</td>
        </tr>
        <tr>
          <td id="L2583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2583"></td>
          <td id="LC2583" class="blob-code blob-code-inner js-file-line">   __m128i rot1_0 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">1</span>.<span class="pl-c1">175875602f</span>) + <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">899976223f</span>), <span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">1</span>.<span class="pl-c1">175875602f</span>));</td>
        </tr>
        <tr>
          <td id="L2584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2584"></td>
          <td id="LC2584" class="blob-code blob-code-inner js-file-line">   __m128i rot1_1 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">1</span>.<span class="pl-c1">175875602f</span>), <span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">1</span>.<span class="pl-c1">175875602f</span>) + <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">2</span>.<span class="pl-c1">562915447f</span>));</td>
        </tr>
        <tr>
          <td id="L2585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2585"></td>
          <td id="LC2585" class="blob-code blob-code-inner js-file-line">   __m128i rot2_0 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">961570560f</span>) + <span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">0</span>.<span class="pl-c1">298631336f</span>), <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">961570560f</span>));</td>
        </tr>
        <tr>
          <td id="L2586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2586"></td>
          <td id="LC2586" class="blob-code blob-code-inner js-file-line">   __m128i rot2_1 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">961570560f</span>), <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">961570560f</span>) + <span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">3</span>.<span class="pl-c1">072711026f</span>));</td>
        </tr>
        <tr>
          <td id="L2587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2587"></td>
          <td id="LC2587" class="blob-code blob-code-inner js-file-line">   __m128i rot3_0 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">390180644f</span>) + <span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">2</span>.<span class="pl-c1">053119869f</span>), <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">390180644f</span>));</td>
        </tr>
        <tr>
          <td id="L2588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2588"></td>
          <td id="LC2588" class="blob-code blob-code-inner js-file-line">   __m128i rot3_1 = <span class="pl-c1">dct_const</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">390180644f</span>), <span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">390180644f</span>) + <span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">1</span>.<span class="pl-c1">501321110f</span>));</td>
        </tr>
        <tr>
          <td id="L2589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2589"></td>
          <td id="LC2589" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2590"></td>
          <td id="LC2590" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> rounding biases in column/row passes, see stbi__idct_block for explanation.</span></td>
        </tr>
        <tr>
          <td id="L2591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2591"></td>
          <td id="LC2591" class="blob-code blob-code-inner js-file-line">   __m128i bias_0 = <span class="pl-c1">_mm_set1_epi32</span>(<span class="pl-c1">512</span>);</td>
        </tr>
        <tr>
          <td id="L2592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2592"></td>
          <td id="LC2592" class="blob-code blob-code-inner js-file-line">   __m128i bias_1 = <span class="pl-c1">_mm_set1_epi32</span>(<span class="pl-c1">65536</span> + (<span class="pl-c1">128</span>&lt;&lt;<span class="pl-c1">17</span>));</td>
        </tr>
        <tr>
          <td id="L2593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2593"></td>
          <td id="LC2593" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2594"></td>
          <td id="LC2594" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> load</span></td>
        </tr>
        <tr>
          <td id="L2595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2595"></td>
          <td id="LC2595" class="blob-code blob-code-inner js-file-line">   row0 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">0</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2596"></td>
          <td id="LC2596" class="blob-code blob-code-inner js-file-line">   row1 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">1</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2597"></td>
          <td id="LC2597" class="blob-code blob-code-inner js-file-line">   row2 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">2</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2598"></td>
          <td id="LC2598" class="blob-code blob-code-inner js-file-line">   row3 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">3</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2599"></td>
          <td id="LC2599" class="blob-code blob-code-inner js-file-line">   row4 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">4</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2600"></td>
          <td id="LC2600" class="blob-code blob-code-inner js-file-line">   row5 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">5</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2601"></td>
          <td id="LC2601" class="blob-code blob-code-inner js-file-line">   row6 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">6</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2602"></td>
          <td id="LC2602" class="blob-code blob-code-inner js-file-line">   row7 = <span class="pl-c1">_mm_load_si128</span>((<span class="pl-k">const</span> __m128i *) (data + <span class="pl-c1">7</span>*<span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L2603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2603"></td>
          <td id="LC2603" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2604"></td>
          <td id="LC2604" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> column pass</span></td>
        </tr>
        <tr>
          <td id="L2605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2605"></td>
          <td id="LC2605" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">dct_pass</span>(bias_0, <span class="pl-c1">10</span>);</td>
        </tr>
        <tr>
          <td id="L2606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2606"></td>
          <td id="LC2606" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2607"></td>
          <td id="LC2607" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L2608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2608"></td>
          <td id="LC2608" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> 16bit 8x8 transpose pass 1</span></td>
        </tr>
        <tr>
          <td id="L2609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2609"></td>
          <td id="LC2609" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row0, row4);</td>
        </tr>
        <tr>
          <td id="L2610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2610"></td>
          <td id="LC2610" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row1, row5);</td>
        </tr>
        <tr>
          <td id="L2611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2611"></td>
          <td id="LC2611" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row2, row6);</td>
        </tr>
        <tr>
          <td id="L2612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2612"></td>
          <td id="LC2612" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row3, row7);</td>
        </tr>
        <tr>
          <td id="L2613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2613"></td>
          <td id="LC2613" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2614"></td>
          <td id="LC2614" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> transpose pass 2</span></td>
        </tr>
        <tr>
          <td id="L2615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2615"></td>
          <td id="LC2615" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row0, row2);</td>
        </tr>
        <tr>
          <td id="L2616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2616"></td>
          <td id="LC2616" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row1, row3);</td>
        </tr>
        <tr>
          <td id="L2617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2617"></td>
          <td id="LC2617" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row4, row6);</td>
        </tr>
        <tr>
          <td id="L2618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2618"></td>
          <td id="LC2618" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row5, row7);</td>
        </tr>
        <tr>
          <td id="L2619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2619"></td>
          <td id="LC2619" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2620"></td>
          <td id="LC2620" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> transpose pass 3</span></td>
        </tr>
        <tr>
          <td id="L2621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2621"></td>
          <td id="LC2621" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row0, row1);</td>
        </tr>
        <tr>
          <td id="L2622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2622"></td>
          <td id="LC2622" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row2, row3);</td>
        </tr>
        <tr>
          <td id="L2623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2623"></td>
          <td id="LC2623" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row4, row5);</td>
        </tr>
        <tr>
          <td id="L2624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2624"></td>
          <td id="LC2624" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave16</span>(row6, row7);</td>
        </tr>
        <tr>
          <td id="L2625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2625"></td>
          <td id="LC2625" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2626"></td>
          <td id="LC2626" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2627"></td>
          <td id="LC2627" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> row pass</span></td>
        </tr>
        <tr>
          <td id="L2628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2628"></td>
          <td id="LC2628" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">dct_pass</span>(bias_1, <span class="pl-c1">17</span>);</td>
        </tr>
        <tr>
          <td id="L2629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2629"></td>
          <td id="LC2629" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2630"></td>
          <td id="LC2630" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L2631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2631"></td>
          <td id="LC2631" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pack</span></td>
        </tr>
        <tr>
          <td id="L2632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2632"></td>
          <td id="LC2632" class="blob-code blob-code-inner js-file-line">      __m128i p0 = <span class="pl-c1">_mm_packus_epi16</span>(row0, row1); <span class="pl-c"><span class="pl-c">//</span> a0a1a2a3...a7b0b1b2b3...b7</span></td>
        </tr>
        <tr>
          <td id="L2633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2633"></td>
          <td id="LC2633" class="blob-code blob-code-inner js-file-line">      __m128i p1 = <span class="pl-c1">_mm_packus_epi16</span>(row2, row3);</td>
        </tr>
        <tr>
          <td id="L2634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2634"></td>
          <td id="LC2634" class="blob-code blob-code-inner js-file-line">      __m128i p2 = <span class="pl-c1">_mm_packus_epi16</span>(row4, row5);</td>
        </tr>
        <tr>
          <td id="L2635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2635"></td>
          <td id="LC2635" class="blob-code blob-code-inner js-file-line">      __m128i p3 = <span class="pl-c1">_mm_packus_epi16</span>(row6, row7);</td>
        </tr>
        <tr>
          <td id="L2636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2636"></td>
          <td id="LC2636" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2637"></td>
          <td id="LC2637" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> 8bit 8x8 transpose pass 1</span></td>
        </tr>
        <tr>
          <td id="L2638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2638"></td>
          <td id="LC2638" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave8</span>(p0, p2); <span class="pl-c"><span class="pl-c">//</span> a0e0a1e1...</span></td>
        </tr>
        <tr>
          <td id="L2639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2639"></td>
          <td id="LC2639" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave8</span>(p1, p3); <span class="pl-c"><span class="pl-c">//</span> c0g0c1g1...</span></td>
        </tr>
        <tr>
          <td id="L2640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2640"></td>
          <td id="LC2640" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2641"></td>
          <td id="LC2641" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> transpose pass 2</span></td>
        </tr>
        <tr>
          <td id="L2642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2642"></td>
          <td id="LC2642" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave8</span>(p0, p1); <span class="pl-c"><span class="pl-c">//</span> a0c0e0g0...</span></td>
        </tr>
        <tr>
          <td id="L2643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2643"></td>
          <td id="LC2643" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave8</span>(p2, p3); <span class="pl-c"><span class="pl-c">//</span> b0d0f0h0...</span></td>
        </tr>
        <tr>
          <td id="L2644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2644"></td>
          <td id="LC2644" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2645"></td>
          <td id="LC2645" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> transpose pass 3</span></td>
        </tr>
        <tr>
          <td id="L2646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2646"></td>
          <td id="LC2646" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave8</span>(p0, p2); <span class="pl-c"><span class="pl-c">//</span> a0b0c0d0...</span></td>
        </tr>
        <tr>
          <td id="L2647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2647"></td>
          <td id="LC2647" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_interleave8</span>(p1, p3); <span class="pl-c"><span class="pl-c">//</span> a4b4c4d4...</span></td>
        </tr>
        <tr>
          <td id="L2648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2648"></td>
          <td id="LC2648" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2649"></td>
          <td id="LC2649" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> store</span></td>
        </tr>
        <tr>
          <td id="L2650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2650"></td>
          <td id="LC2650" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, p0); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2651"></td>
          <td id="LC2651" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, <span class="pl-c1">_mm_shuffle_epi32</span>(p0, <span class="pl-c1">0x4e</span>)); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2652"></td>
          <td id="LC2652" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, p2); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2653"></td>
          <td id="LC2653" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, <span class="pl-c1">_mm_shuffle_epi32</span>(p2, <span class="pl-c1">0x4e</span>)); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2654"></td>
          <td id="LC2654" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, p1); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2655"></td>
          <td id="LC2655" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, <span class="pl-c1">_mm_shuffle_epi32</span>(p1, <span class="pl-c1">0x4e</span>)); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2656"></td>
          <td id="LC2656" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, p3); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2657"></td>
          <td id="LC2657" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storel_epi64</span>((__m128i *) out, <span class="pl-c1">_mm_shuffle_epi32</span>(p3, <span class="pl-c1">0x4e</span>));</td>
        </tr>
        <tr>
          <td id="L2658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2658"></td>
          <td id="LC2658" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2659"></td>
          <td id="LC2659" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2660"></td>
          <td id="LC2660" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_const</td>
        </tr>
        <tr>
          <td id="L2661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2661"></td>
          <td id="LC2661" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_rot</td>
        </tr>
        <tr>
          <td id="L2662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2662"></td>
          <td id="LC2662" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_widen</td>
        </tr>
        <tr>
          <td id="L2663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2663"></td>
          <td id="LC2663" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_wadd</td>
        </tr>
        <tr>
          <td id="L2664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2664"></td>
          <td id="LC2664" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_wsub</td>
        </tr>
        <tr>
          <td id="L2665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2665"></td>
          <td id="LC2665" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_bfly32o</td>
        </tr>
        <tr>
          <td id="L2666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2666"></td>
          <td id="LC2666" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_interleave8</td>
        </tr>
        <tr>
          <td id="L2667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2667"></td>
          <td id="LC2667" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_interleave16</td>
        </tr>
        <tr>
          <td id="L2668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2668"></td>
          <td id="LC2668" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_pass</td>
        </tr>
        <tr>
          <td id="L2669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2669"></td>
          <td id="LC2669" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2670"></td>
          <td id="LC2670" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2671"></td>
          <td id="LC2671" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_SSE2</span></td>
        </tr>
        <tr>
          <td id="L2672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2672"></td>
          <td id="LC2672" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2673"></td>
          <td id="LC2673" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_NEON</td>
        </tr>
        <tr>
          <td id="L2674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2674"></td>
          <td id="LC2674" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2675"></td>
          <td id="LC2675" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> NEON integer IDCT. should produce bit-identical</span></td>
        </tr>
        <tr>
          <td id="L2676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2676"></td>
          <td id="LC2676" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> results to the generic C version.</span></td>
        </tr>
        <tr>
          <td id="L2677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2677"></td>
          <td id="LC2677" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__idct_simd</span>(stbi_uc *out, <span class="pl-k">int</span> out_stride, <span class="pl-k">short</span> data[<span class="pl-c1">64</span>])</td>
        </tr>
        <tr>
          <td id="L2678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2678"></td>
          <td id="LC2678" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2679"></td>
          <td id="LC2679" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x8_t</span> row0, row1, row2, row3, row4, row5, row6, row7;</td>
        </tr>
        <tr>
          <td id="L2680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2680"></td>
          <td id="LC2680" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2681"></td>
          <td id="LC2681" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot0_0 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>(<span class="pl-c1">0</span>.<span class="pl-c1">5411961f</span>));</td>
        </tr>
        <tr>
          <td id="L2682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2682"></td>
          <td id="LC2682" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot0_1 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">847759065f</span>));</td>
        </tr>
        <tr>
          <td id="L2683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2683"></td>
          <td id="LC2683" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot0_2 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">0</span>.<span class="pl-c1">765366865f</span>));</td>
        </tr>
        <tr>
          <td id="L2684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2684"></td>
          <td id="LC2684" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot1_0 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">1</span>.<span class="pl-c1">175875602f</span>));</td>
        </tr>
        <tr>
          <td id="L2685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2685"></td>
          <td id="LC2685" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot1_1 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">899976223f</span>));</td>
        </tr>
        <tr>
          <td id="L2686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2686"></td>
          <td id="LC2686" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot1_2 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">2</span>.<span class="pl-c1">562915447f</span>));</td>
        </tr>
        <tr>
          <td id="L2687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2687"></td>
          <td id="LC2687" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot2_0 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">1</span>.<span class="pl-c1">961570560f</span>));</td>
        </tr>
        <tr>
          <td id="L2688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2688"></td>
          <td id="LC2688" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot2_1 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>(-<span class="pl-c1">0</span>.<span class="pl-c1">390180644f</span>));</td>
        </tr>
        <tr>
          <td id="L2689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2689"></td>
          <td id="LC2689" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot3_0 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">0</span>.<span class="pl-c1">298631336f</span>));</td>
        </tr>
        <tr>
          <td id="L2690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2690"></td>
          <td id="LC2690" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot3_1 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">2</span>.<span class="pl-c1">053119869f</span>));</td>
        </tr>
        <tr>
          <td id="L2691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2691"></td>
          <td id="LC2691" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot3_2 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">3</span>.<span class="pl-c1">072711026f</span>));</td>
        </tr>
        <tr>
          <td id="L2692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2692"></td>
          <td id="LC2692" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int16x4_t</span> rot3_3 = <span class="pl-c1">vdup_n_s16</span>(<span class="pl-c1">stbi__f2f</span>( <span class="pl-c1">1</span>.<span class="pl-c1">501321110f</span>));</td>
        </tr>
        <tr>
          <td id="L2693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2693"></td>
          <td id="LC2693" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2694"></td>
          <td id="LC2694" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_long_mul</span>(<span class="pl-v">out, inq, coeff</span>) \</td>
        </tr>
        <tr>
          <td id="L2695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2695"></td>
          <td id="LC2695" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_l = <span class="pl-c1">vmull_s16</span>(<span class="pl-c1">vget_low_s16</span>(inq), coeff); \</td>
        </tr>
        <tr>
          <td id="L2696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2696"></td>
          <td id="LC2696" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_h = <span class="pl-c1">vmull_s16</span>(<span class="pl-c1">vget_high_s16</span>(inq), coeff)</td>
        </tr>
        <tr>
          <td id="L2697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2697"></td>
          <td id="LC2697" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2698"></td>
          <td id="LC2698" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_long_mac</span>(<span class="pl-v">out, acc, inq, coeff</span>) \</td>
        </tr>
        <tr>
          <td id="L2699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2699"></td>
          <td id="LC2699" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_l = <span class="pl-c1">vmlal_s16</span>(acc##_l, <span class="pl-c1">vget_low_s16</span>(inq), coeff); \</td>
        </tr>
        <tr>
          <td id="L2700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2700"></td>
          <td id="LC2700" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_h = <span class="pl-c1">vmlal_s16</span>(acc##_h, <span class="pl-c1">vget_high_s16</span>(inq), coeff)</td>
        </tr>
        <tr>
          <td id="L2701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2701"></td>
          <td id="LC2701" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2702"></td>
          <td id="LC2702" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_widen</span>(<span class="pl-v">out, inq</span>) \</td>
        </tr>
        <tr>
          <td id="L2703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2703"></td>
          <td id="LC2703" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_l = <span class="pl-c1">vshll_n_s16</span>(<span class="pl-c1">vget_low_s16</span>(inq), <span class="pl-c1">12</span>); \</td>
        </tr>
        <tr>
          <td id="L2704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2704"></td>
          <td id="LC2704" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_h = <span class="pl-c1">vshll_n_s16</span>(<span class="pl-c1">vget_high_s16</span>(inq), <span class="pl-c1">12</span>)</td>
        </tr>
        <tr>
          <td id="L2705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2705"></td>
          <td id="LC2705" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2706"></td>
          <td id="LC2706" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> wide add</span></td>
        </tr>
        <tr>
          <td id="L2707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2707"></td>
          <td id="LC2707" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_wadd</span>(<span class="pl-v">out, a, b</span>) \</td>
        </tr>
        <tr>
          <td id="L2708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2708"></td>
          <td id="LC2708" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_l = <span class="pl-c1">vaddq_s32</span>(a##_l, b##_l); \</td>
        </tr>
        <tr>
          <td id="L2709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2709"></td>
          <td id="LC2709" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_h = <span class="pl-c1">vaddq_s32</span>(a##_h, b##_h)</td>
        </tr>
        <tr>
          <td id="L2710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2710"></td>
          <td id="LC2710" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2711"></td>
          <td id="LC2711" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> wide sub</span></td>
        </tr>
        <tr>
          <td id="L2712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2712"></td>
          <td id="LC2712" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_wsub</span>(<span class="pl-v">out, a, b</span>) \</td>
        </tr>
        <tr>
          <td id="L2713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2713"></td>
          <td id="LC2713" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_l = <span class="pl-c1">vsubq_s32</span>(a##_l, b##_l); \</td>
        </tr>
        <tr>
          <td id="L2714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2714"></td>
          <td id="LC2714" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">int32x4_t</span> out##_h = <span class="pl-c1">vsubq_s32</span>(a##_h, b##_h)</td>
        </tr>
        <tr>
          <td id="L2715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2715"></td>
          <td id="LC2715" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2716"></td>
          <td id="LC2716" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> butterfly a/b, then shift using &quot;shiftop&quot; by &quot;s&quot; and pack</span></td>
        </tr>
        <tr>
          <td id="L2717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2717"></td>
          <td id="LC2717" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_bfly32o</span>(<span class="pl-v">out0,out1, a,b,shiftop,s</span>) \</td>
        </tr>
        <tr>
          <td id="L2718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2718"></td>
          <td id="LC2718" class="blob-code blob-code-inner js-file-line">   { \</td>
        </tr>
        <tr>
          <td id="L2719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2719"></td>
          <td id="LC2719" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(sum, a, b); \</td>
        </tr>
        <tr>
          <td id="L2720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2720"></td>
          <td id="LC2720" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wsub</span>(dif, a, b); \</td>
        </tr>
        <tr>
          <td id="L2721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2721"></td>
          <td id="LC2721" class="blob-code blob-code-inner js-file-line">      out0 = <span class="pl-c1">vcombine_s16</span>(<span class="pl-c1">shiftop</span>(sum_l, s), <span class="pl-c1">shiftop</span>(sum_h, s)); \</td>
        </tr>
        <tr>
          <td id="L2722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2722"></td>
          <td id="LC2722" class="blob-code blob-code-inner js-file-line">      out1 = <span class="pl-c1">vcombine_s16</span>(<span class="pl-c1">shiftop</span>(dif_l, s), <span class="pl-c1">shiftop</span>(dif_h, s)); \</td>
        </tr>
        <tr>
          <td id="L2723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2723"></td>
          <td id="LC2723" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2724"></td>
          <td id="LC2724" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2725"></td>
          <td id="LC2725" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_pass</span>(<span class="pl-v">shiftop, shift</span>) \</td>
        </tr>
        <tr>
          <td id="L2726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2726"></td>
          <td id="LC2726" class="blob-code blob-code-inner js-file-line">   { \</td>
        </tr>
        <tr>
          <td id="L2727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2727"></td>
          <td id="LC2727" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">/*</span> even part <span class="pl-c">*/</span></span> \</td>
        </tr>
        <tr>
          <td id="L2728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2728"></td>
          <td id="LC2728" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sum26 = <span class="pl-c1">vaddq_s16</span>(row2, row6); \</td>
        </tr>
        <tr>
          <td id="L2729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2729"></td>
          <td id="LC2729" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mul</span>(p1e, sum26, rot0_0); \</td>
        </tr>
        <tr>
          <td id="L2730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2730"></td>
          <td id="LC2730" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(t2e, p1e, row6, rot0_1); \</td>
        </tr>
        <tr>
          <td id="L2731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2731"></td>
          <td id="LC2731" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(t3e, p1e, row2, rot0_2); \</td>
        </tr>
        <tr>
          <td id="L2732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2732"></td>
          <td id="LC2732" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sum04 = <span class="pl-c1">vaddq_s16</span>(row0, row4); \</td>
        </tr>
        <tr>
          <td id="L2733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2733"></td>
          <td id="LC2733" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> dif04 = <span class="pl-c1">vsubq_s16</span>(row0, row4); \</td>
        </tr>
        <tr>
          <td id="L2734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2734"></td>
          <td id="LC2734" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_widen</span>(t0e, sum04); \</td>
        </tr>
        <tr>
          <td id="L2735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2735"></td>
          <td id="LC2735" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_widen</span>(t1e, dif04); \</td>
        </tr>
        <tr>
          <td id="L2736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2736"></td>
          <td id="LC2736" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(x0, t0e, t3e); \</td>
        </tr>
        <tr>
          <td id="L2737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2737"></td>
          <td id="LC2737" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wsub</span>(x3, t0e, t3e); \</td>
        </tr>
        <tr>
          <td id="L2738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2738"></td>
          <td id="LC2738" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(x1, t1e, t2e); \</td>
        </tr>
        <tr>
          <td id="L2739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2739"></td>
          <td id="LC2739" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wsub</span>(x2, t1e, t2e); \</td>
        </tr>
        <tr>
          <td id="L2740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2740"></td>
          <td id="LC2740" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">/*</span> odd part <span class="pl-c">*/</span></span> \</td>
        </tr>
        <tr>
          <td id="L2741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2741"></td>
          <td id="LC2741" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sum15 = <span class="pl-c1">vaddq_s16</span>(row1, row5); \</td>
        </tr>
        <tr>
          <td id="L2742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2742"></td>
          <td id="LC2742" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sum17 = <span class="pl-c1">vaddq_s16</span>(row1, row7); \</td>
        </tr>
        <tr>
          <td id="L2743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2743"></td>
          <td id="LC2743" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sum35 = <span class="pl-c1">vaddq_s16</span>(row3, row5); \</td>
        </tr>
        <tr>
          <td id="L2744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2744"></td>
          <td id="LC2744" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sum37 = <span class="pl-c1">vaddq_s16</span>(row3, row7); \</td>
        </tr>
        <tr>
          <td id="L2745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2745"></td>
          <td id="LC2745" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> sumodd = <span class="pl-c1">vaddq_s16</span>(sum17, sum35); \</td>
        </tr>
        <tr>
          <td id="L2746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2746"></td>
          <td id="LC2746" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mul</span>(p5o, sumodd, rot1_0); \</td>
        </tr>
        <tr>
          <td id="L2747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2747"></td>
          <td id="LC2747" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(p1o, p5o, sum17, rot1_1); \</td>
        </tr>
        <tr>
          <td id="L2748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2748"></td>
          <td id="LC2748" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(p2o, p5o, sum35, rot1_2); \</td>
        </tr>
        <tr>
          <td id="L2749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2749"></td>
          <td id="LC2749" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mul</span>(p3o, sum37, rot2_0); \</td>
        </tr>
        <tr>
          <td id="L2750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2750"></td>
          <td id="LC2750" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mul</span>(p4o, sum15, rot2_1); \</td>
        </tr>
        <tr>
          <td id="L2751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2751"></td>
          <td id="LC2751" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(sump13o, p1o, p3o); \</td>
        </tr>
        <tr>
          <td id="L2752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2752"></td>
          <td id="LC2752" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(sump24o, p2o, p4o); \</td>
        </tr>
        <tr>
          <td id="L2753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2753"></td>
          <td id="LC2753" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(sump23o, p2o, p3o); \</td>
        </tr>
        <tr>
          <td id="L2754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2754"></td>
          <td id="LC2754" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_wadd</span>(sump14o, p1o, p4o); \</td>
        </tr>
        <tr>
          <td id="L2755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2755"></td>
          <td id="LC2755" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(x4, sump13o, row7, rot3_0); \</td>
        </tr>
        <tr>
          <td id="L2756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2756"></td>
          <td id="LC2756" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(x5, sump24o, row5, rot3_1); \</td>
        </tr>
        <tr>
          <td id="L2757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2757"></td>
          <td id="LC2757" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(x6, sump23o, row3, rot3_2); \</td>
        </tr>
        <tr>
          <td id="L2758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2758"></td>
          <td id="LC2758" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_long_mac</span>(x7, sump14o, row1, rot3_3); \</td>
        </tr>
        <tr>
          <td id="L2759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2759"></td>
          <td id="LC2759" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_bfly32o</span>(row0,row7, x0,x7,shiftop,shift); \</td>
        </tr>
        <tr>
          <td id="L2760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2760"></td>
          <td id="LC2760" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_bfly32o</span>(row1,row6, x1,x6,shiftop,shift); \</td>
        </tr>
        <tr>
          <td id="L2761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2761"></td>
          <td id="LC2761" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_bfly32o</span>(row2,row5, x2,x5,shiftop,shift); \</td>
        </tr>
        <tr>
          <td id="L2762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2762"></td>
          <td id="LC2762" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_bfly32o</span>(row3,row4, x3,x4,shiftop,shift); \</td>
        </tr>
        <tr>
          <td id="L2763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2763"></td>
          <td id="LC2763" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2764"></td>
          <td id="LC2764" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2765"></td>
          <td id="LC2765" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> load</span></td>
        </tr>
        <tr>
          <td id="L2766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2766"></td>
          <td id="LC2766" class="blob-code blob-code-inner js-file-line">   row0 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">0</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2767"></td>
          <td id="LC2767" class="blob-code blob-code-inner js-file-line">   row1 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">1</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2768"></td>
          <td id="LC2768" class="blob-code blob-code-inner js-file-line">   row2 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">2</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2769"></td>
          <td id="LC2769" class="blob-code blob-code-inner js-file-line">   row3 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">3</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2770"></td>
          <td id="LC2770" class="blob-code blob-code-inner js-file-line">   row4 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">4</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2771"></td>
          <td id="LC2771" class="blob-code blob-code-inner js-file-line">   row5 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">5</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2772"></td>
          <td id="LC2772" class="blob-code blob-code-inner js-file-line">   row6 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">6</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2773"></td>
          <td id="LC2773" class="blob-code blob-code-inner js-file-line">   row7 = <span class="pl-c1">vld1q_s16</span>(data + <span class="pl-c1">7</span>*<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L2774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2774"></td>
          <td id="LC2774" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2775"></td>
          <td id="LC2775" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> add DC bias</span></td>
        </tr>
        <tr>
          <td id="L2776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2776"></td>
          <td id="LC2776" class="blob-code blob-code-inner js-file-line">   row0 = <span class="pl-c1">vaddq_s16</span>(row0, <span class="pl-c1">vsetq_lane_s16</span>(<span class="pl-c1">1024</span>, <span class="pl-c1">vdupq_n_s16</span>(<span class="pl-c1">0</span>), <span class="pl-c1">0</span>));</td>
        </tr>
        <tr>
          <td id="L2777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2777"></td>
          <td id="LC2777" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2778"></td>
          <td id="LC2778" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> column pass</span></td>
        </tr>
        <tr>
          <td id="L2779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2779"></td>
          <td id="LC2779" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">dct_pass</span>(vrshrn_n_s32, <span class="pl-c1">10</span>);</td>
        </tr>
        <tr>
          <td id="L2780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2780"></td>
          <td id="LC2780" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2781"></td>
          <td id="LC2781" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> 16bit 8x8 transpose</span></td>
        </tr>
        <tr>
          <td id="L2782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2782"></td>
          <td id="LC2782" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L2783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2783"></td>
          <td id="LC2783" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> these three map to a single VTRN.16, VTRN.32, and VSWP, respectively.</span></td>
        </tr>
        <tr>
          <td id="L2784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2784"></td>
          <td id="LC2784" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> whether compilers actually get this is another story, sadly.</span></td>
        </tr>
        <tr>
          <td id="L2785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2785"></td>
          <td id="LC2785" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_trn16</span>(<span class="pl-v">x, y</span>) { <span class="pl-c1">int16x8x2_t</span> t = <span class="pl-c1">vtrnq_s16</span>(x, y); x = t.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>]; y = t.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>]; }</td>
        </tr>
        <tr>
          <td id="L2786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2786"></td>
          <td id="LC2786" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_trn32</span>(<span class="pl-v">x, y</span>) { <span class="pl-c1">int32x4x2_t</span> t = <span class="pl-c1">vtrnq_s32</span>(<span class="pl-c1">vreinterpretq_s32_s16</span>(x), <span class="pl-c1">vreinterpretq_s32_s16</span>(y)); x = <span class="pl-c1">vreinterpretq_s16_s32</span>(t.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>]); y = <span class="pl-c1">vreinterpretq_s16_s32</span>(t.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>]); }</td>
        </tr>
        <tr>
          <td id="L2787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2787"></td>
          <td id="LC2787" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_trn64</span>(<span class="pl-v">x, y</span>) { <span class="pl-c1">int16x8_t</span> x0 = x; <span class="pl-c1">int16x8_t</span> <span class="pl-c1">y0</span> = y; x = <span class="pl-c1">vcombine_s16</span>(<span class="pl-c1">vget_low_s16</span>(x0), <span class="pl-c1">vget_low_s16</span>(<span class="pl-c1">y0</span>)); y = <span class="pl-c1">vcombine_s16</span>(<span class="pl-c1">vget_high_s16</span>(x0), <span class="pl-c1">vget_high_s16</span>(<span class="pl-c1">y0</span>)); }</td>
        </tr>
        <tr>
          <td id="L2788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2788"></td>
          <td id="LC2788" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2789"></td>
          <td id="LC2789" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pass 1</span></td>
        </tr>
        <tr>
          <td id="L2790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2790"></td>
          <td id="LC2790" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn16</span>(row0, row1); <span class="pl-c"><span class="pl-c">//</span> a0b0a2b2a4b4a6b6</span></td>
        </tr>
        <tr>
          <td id="L2791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2791"></td>
          <td id="LC2791" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn16</span>(row2, row3);</td>
        </tr>
        <tr>
          <td id="L2792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2792"></td>
          <td id="LC2792" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn16</span>(row4, row5);</td>
        </tr>
        <tr>
          <td id="L2793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2793"></td>
          <td id="LC2793" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn16</span>(row6, row7);</td>
        </tr>
        <tr>
          <td id="L2794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2794"></td>
          <td id="LC2794" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2795"></td>
          <td id="LC2795" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pass 2</span></td>
        </tr>
        <tr>
          <td id="L2796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2796"></td>
          <td id="LC2796" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn32</span>(row0, row2); <span class="pl-c"><span class="pl-c">//</span> a0b0c0d0a4b4c4d4</span></td>
        </tr>
        <tr>
          <td id="L2797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2797"></td>
          <td id="LC2797" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn32</span>(row1, row3);</td>
        </tr>
        <tr>
          <td id="L2798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2798"></td>
          <td id="LC2798" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn32</span>(row4, row6);</td>
        </tr>
        <tr>
          <td id="L2799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2799"></td>
          <td id="LC2799" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn32</span>(row5, row7);</td>
        </tr>
        <tr>
          <td id="L2800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2800"></td>
          <td id="LC2800" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2801"></td>
          <td id="LC2801" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pass 3</span></td>
        </tr>
        <tr>
          <td id="L2802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2802"></td>
          <td id="LC2802" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn64</span>(row0, row4); <span class="pl-c"><span class="pl-c">//</span> a0b0c0d0e0f0g0h0</span></td>
        </tr>
        <tr>
          <td id="L2803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2803"></td>
          <td id="LC2803" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn64</span>(row1, row5);</td>
        </tr>
        <tr>
          <td id="L2804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2804"></td>
          <td id="LC2804" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn64</span>(row2, row6);</td>
        </tr>
        <tr>
          <td id="L2805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2805"></td>
          <td id="LC2805" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn64</span>(row3, row7);</td>
        </tr>
        <tr>
          <td id="L2806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2806"></td>
          <td id="LC2806" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2807"></td>
          <td id="LC2807" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_trn16</td>
        </tr>
        <tr>
          <td id="L2808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2808"></td>
          <td id="LC2808" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_trn32</td>
        </tr>
        <tr>
          <td id="L2809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2809"></td>
          <td id="LC2809" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_trn64</td>
        </tr>
        <tr>
          <td id="L2810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2810"></td>
          <td id="LC2810" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2811"></td>
          <td id="LC2811" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2812"></td>
          <td id="LC2812" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> row pass</span></td>
        </tr>
        <tr>
          <td id="L2813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2813"></td>
          <td id="LC2813" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> vrshrn_n_s32 only supports shifts up to 16, we need</span></td>
        </tr>
        <tr>
          <td id="L2814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2814"></td>
          <td id="LC2814" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> 17. so do a non-rounding shift of 16 first then follow</span></td>
        </tr>
        <tr>
          <td id="L2815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2815"></td>
          <td id="LC2815" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> up with a rounding shift by 1.</span></td>
        </tr>
        <tr>
          <td id="L2816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2816"></td>
          <td id="LC2816" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">dct_pass</span>(vshrn_n_s32, <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L2817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2817"></td>
          <td id="LC2817" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2818"></td>
          <td id="LC2818" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L2819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2819"></td>
          <td id="LC2819" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pack and round</span></td>
        </tr>
        <tr>
          <td id="L2820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2820"></td>
          <td id="LC2820" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p0 = <span class="pl-c1">vqrshrun_n_s16</span>(row0, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2821"></td>
          <td id="LC2821" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p1 = <span class="pl-c1">vqrshrun_n_s16</span>(row1, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2822"></td>
          <td id="LC2822" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p2 = <span class="pl-c1">vqrshrun_n_s16</span>(row2, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2823"></td>
          <td id="LC2823" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p3 = <span class="pl-c1">vqrshrun_n_s16</span>(row3, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2824"></td>
          <td id="LC2824" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p4 = <span class="pl-c1">vqrshrun_n_s16</span>(row4, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2825"></td>
          <td id="LC2825" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p5 = <span class="pl-c1">vqrshrun_n_s16</span>(row5, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2826"></td>
          <td id="LC2826" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p6 = <span class="pl-c1">vqrshrun_n_s16</span>(row6, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2827"></td>
          <td id="LC2827" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> p7 = <span class="pl-c1">vqrshrun_n_s16</span>(row7, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L2828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2828"></td>
          <td id="LC2828" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2829"></td>
          <td id="LC2829" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> again, these can translate into one instruction, but often don&#39;t.</span></td>
        </tr>
        <tr>
          <td id="L2830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2830"></td>
          <td id="LC2830" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_trn8_8</span>(<span class="pl-v">x, y</span>) { <span class="pl-c1">uint8x8x2_t</span> t = <span class="pl-c1">vtrn_u8</span>(x, y); x = t.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>]; y = t.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>]; }</td>
        </tr>
        <tr>
          <td id="L2831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2831"></td>
          <td id="LC2831" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_trn8_16</span>(<span class="pl-v">x, y</span>) { <span class="pl-c1">uint16x4x2_t</span> t = <span class="pl-c1">vtrn_u16</span>(<span class="pl-c1">vreinterpret_u16_u8</span>(x), <span class="pl-c1">vreinterpret_u16_u8</span>(y)); x = <span class="pl-c1">vreinterpret_u8_u16</span>(t.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>]); y = <span class="pl-c1">vreinterpret_u8_u16</span>(t.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>]); }</td>
        </tr>
        <tr>
          <td id="L2832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2832"></td>
          <td id="LC2832" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">dct_trn8_32</span>(<span class="pl-v">x, y</span>) { <span class="pl-c1">uint32x2x2_t</span> t = <span class="pl-c1">vtrn_u32</span>(<span class="pl-c1">vreinterpret_u32_u8</span>(x), <span class="pl-c1">vreinterpret_u32_u8</span>(y)); x = <span class="pl-c1">vreinterpret_u8_u32</span>(t.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>]); y = <span class="pl-c1">vreinterpret_u8_u32</span>(t.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>]); }</td>
        </tr>
        <tr>
          <td id="L2833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2833"></td>
          <td id="LC2833" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2834"></td>
          <td id="LC2834" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> sadly can&#39;t use interleaved stores here since we only write</span></td>
        </tr>
        <tr>
          <td id="L2835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2835"></td>
          <td id="LC2835" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> 8 bytes to each scan line!</span></td>
        </tr>
        <tr>
          <td id="L2836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2836"></td>
          <td id="LC2836" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2837"></td>
          <td id="LC2837" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> 8x8 8-bit transpose pass 1</span></td>
        </tr>
        <tr>
          <td id="L2838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2838"></td>
          <td id="LC2838" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_8</span>(p0, p1);</td>
        </tr>
        <tr>
          <td id="L2839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2839"></td>
          <td id="LC2839" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_8</span>(p2, p3);</td>
        </tr>
        <tr>
          <td id="L2840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2840"></td>
          <td id="LC2840" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_8</span>(p4, p5);</td>
        </tr>
        <tr>
          <td id="L2841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2841"></td>
          <td id="LC2841" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_8</span>(p6, p7);</td>
        </tr>
        <tr>
          <td id="L2842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2842"></td>
          <td id="LC2842" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2843"></td>
          <td id="LC2843" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pass 2</span></td>
        </tr>
        <tr>
          <td id="L2844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2844"></td>
          <td id="LC2844" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_16</span>(p0, p2);</td>
        </tr>
        <tr>
          <td id="L2845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2845"></td>
          <td id="LC2845" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_16</span>(p1, p3);</td>
        </tr>
        <tr>
          <td id="L2846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2846"></td>
          <td id="LC2846" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_16</span>(p4, p6);</td>
        </tr>
        <tr>
          <td id="L2847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2847"></td>
          <td id="LC2847" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_16</span>(p5, p7);</td>
        </tr>
        <tr>
          <td id="L2848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2848"></td>
          <td id="LC2848" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2849"></td>
          <td id="LC2849" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pass 3</span></td>
        </tr>
        <tr>
          <td id="L2850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2850"></td>
          <td id="LC2850" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_32</span>(p0, p4);</td>
        </tr>
        <tr>
          <td id="L2851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2851"></td>
          <td id="LC2851" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_32</span>(p1, p5);</td>
        </tr>
        <tr>
          <td id="L2852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2852"></td>
          <td id="LC2852" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_32</span>(p2, p6);</td>
        </tr>
        <tr>
          <td id="L2853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2853"></td>
          <td id="LC2853" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">dct_trn8_32</span>(p3, p7);</td>
        </tr>
        <tr>
          <td id="L2854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2854"></td>
          <td id="LC2854" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2855"></td>
          <td id="LC2855" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> store</span></td>
        </tr>
        <tr>
          <td id="L2856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2856"></td>
          <td id="LC2856" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p0); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2857"></td>
          <td id="LC2857" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p1); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2858"></td>
          <td id="LC2858" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p2); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2859"></td>
          <td id="LC2859" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p3); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2860"></td>
          <td id="LC2860" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p4); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2861"></td>
          <td id="LC2861" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p5); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2862"></td>
          <td id="LC2862" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p6); out += out_stride;</td>
        </tr>
        <tr>
          <td id="L2863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2863"></td>
          <td id="LC2863" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst1_u8</span>(out, p7);</td>
        </tr>
        <tr>
          <td id="L2864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2864"></td>
          <td id="LC2864" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2865"></td>
          <td id="LC2865" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_trn8_8</td>
        </tr>
        <tr>
          <td id="L2866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2866"></td>
          <td id="LC2866" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_trn8_16</td>
        </tr>
        <tr>
          <td id="L2867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2867"></td>
          <td id="LC2867" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_trn8_32</td>
        </tr>
        <tr>
          <td id="L2868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2868"></td>
          <td id="LC2868" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L2869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2869"></td>
          <td id="LC2869" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2870"></td>
          <td id="LC2870" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_long_mul</td>
        </tr>
        <tr>
          <td id="L2871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2871"></td>
          <td id="LC2871" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_long_mac</td>
        </tr>
        <tr>
          <td id="L2872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2872"></td>
          <td id="LC2872" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_widen</td>
        </tr>
        <tr>
          <td id="L2873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2873"></td>
          <td id="LC2873" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_wadd</td>
        </tr>
        <tr>
          <td id="L2874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2874"></td>
          <td id="LC2874" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_wsub</td>
        </tr>
        <tr>
          <td id="L2875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2875"></td>
          <td id="LC2875" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_bfly32o</td>
        </tr>
        <tr>
          <td id="L2876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2876"></td>
          <td id="LC2876" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> dct_pass</td>
        </tr>
        <tr>
          <td id="L2877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2877"></td>
          <td id="LC2877" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2878"></td>
          <td id="LC2878" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2879"></td>
          <td id="LC2879" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_NEON</span></td>
        </tr>
        <tr>
          <td id="L2880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2880"></td>
          <td id="LC2880" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2881"></td>
          <td id="LC2881" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__MARKER_none</span>  <span class="pl-c1">0xff</span></td>
        </tr>
        <tr>
          <td id="L2882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2882"></td>
          <td id="LC2882" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> if there&#39;s a pending marker from the entropy stream, return that</span></td>
        </tr>
        <tr>
          <td id="L2883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2883"></td>
          <td id="LC2883" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> otherwise, fetch from the stream and get a marker. if there&#39;s no</span></td>
        </tr>
        <tr>
          <td id="L2884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2884"></td>
          <td id="LC2884" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> marker, return 0xff, which is never a valid marker value</span></td>
        </tr>
        <tr>
          <td id="L2885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2885"></td>
          <td id="LC2885" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc <span class="pl-smi">stbi__get_marker</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L2886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2886"></td>
          <td id="LC2886" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2887"></td>
          <td id="LC2887" class="blob-code blob-code-inner js-file-line">   stbi_uc x;</td>
        </tr>
        <tr>
          <td id="L2888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2888"></td>
          <td id="LC2888" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">marker</span> != STBI__MARKER_none) { x = j-&gt;<span class="pl-smi">marker</span>; j-&gt;<span class="pl-smi">marker</span> = STBI__MARKER_none; <span class="pl-k">return</span> x; }</td>
        </tr>
        <tr>
          <td id="L2889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2889"></td>
          <td id="LC2889" class="blob-code blob-code-inner js-file-line">   x = <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L2890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2890"></td>
          <td id="LC2890" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (x != <span class="pl-c1">0xff</span>) <span class="pl-k">return</span> STBI__MARKER_none;</td>
        </tr>
        <tr>
          <td id="L2891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2891"></td>
          <td id="LC2891" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (x == <span class="pl-c1">0xff</span>)</td>
        </tr>
        <tr>
          <td id="L2892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2892"></td>
          <td id="LC2892" class="blob-code blob-code-inner js-file-line">      x = <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> consume repeated 0xff fill bytes</span></td>
        </tr>
        <tr>
          <td id="L2893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2893"></td>
          <td id="LC2893" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> x;</td>
        </tr>
        <tr>
          <td id="L2894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2894"></td>
          <td id="LC2894" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2895"></td>
          <td id="LC2895" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2896"></td>
          <td id="LC2896" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> in each scan, we&#39;ll have scan_n components, and the order</span></td>
        </tr>
        <tr>
          <td id="L2897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2897"></td>
          <td id="LC2897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> of the components is specified by order[]</span></td>
        </tr>
        <tr>
          <td id="L2898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2898"></td>
          <td id="LC2898" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__RESTART</span>(<span class="pl-v">x</span>)     ((x) &gt;= <span class="pl-c1">0xd0</span> &amp;&amp; (x) &lt;= <span class="pl-c1">0xd7</span>)</td>
        </tr>
        <tr>
          <td id="L2899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2899"></td>
          <td id="LC2899" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2900"></td>
          <td id="LC2900" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> after a restart interval, stbi__jpeg_reset the entropy decoder and</span></td>
        </tr>
        <tr>
          <td id="L2901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2901"></td>
          <td id="LC2901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> the dc prediction</span></td>
        </tr>
        <tr>
          <td id="L2902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2902"></td>
          <td id="LC2902" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__jpeg_reset</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L2903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2903"></td>
          <td id="LC2903" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2904"></td>
          <td id="LC2904" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_bits</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2905"></td>
          <td id="LC2905" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">code_buffer</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2906"></td>
          <td id="LC2906" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">nomore</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2907"></td>
          <td id="LC2907" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">img_comp</span>[<span class="pl-c1">0</span>].<span class="pl-smi">dc_pred</span> = j-&gt;<span class="pl-smi">img_comp</span>[<span class="pl-c1">1</span>].<span class="pl-smi">dc_pred</span> = j-&gt;<span class="pl-smi">img_comp</span>[<span class="pl-c1">2</span>].<span class="pl-smi">dc_pred</span> = j-&gt;<span class="pl-smi">img_comp</span>[<span class="pl-c1">3</span>].<span class="pl-smi">dc_pred</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2908"></td>
          <td id="LC2908" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">marker</span> = STBI__MARKER_none;</td>
        </tr>
        <tr>
          <td id="L2909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2909"></td>
          <td id="LC2909" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">todo</span> = j-&gt;<span class="pl-smi">restart_interval</span> ? j-&gt;<span class="pl-smi">restart_interval</span> : <span class="pl-c1">0x7fffffff</span>;</td>
        </tr>
        <tr>
          <td id="L2910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2910"></td>
          <td id="LC2910" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">eob_run</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2911"></td>
          <td id="LC2911" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> no more than 1&lt;&lt;31 MCUs if no restart_interal? that&#39;s plenty safe,</span></td>
        </tr>
        <tr>
          <td id="L2912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2912"></td>
          <td id="LC2912" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> since we don&#39;t even allow 1&lt;&lt;30 pixels</span></td>
        </tr>
        <tr>
          <td id="L2913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2913"></td>
          <td id="LC2913" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2914"></td>
          <td id="LC2914" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2915"></td>
          <td id="LC2915" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__parse_entropy_coded_data</span>(stbi__jpeg *z)</td>
        </tr>
        <tr>
          <td id="L2916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2916"></td>
          <td id="LC2916" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L2917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2917"></td>
          <td id="LC2917" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__jpeg_reset</span>(z);</td>
        </tr>
        <tr>
          <td id="L2918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2918"></td>
          <td id="LC2918" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!z-&gt;<span class="pl-smi">progressive</span>) {</td>
        </tr>
        <tr>
          <td id="L2919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2919"></td>
          <td id="LC2919" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">scan_n</span> == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L2920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2920"></td>
          <td id="LC2920" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i,j;</td>
        </tr>
        <tr>
          <td id="L2921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2921"></td>
          <td id="LC2921" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_SIMD_ALIGN</span>(<span class="pl-k">short</span>, data[<span class="pl-c1">64</span>]);</td>
        </tr>
        <tr>
          <td id="L2922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2922"></td>
          <td id="LC2922" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> n = z-&gt;<span class="pl-smi">order</span>[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L2923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2923"></td>
          <td id="LC2923" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> non-interleaved data, we just need to process one block at a time,</span></td>
        </tr>
        <tr>
          <td id="L2924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2924"></td>
          <td id="LC2924" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> in trivial scanline order</span></td>
        </tr>
        <tr>
          <td id="L2925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2925"></td>
          <td id="LC2925" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> number of blocks to do just depends on how many actual &quot;pixels&quot; this</span></td>
        </tr>
        <tr>
          <td id="L2926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2926"></td>
          <td id="LC2926" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> component has, independent of interleaved MCU blocking and such</span></td>
        </tr>
        <tr>
          <td id="L2927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2927"></td>
          <td id="LC2927" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> w = (z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">x</span>+<span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L2928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2928"></td>
          <td id="LC2928" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> h = (z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">y</span>+<span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L2929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2929"></td>
          <td id="LC2929" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; h; ++j) {</td>
        </tr>
        <tr>
          <td id="L2930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2930"></td>
          <td id="LC2930" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w; ++i) {</td>
        </tr>
        <tr>
          <td id="L2931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2931"></td>
          <td id="LC2931" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> ha = z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">ha</span>;</td>
        </tr>
        <tr>
          <td id="L2932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2932"></td>
          <td id="LC2932" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!<span class="pl-c1">stbi__jpeg_decode_block</span>(z, data, z-&gt;<span class="pl-smi">huff_dc</span>+z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">hd</span>, z-&gt;<span class="pl-smi">huff_ac</span>+ha, z-&gt;<span class="pl-smi">fast_ac</span>[ha], n, z-&gt;<span class="pl-smi">dequant</span>[z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">tq</span>])) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2933"></td>
          <td id="LC2933" class="blob-code blob-code-inner js-file-line">               z-&gt;<span class="pl-c1">idct_block_kernel</span>(z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">data</span>+z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">w2</span>*j*<span class="pl-c1">8</span>+i*<span class="pl-c1">8</span>, z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">w2</span>, data);</td>
        </tr>
        <tr>
          <td id="L2934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2934"></td>
          <td id="LC2934" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> every data block is an MCU, so countdown the restart interval</span></td>
        </tr>
        <tr>
          <td id="L2935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2935"></td>
          <td id="LC2935" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (--z-&gt;<span class="pl-smi">todo</span> &lt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2936"></td>
          <td id="LC2936" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">24</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(z);</td>
        </tr>
        <tr>
          <td id="L2937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2937"></td>
          <td id="LC2937" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> if it&#39;s NOT a restart, then just bail, so we get corrupt data</span></td>
        </tr>
        <tr>
          <td id="L2938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2938"></td>
          <td id="LC2938" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> rather than no data</span></td>
        </tr>
        <tr>
          <td id="L2939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2939"></td>
          <td id="LC2939" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">STBI__RESTART</span>(z-&gt;<span class="pl-smi">marker</span>)) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2940"></td>
          <td id="LC2940" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">stbi__jpeg_reset</span>(z);</td>
        </tr>
        <tr>
          <td id="L2941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2941"></td>
          <td id="LC2941" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2942"></td>
          <td id="LC2942" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L2943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2943"></td>
          <td id="LC2943" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2944"></td>
          <td id="LC2944" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2945"></td>
          <td id="LC2945" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> interleaved</span></td>
        </tr>
        <tr>
          <td id="L2946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2946"></td>
          <td id="LC2946" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i,j,k,x,y;</td>
        </tr>
        <tr>
          <td id="L2947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2947"></td>
          <td id="LC2947" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_SIMD_ALIGN</span>(<span class="pl-k">short</span>, data[<span class="pl-c1">64</span>]);</td>
        </tr>
        <tr>
          <td id="L2948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2948"></td>
          <td id="LC2948" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; z-&gt;<span class="pl-smi">img_mcu_y</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L2949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2949"></td>
          <td id="LC2949" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">img_mcu_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L2950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2950"></td>
          <td id="LC2950" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> scan an interleaved mcu... process scan_n components in order</span></td>
        </tr>
        <tr>
          <td id="L2951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2951"></td>
          <td id="LC2951" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; z-&gt;<span class="pl-smi">scan_n</span>; ++k) {</td>
        </tr>
        <tr>
          <td id="L2952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2952"></td>
          <td id="LC2952" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">int</span> n = z-&gt;<span class="pl-smi">order</span>[k];</td>
        </tr>
        <tr>
          <td id="L2953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2953"></td>
          <td id="LC2953" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> scan out an mcu&#39;s worth of this component; that&#39;s just determined</span></td>
        </tr>
        <tr>
          <td id="L2954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2954"></td>
          <td id="LC2954" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> by the basic H and V specified for the component</span></td>
        </tr>
        <tr>
          <td id="L2955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2955"></td>
          <td id="LC2955" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (y=<span class="pl-c1">0</span>; y &lt; z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">v</span>; ++y) {</td>
        </tr>
        <tr>
          <td id="L2956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2956"></td>
          <td id="LC2956" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">for</span> (x=<span class="pl-c1">0</span>; x &lt; z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">h</span>; ++x) {</td>
        </tr>
        <tr>
          <td id="L2957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2957"></td>
          <td id="LC2957" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">int</span> x2 = (i*z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">h</span> + x)*<span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L2958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2958"></td>
          <td id="LC2958" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">int</span> y2 = (j*z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">v</span> + y)*<span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L2959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2959"></td>
          <td id="LC2959" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">int</span> ha = z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">ha</span>;</td>
        </tr>
        <tr>
          <td id="L2960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2960"></td>
          <td id="LC2960" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (!<span class="pl-c1">stbi__jpeg_decode_block</span>(z, data, z-&gt;<span class="pl-smi">huff_dc</span>+z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">hd</span>, z-&gt;<span class="pl-smi">huff_ac</span>+ha, z-&gt;<span class="pl-smi">fast_ac</span>[ha], n, z-&gt;<span class="pl-smi">dequant</span>[z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">tq</span>])) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2961"></td>
          <td id="LC2961" class="blob-code blob-code-inner js-file-line">                        z-&gt;<span class="pl-c1">idct_block_kernel</span>(z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">data</span>+z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">w2</span>*y2+x2, z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">w2</span>, data);</td>
        </tr>
        <tr>
          <td id="L2962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2962"></td>
          <td id="LC2962" class="blob-code blob-code-inner js-file-line">                     }</td>
        </tr>
        <tr>
          <td id="L2963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2963"></td>
          <td id="LC2963" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L2964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2964"></td>
          <td id="LC2964" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2965"></td>
          <td id="LC2965" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> after all interleaved components, that&#39;s an interleaved MCU,</span></td>
        </tr>
        <tr>
          <td id="L2966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2966"></td>
          <td id="LC2966" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> so now count down the restart interval</span></td>
        </tr>
        <tr>
          <td id="L2967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2967"></td>
          <td id="LC2967" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (--z-&gt;<span class="pl-smi">todo</span> &lt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2968"></td>
          <td id="LC2968" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">24</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(z);</td>
        </tr>
        <tr>
          <td id="L2969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2969"></td>
          <td id="LC2969" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">STBI__RESTART</span>(z-&gt;<span class="pl-smi">marker</span>)) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2970"></td>
          <td id="LC2970" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">stbi__jpeg_reset</span>(z);</td>
        </tr>
        <tr>
          <td id="L2971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2971"></td>
          <td id="LC2971" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2972"></td>
          <td id="LC2972" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L2973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2973"></td>
          <td id="LC2973" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L2974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2974"></td>
          <td id="LC2974" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L2975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2975"></td>
          <td id="LC2975" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L2976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2976"></td>
          <td id="LC2976" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2977"></td>
          <td id="LC2977" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">scan_n</span> == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L2978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2978"></td>
          <td id="LC2978" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i,j;</td>
        </tr>
        <tr>
          <td id="L2979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2979"></td>
          <td id="LC2979" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> n = z-&gt;<span class="pl-smi">order</span>[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L2980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2980"></td>
          <td id="LC2980" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> non-interleaved data, we just need to process one block at a time,</span></td>
        </tr>
        <tr>
          <td id="L2981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2981"></td>
          <td id="LC2981" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> in trivial scanline order</span></td>
        </tr>
        <tr>
          <td id="L2982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2982"></td>
          <td id="LC2982" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> number of blocks to do just depends on how many actual &quot;pixels&quot; this</span></td>
        </tr>
        <tr>
          <td id="L2983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2983"></td>
          <td id="LC2983" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> component has, independent of interleaved MCU blocking and such</span></td>
        </tr>
        <tr>
          <td id="L2984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2984"></td>
          <td id="LC2984" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> w = (z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">x</span>+<span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L2985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2985"></td>
          <td id="LC2985" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> h = (z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">y</span>+<span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L2986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2986"></td>
          <td id="LC2986" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; h; ++j) {</td>
        </tr>
        <tr>
          <td id="L2987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2987"></td>
          <td id="LC2987" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w; ++i) {</td>
        </tr>
        <tr>
          <td id="L2988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2988"></td>
          <td id="LC2988" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">short</span> *data = z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">coeff</span> + <span class="pl-c1">64</span> * (i + j * z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">coeff_w</span>);</td>
        </tr>
        <tr>
          <td id="L2989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2989"></td>
          <td id="LC2989" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">spec_start</span> == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2990"></td>
          <td id="LC2990" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">stbi__jpeg_decode_block_prog_dc</span>(z, data, &amp;z-&gt;<span class="pl-smi">huff_dc</span>[z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">hd</span>], n))</td>
        </tr>
        <tr>
          <td id="L2991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2991"></td>
          <td id="LC2991" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2992"></td>
          <td id="LC2992" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2993"></td>
          <td id="LC2993" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">int</span> ha = z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">ha</span>;</td>
        </tr>
        <tr>
          <td id="L2994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2994"></td>
          <td id="LC2994" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">stbi__jpeg_decode_block_prog_ac</span>(z, data, &amp;z-&gt;<span class="pl-smi">huff_ac</span>[ha], z-&gt;<span class="pl-smi">fast_ac</span>[ha]))</td>
        </tr>
        <tr>
          <td id="L2995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2995"></td>
          <td id="LC2995" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2996"></td>
          <td id="LC2996" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L2997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2997"></td>
          <td id="LC2997" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> every data block is an MCU, so countdown the restart interval</span></td>
        </tr>
        <tr>
          <td id="L2998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2998"></td>
          <td id="LC2998" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (--z-&gt;<span class="pl-smi">todo</span> &lt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="2999"></td>
          <td id="LC2999" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">24</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(z);</td>
        </tr>
        <tr>
          <td id="L3000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3000"></td>
          <td id="LC3000" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">STBI__RESTART</span>(z-&gt;<span class="pl-smi">marker</span>)) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3001"></td>
          <td id="LC3001" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">stbi__jpeg_reset</span>(z);</td>
        </tr>
        <tr>
          <td id="L3002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3002"></td>
          <td id="LC3002" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3003"></td>
          <td id="LC3003" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3004"></td>
          <td id="LC3004" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3005"></td>
          <td id="LC3005" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3006"></td>
          <td id="LC3006" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> interleaved</span></td>
        </tr>
        <tr>
          <td id="L3007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3007"></td>
          <td id="LC3007" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i,j,k,x,y;</td>
        </tr>
        <tr>
          <td id="L3008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3008"></td>
          <td id="LC3008" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; z-&gt;<span class="pl-smi">img_mcu_y</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L3009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3009"></td>
          <td id="LC3009" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">img_mcu_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3010"></td>
          <td id="LC3010" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> scan an interleaved mcu... process scan_n components in order</span></td>
        </tr>
        <tr>
          <td id="L3011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3011"></td>
          <td id="LC3011" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; z-&gt;<span class="pl-smi">scan_n</span>; ++k) {</td>
        </tr>
        <tr>
          <td id="L3012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3012"></td>
          <td id="LC3012" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">int</span> n = z-&gt;<span class="pl-smi">order</span>[k];</td>
        </tr>
        <tr>
          <td id="L3013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3013"></td>
          <td id="LC3013" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> scan out an mcu&#39;s worth of this component; that&#39;s just determined</span></td>
        </tr>
        <tr>
          <td id="L3014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3014"></td>
          <td id="LC3014" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> by the basic H and V specified for the component</span></td>
        </tr>
        <tr>
          <td id="L3015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3015"></td>
          <td id="LC3015" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (y=<span class="pl-c1">0</span>; y &lt; z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">v</span>; ++y) {</td>
        </tr>
        <tr>
          <td id="L3016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3016"></td>
          <td id="LC3016" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">for</span> (x=<span class="pl-c1">0</span>; x &lt; z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">h</span>; ++x) {</td>
        </tr>
        <tr>
          <td id="L3017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3017"></td>
          <td id="LC3017" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">int</span> x2 = (i*z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">h</span> + x);</td>
        </tr>
        <tr>
          <td id="L3018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3018"></td>
          <td id="LC3018" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">int</span> y2 = (j*z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">v</span> + y);</td>
        </tr>
        <tr>
          <td id="L3019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3019"></td>
          <td id="LC3019" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">short</span> *data = z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">coeff</span> + <span class="pl-c1">64</span> * (x2 + y2 * z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">coeff_w</span>);</td>
        </tr>
        <tr>
          <td id="L3020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3020"></td>
          <td id="LC3020" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (!<span class="pl-c1">stbi__jpeg_decode_block_prog_dc</span>(z, data, &amp;z-&gt;<span class="pl-smi">huff_dc</span>[z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">hd</span>], n))</td>
        </tr>
        <tr>
          <td id="L3021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3021"></td>
          <td id="LC3021" class="blob-code blob-code-inner js-file-line">                           <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3022"></td>
          <td id="LC3022" class="blob-code blob-code-inner js-file-line">                     }</td>
        </tr>
        <tr>
          <td id="L3023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3023"></td>
          <td id="LC3023" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L3024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3024"></td>
          <td id="LC3024" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3025"></td>
          <td id="LC3025" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> after all interleaved components, that&#39;s an interleaved MCU,</span></td>
        </tr>
        <tr>
          <td id="L3026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3026"></td>
          <td id="LC3026" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> so now count down the restart interval</span></td>
        </tr>
        <tr>
          <td id="L3027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3027"></td>
          <td id="LC3027" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (--z-&gt;<span class="pl-smi">todo</span> &lt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L3028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3028"></td>
          <td id="LC3028" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">code_bits</span> &lt; <span class="pl-c1">24</span>) <span class="pl-c1">stbi__grow_buffer_unsafe</span>(z);</td>
        </tr>
        <tr>
          <td id="L3029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3029"></td>
          <td id="LC3029" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">STBI__RESTART</span>(z-&gt;<span class="pl-smi">marker</span>)) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3030"></td>
          <td id="LC3030" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">stbi__jpeg_reset</span>(z);</td>
        </tr>
        <tr>
          <td id="L3031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3031"></td>
          <td id="LC3031" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3032"></td>
          <td id="LC3032" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3033"></td>
          <td id="LC3033" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3034"></td>
          <td id="LC3034" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3035"></td>
          <td id="LC3035" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3036"></td>
          <td id="LC3036" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3037"></td>
          <td id="LC3037" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3038"></td>
          <td id="LC3038" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3039"></td>
          <td id="LC3039" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__jpeg_dequantize</span>(<span class="pl-k">short</span> *data, stbi__uint16 *dequant)</td>
        </tr>
        <tr>
          <td id="L3040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3040"></td>
          <td id="LC3040" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3041"></td>
          <td id="LC3041" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3042"></td>
          <td id="LC3042" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">64</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L3043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3043"></td>
          <td id="LC3043" class="blob-code blob-code-inner js-file-line">      data[i] *= dequant[i];</td>
        </tr>
        <tr>
          <td id="L3044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3044"></td>
          <td id="LC3044" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3045"></td>
          <td id="LC3045" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3046"></td>
          <td id="LC3046" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__jpeg_finish</span>(stbi__jpeg *z)</td>
        </tr>
        <tr>
          <td id="L3047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3047"></td>
          <td id="LC3047" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3048"></td>
          <td id="LC3048" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">progressive</span>) {</td>
        </tr>
        <tr>
          <td id="L3049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3049"></td>
          <td id="LC3049" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> dequantize and idct the data</span></td>
        </tr>
        <tr>
          <td id="L3050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3050"></td>
          <td id="LC3050" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> i,j,n;</td>
        </tr>
        <tr>
          <td id="L3051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3051"></td>
          <td id="LC3051" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (n=<span class="pl-c1">0</span>; n &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>; ++n) {</td>
        </tr>
        <tr>
          <td id="L3052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3052"></td>
          <td id="LC3052" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> w = (z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">x</span>+<span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L3053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3053"></td>
          <td id="LC3053" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> h = (z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">y</span>+<span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L3054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3054"></td>
          <td id="LC3054" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; h; ++j) {</td>
        </tr>
        <tr>
          <td id="L3055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3055"></td>
          <td id="LC3055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w; ++i) {</td>
        </tr>
        <tr>
          <td id="L3056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3056"></td>
          <td id="LC3056" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">short</span> *data = z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">coeff</span> + <span class="pl-c1">64</span> * (i + j * z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">coeff_w</span>);</td>
        </tr>
        <tr>
          <td id="L3057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3057"></td>
          <td id="LC3057" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__jpeg_dequantize</span>(data, z-&gt;<span class="pl-smi">dequant</span>[z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">tq</span>]);</td>
        </tr>
        <tr>
          <td id="L3058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3058"></td>
          <td id="LC3058" class="blob-code blob-code-inner js-file-line">               z-&gt;<span class="pl-c1">idct_block_kernel</span>(z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">data</span>+z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">w2</span>*j*<span class="pl-c1">8</span>+i*<span class="pl-c1">8</span>, z-&gt;<span class="pl-smi">img_comp</span>[n].<span class="pl-smi">w2</span>, data);</td>
        </tr>
        <tr>
          <td id="L3059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3059"></td>
          <td id="LC3059" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3060"></td>
          <td id="LC3060" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3061"></td>
          <td id="LC3061" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3062"></td>
          <td id="LC3062" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3063"></td>
          <td id="LC3063" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3064"></td>
          <td id="LC3064" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3065"></td>
          <td id="LC3065" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__process_marker</span>(stbi__jpeg *z, <span class="pl-k">int</span> m)</td>
        </tr>
        <tr>
          <td id="L3066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3066"></td>
          <td id="LC3066" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3067"></td>
          <td id="LC3067" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> L;</td>
        </tr>
        <tr>
          <td id="L3068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3068"></td>
          <td id="LC3068" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">switch</span> (m) {</td>
        </tr>
        <tr>
          <td id="L3069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3069"></td>
          <td id="LC3069" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> STBI__MARKER_none: <span class="pl-c"><span class="pl-c">//</span> no marker found</span></td>
        </tr>
        <tr>
          <td id="L3070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3070"></td>
          <td id="LC3070" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expected marker<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3071"></td>
          <td id="LC3071" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3072"></td>
          <td id="LC3072" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">0xDD</span>: <span class="pl-c"><span class="pl-c">//</span> DRI - specify restart interval</span></td>
        </tr>
        <tr>
          <td id="L3073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3073"></td>
          <td id="LC3073" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>) != <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DRI len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3074"></td>
          <td id="LC3074" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">restart_interval</span> = <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3075"></td>
          <td id="LC3075" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3076"></td>
          <td id="LC3076" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3077"></td>
          <td id="LC3077" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">0xDB</span>: <span class="pl-c"><span class="pl-c">//</span> DQT - define quantization table</span></td>
        </tr>
        <tr>
          <td id="L3078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3078"></td>
          <td id="LC3078" class="blob-code blob-code-inner js-file-line">         L = <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>)-<span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L3079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3079"></td>
          <td id="LC3079" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (L &gt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L3080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3080"></td>
          <td id="LC3080" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> q = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3081"></td>
          <td id="LC3081" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> p = q &gt;&gt; <span class="pl-c1">4</span>, sixteen = (p != <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L3082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3082"></td>
          <td id="LC3082" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> t = q &amp; <span class="pl-c1">15</span>,i;</td>
        </tr>
        <tr>
          <td id="L3083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3083"></td>
          <td id="LC3083" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (p != <span class="pl-c1">0</span> &amp;&amp; p != <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DQT type<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3084"></td>
          <td id="LC3084" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (t &gt; <span class="pl-c1">3</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DQT table<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3085"></td>
          <td id="LC3085" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3086"></td>
          <td id="LC3086" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">64</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L3087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3087"></td>
          <td id="LC3087" class="blob-code blob-code-inner js-file-line">               z-&gt;<span class="pl-smi">dequant</span>[t][stbi__jpeg_dezigzag[i]] = (stbi__uint16)(sixteen ? <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>) : <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>));</td>
        </tr>
        <tr>
          <td id="L3088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3088"></td>
          <td id="LC3088" class="blob-code blob-code-inner js-file-line">            L -= (sixteen ? <span class="pl-c1">129</span> : <span class="pl-c1">65</span>);</td>
        </tr>
        <tr>
          <td id="L3089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3089"></td>
          <td id="LC3089" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3090"></td>
          <td id="LC3090" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> L==<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3091"></td>
          <td id="LC3091" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3092"></td>
          <td id="LC3092" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">0xC4</span>: <span class="pl-c"><span class="pl-c">//</span> DHT - define huffman table</span></td>
        </tr>
        <tr>
          <td id="L3093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3093"></td>
          <td id="LC3093" class="blob-code blob-code-inner js-file-line">         L = <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>)-<span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L3094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3094"></td>
          <td id="LC3094" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (L &gt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L3095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3095"></td>
          <td id="LC3095" class="blob-code blob-code-inner js-file-line">            stbi_uc *v;</td>
        </tr>
        <tr>
          <td id="L3096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3096"></td>
          <td id="LC3096" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> sizes[<span class="pl-c1">16</span>],i,n=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3097"></td>
          <td id="LC3097" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> q = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3098"></td>
          <td id="LC3098" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> tc = q &gt;&gt; <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L3099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3099"></td>
          <td id="LC3099" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> th = q &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L3100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3100"></td>
          <td id="LC3100" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (tc &gt; <span class="pl-c1">1</span> || th &gt; <span class="pl-c1">3</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DHT header<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3101"></td>
          <td id="LC3101" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">16</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3102"></td>
          <td id="LC3102" class="blob-code blob-code-inner js-file-line">               sizes[i] = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3103"></td>
          <td id="LC3103" class="blob-code blob-code-inner js-file-line">               n += sizes[i];</td>
        </tr>
        <tr>
          <td id="L3104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3104"></td>
          <td id="LC3104" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3105"></td>
          <td id="LC3105" class="blob-code blob-code-inner js-file-line">            L -= <span class="pl-c1">17</span>;</td>
        </tr>
        <tr>
          <td id="L3106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3106"></td>
          <td id="LC3106" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (tc == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L3107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3107"></td>
          <td id="LC3107" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!<span class="pl-c1">stbi__build_huffman</span>(z-&gt;<span class="pl-smi">huff_dc</span>+th, sizes)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3108"></td>
          <td id="LC3108" class="blob-code blob-code-inner js-file-line">               v = z-&gt;<span class="pl-smi">huff_dc</span>[th].<span class="pl-smi">values</span>;</td>
        </tr>
        <tr>
          <td id="L3109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3109"></td>
          <td id="LC3109" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3110"></td>
          <td id="LC3110" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!<span class="pl-c1">stbi__build_huffman</span>(z-&gt;<span class="pl-smi">huff_ac</span>+th, sizes)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3111"></td>
          <td id="LC3111" class="blob-code blob-code-inner js-file-line">               v = z-&gt;<span class="pl-smi">huff_ac</span>[th].<span class="pl-smi">values</span>;</td>
        </tr>
        <tr>
          <td id="L3112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3112"></td>
          <td id="LC3112" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3113"></td>
          <td id="LC3113" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; n; ++i)</td>
        </tr>
        <tr>
          <td id="L3114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3114"></td>
          <td id="LC3114" class="blob-code blob-code-inner js-file-line">               v[i] = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3115"></td>
          <td id="LC3115" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (tc != <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L3116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3116"></td>
          <td id="LC3116" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__build_fast_ac</span>(z-&gt;<span class="pl-smi">fast_ac</span>[th], z-&gt;<span class="pl-smi">huff_ac</span> + th);</td>
        </tr>
        <tr>
          <td id="L3117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3117"></td>
          <td id="LC3117" class="blob-code blob-code-inner js-file-line">            L -= n;</td>
        </tr>
        <tr>
          <td id="L3118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3118"></td>
          <td id="LC3118" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3119"></td>
          <td id="LC3119" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> L==<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3120"></td>
          <td id="LC3120" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3121"></td>
          <td id="LC3121" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3122"></td>
          <td id="LC3122" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> check for comment block or APP blocks</span></td>
        </tr>
        <tr>
          <td id="L3123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3123"></td>
          <td id="LC3123" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ((m &gt;= <span class="pl-c1">0xE0</span> &amp;&amp; m &lt;= <span class="pl-c1">0xEF</span>) || m == <span class="pl-c1">0xFE</span>) {</td>
        </tr>
        <tr>
          <td id="L3124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3124"></td>
          <td id="LC3124" class="blob-code blob-code-inner js-file-line">      L = <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3125"></td>
          <td id="LC3125" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (L &lt; <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L3126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3126"></td>
          <td id="LC3126" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (m == <span class="pl-c1">0xFE</span>)</td>
        </tr>
        <tr>
          <td id="L3127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3127"></td>
          <td id="LC3127" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad COM len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3128"></td>
          <td id="LC3128" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3129"></td>
          <td id="LC3129" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad APP len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3130"></td>
          <td id="LC3130" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3131"></td>
          <td id="LC3131" class="blob-code blob-code-inner js-file-line">      L -= <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L3132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3132"></td>
          <td id="LC3132" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3133"></td>
          <td id="LC3133" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (m == <span class="pl-c1">0xE0</span> &amp;&amp; L &gt;= <span class="pl-c1">5</span>) { <span class="pl-c"><span class="pl-c">//</span> JFIF APP0 segment</span></td>
        </tr>
        <tr>
          <td id="L3134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3134"></td>
          <td id="LC3134" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> tag[<span class="pl-c1">5</span>] = {<span class="pl-s"><span class="pl-pds">&#39;</span>J<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>F<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>F<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\0</span><span class="pl-pds">&#39;</span></span>};</td>
        </tr>
        <tr>
          <td id="L3135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3135"></td>
          <td id="LC3135" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> ok = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3136"></td>
          <td id="LC3136" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3137"></td>
          <td id="LC3137" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">5</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L3138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3138"></td>
          <td id="LC3138" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>) != tag[i])</td>
        </tr>
        <tr>
          <td id="L3139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3139"></td>
          <td id="LC3139" class="blob-code blob-code-inner js-file-line">               ok = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3140"></td>
          <td id="LC3140" class="blob-code blob-code-inner js-file-line">         L -= <span class="pl-c1">5</span>;</td>
        </tr>
        <tr>
          <td id="L3141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3141"></td>
          <td id="LC3141" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (ok)</td>
        </tr>
        <tr>
          <td id="L3142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3142"></td>
          <td id="LC3142" class="blob-code blob-code-inner js-file-line">            z-&gt;<span class="pl-smi">jfif</span> = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3143"></td>
          <td id="LC3143" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (m == <span class="pl-c1">0xEE</span> &amp;&amp; L &gt;= <span class="pl-c1">12</span>) { <span class="pl-c"><span class="pl-c">//</span> Adobe APP14 segment</span></td>
        </tr>
        <tr>
          <td id="L3144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3144"></td>
          <td id="LC3144" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> tag[<span class="pl-c1">6</span>] = {<span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>d<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>o<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>b<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\0</span><span class="pl-pds">&#39;</span></span>};</td>
        </tr>
        <tr>
          <td id="L3145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3145"></td>
          <td id="LC3145" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> ok = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3146"></td>
          <td id="LC3146" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3147"></td>
          <td id="LC3147" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">6</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L3148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3148"></td>
          <td id="LC3148" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>) != tag[i])</td>
        </tr>
        <tr>
          <td id="L3149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3149"></td>
          <td id="LC3149" class="blob-code blob-code-inner js-file-line">               ok = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3150"></td>
          <td id="LC3150" class="blob-code blob-code-inner js-file-line">         L -= <span class="pl-c1">6</span>;</td>
        </tr>
        <tr>
          <td id="L3151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3151"></td>
          <td id="LC3151" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (ok) {</td>
        </tr>
        <tr>
          <td id="L3152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3152"></td>
          <td id="LC3152" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> version</span></td>
        </tr>
        <tr>
          <td id="L3153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3153"></td>
          <td id="LC3153" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> flags0</span></td>
        </tr>
        <tr>
          <td id="L3154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3154"></td>
          <td id="LC3154" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> flags1</span></td>
        </tr>
        <tr>
          <td id="L3155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3155"></td>
          <td id="LC3155" class="blob-code blob-code-inner js-file-line">            z-&gt;<span class="pl-smi">app14_color_transform</span> = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> color transform</span></td>
        </tr>
        <tr>
          <td id="L3156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3156"></td>
          <td id="LC3156" class="blob-code blob-code-inner js-file-line">            L -= <span class="pl-c1">6</span>;</td>
        </tr>
        <tr>
          <td id="L3157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3157"></td>
          <td id="LC3157" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3158"></td>
          <td id="LC3158" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3159"></td>
          <td id="LC3159" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3160"></td>
          <td id="LC3160" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(z-&gt;<span class="pl-smi">s</span>, L);</td>
        </tr>
        <tr>
          <td id="L3161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3161"></td>
          <td id="LC3161" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3162"></td>
          <td id="LC3162" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3163"></td>
          <td id="LC3163" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3164"></td>
          <td id="LC3164" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unknown marker<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3165"></td>
          <td id="LC3165" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3166"></td>
          <td id="LC3166" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3167"></td>
          <td id="LC3167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> after we see SOS</span></td>
        </tr>
        <tr>
          <td id="L3168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3168"></td>
          <td id="LC3168" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__process_scan_header</span>(stbi__jpeg *z)</td>
        </tr>
        <tr>
          <td id="L3169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3169"></td>
          <td id="LC3169" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3170"></td>
          <td id="LC3170" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3171"></td>
          <td id="LC3171" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> Ls = <span class="pl-c1">stbi__get16be</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3172"></td>
          <td id="LC3172" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">scan_n</span> = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3173"></td>
          <td id="LC3173" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">scan_n</span> &lt; <span class="pl-c1">1</span> || z-&gt;<span class="pl-smi">scan_n</span> &gt; <span class="pl-c1">4</span> || z-&gt;<span class="pl-smi">scan_n</span> &gt; (<span class="pl-k">int</span>) z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOS component count<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3174"></td>
          <td id="LC3174" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (Ls != <span class="pl-c1">6</span>+<span class="pl-c1">2</span>*z-&gt;<span class="pl-smi">scan_n</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOS len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3175"></td>
          <td id="LC3175" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">scan_n</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3176"></td>
          <td id="LC3176" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> id = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>), which;</td>
        </tr>
        <tr>
          <td id="L3177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3177"></td>
          <td id="LC3177" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> q = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3178"></td>
          <td id="LC3178" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (which = <span class="pl-c1">0</span>; which &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>; ++which)</td>
        </tr>
        <tr>
          <td id="L3179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3179"></td>
          <td id="LC3179" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[which].<span class="pl-smi">id</span> == id)</td>
        </tr>
        <tr>
          <td id="L3180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3180"></td>
          <td id="LC3180" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L3181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3181"></td>
          <td id="LC3181" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (which == z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> no match</span></td>
        </tr>
        <tr>
          <td id="L3182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3182"></td>
          <td id="LC3182" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[which].<span class="pl-smi">hd</span> = q &gt;&gt; <span class="pl-c1">4</span>;   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[which].<span class="pl-smi">hd</span> &gt; <span class="pl-c1">3</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DC huff<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3183"></td>
          <td id="LC3183" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[which].<span class="pl-smi">ha</span> = q &amp; <span class="pl-c1">15</span>;   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[which].<span class="pl-smi">ha</span> &gt; <span class="pl-c1">3</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad AC huff<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3184"></td>
          <td id="LC3184" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">order</span>[i] = which;</td>
        </tr>
        <tr>
          <td id="L3185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3185"></td>
          <td id="LC3185" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3186"></td>
          <td id="LC3186" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3187"></td>
          <td id="LC3187" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L3188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3188"></td>
          <td id="LC3188" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> aa;</td>
        </tr>
        <tr>
          <td id="L3189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3189"></td>
          <td id="LC3189" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">spec_start</span> = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3190"></td>
          <td id="LC3190" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">spec_end</span>   = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>); <span class="pl-c"><span class="pl-c">//</span> should be 63, but might be 0</span></td>
        </tr>
        <tr>
          <td id="L3191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3191"></td>
          <td id="LC3191" class="blob-code blob-code-inner js-file-line">      aa = <span class="pl-c1">stbi__get8</span>(z-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3192"></td>
          <td id="LC3192" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">succ_high</span> = (aa &gt;&gt; <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3193"></td>
          <td id="LC3193" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">succ_low</span>  = (aa &amp; <span class="pl-c1">15</span>);</td>
        </tr>
        <tr>
          <td id="L3194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3194"></td>
          <td id="LC3194" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">progressive</span>) {</td>
        </tr>
        <tr>
          <td id="L3195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3195"></td>
          <td id="LC3195" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">spec_start</span> &gt; <span class="pl-c1">63</span> || z-&gt;<span class="pl-smi">spec_end</span> &gt; <span class="pl-c1">63</span>  || z-&gt;<span class="pl-smi">spec_start</span> &gt; z-&gt;<span class="pl-smi">spec_end</span> || z-&gt;<span class="pl-smi">succ_high</span> &gt; <span class="pl-c1">13</span> || z-&gt;<span class="pl-smi">succ_low</span> &gt; <span class="pl-c1">13</span>)</td>
        </tr>
        <tr>
          <td id="L3196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3196"></td>
          <td id="LC3196" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOS<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3197"></td>
          <td id="LC3197" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3198"></td>
          <td id="LC3198" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">spec_start</span> != <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOS<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3199"></td>
          <td id="LC3199" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">succ_high</span> != <span class="pl-c1">0</span> || z-&gt;<span class="pl-smi">succ_low</span> != <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOS<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3200"></td>
          <td id="LC3200" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">spec_end</span> = <span class="pl-c1">63</span>;</td>
        </tr>
        <tr>
          <td id="L3201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3201"></td>
          <td id="LC3201" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3202"></td>
          <td id="LC3202" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3203"></td>
          <td id="LC3203" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3204"></td>
          <td id="LC3204" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3205"></td>
          <td id="LC3205" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3206"></td>
          <td id="LC3206" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3207"></td>
          <td id="LC3207" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__free_jpeg_components</span>(stbi__jpeg *z, <span class="pl-k">int</span> ncomp, <span class="pl-k">int</span> why)</td>
        </tr>
        <tr>
          <td id="L3208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3208"></td>
          <td id="LC3208" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3209"></td>
          <td id="LC3209" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3210"></td>
          <td id="LC3210" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; ncomp; ++i) {</td>
        </tr>
        <tr>
          <td id="L3211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3211"></td>
          <td id="LC3211" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_data</span>) {</td>
        </tr>
        <tr>
          <td id="L3212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3212"></td>
          <td id="LC3212" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_FREE</span>(z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_data</span>);</td>
        </tr>
        <tr>
          <td id="L3213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3213"></td>
          <td id="LC3213" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_data</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3214"></td>
          <td id="LC3214" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">data</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3215"></td>
          <td id="LC3215" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3216"></td>
          <td id="LC3216" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span>) {</td>
        </tr>
        <tr>
          <td id="L3217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3217"></td>
          <td id="LC3217" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_FREE</span>(z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span>);</td>
        </tr>
        <tr>
          <td id="L3218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3218"></td>
          <td id="LC3218" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3219"></td>
          <td id="LC3219" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">coeff</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3220"></td>
          <td id="LC3220" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3221"></td>
          <td id="LC3221" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">linebuf</span>) {</td>
        </tr>
        <tr>
          <td id="L3222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3222"></td>
          <td id="LC3222" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_FREE</span>(z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">linebuf</span>);</td>
        </tr>
        <tr>
          <td id="L3223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3223"></td>
          <td id="LC3223" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">linebuf</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3224"></td>
          <td id="LC3224" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3225"></td>
          <td id="LC3225" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3226"></td>
          <td id="LC3226" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> why;</td>
        </tr>
        <tr>
          <td id="L3227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3227"></td>
          <td id="LC3227" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3228"></td>
          <td id="LC3228" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3229"></td>
          <td id="LC3229" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__process_frame_header</span>(stbi__jpeg *z, <span class="pl-k">int</span> scan)</td>
        </tr>
        <tr>
          <td id="L3230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3230"></td>
          <td id="LC3230" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3231"></td>
          <td id="LC3231" class="blob-code blob-code-inner js-file-line">   stbi__context *s = z-&gt;<span class="pl-smi">s</span>;</td>
        </tr>
        <tr>
          <td id="L3232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3232"></td>
          <td id="LC3232" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> Lf,p,i,q, h_max=<span class="pl-c1">1</span>,v_max=<span class="pl-c1">1</span>,c;</td>
        </tr>
        <tr>
          <td id="L3233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3233"></td>
          <td id="LC3233" class="blob-code blob-code-inner js-file-line">   Lf = <span class="pl-c1">stbi__get16be</span>(s);         <span class="pl-k">if</span> (Lf &lt; <span class="pl-c1">11</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOF len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> JPEG</span></td>
        </tr>
        <tr>
          <td id="L3234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3234"></td>
          <td id="LC3234" class="blob-code blob-code-inner js-file-line">   p  = <span class="pl-c1">stbi__get8</span>(s);            <span class="pl-k">if</span> (p != <span class="pl-c1">8</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>only 8-bit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>JPEG format not supported: 8-bit only<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> JPEG baseline</span></td>
        </tr>
        <tr>
          <td id="L3235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3235"></td>
          <td id="LC3235" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_y</span> = <span class="pl-c1">stbi__get16be</span>(s);   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_y</span> == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no header height<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>JPEG format not supported: delayed height<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> Legal, but we don&#39;t handle it--but neither does IJG</span></td>
        </tr>
        <tr>
          <td id="L3236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3236"></td>
          <td id="LC3236" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_x</span> = <span class="pl-c1">stbi__get16be</span>(s);   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_x</span> == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>0 width<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> JPEG requires</span></td>
        </tr>
        <tr>
          <td id="L3237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3237"></td>
          <td id="LC3237" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_y</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3238"></td>
          <td id="LC3238" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_x</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3239"></td>
          <td id="LC3239" class="blob-code blob-code-inner js-file-line">   c = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L3240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3240"></td>
          <td id="LC3240" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (c != <span class="pl-c1">3</span> &amp;&amp; c != <span class="pl-c1">1</span> &amp;&amp; c != <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad component count<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3241"></td>
          <td id="LC3241" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_n</span> = c;</td>
        </tr>
        <tr>
          <td id="L3242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3242"></td>
          <td id="LC3242" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; c; ++i) {</td>
        </tr>
        <tr>
          <td id="L3243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3243"></td>
          <td id="LC3243" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">data</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3244"></td>
          <td id="LC3244" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">linebuf</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3245"></td>
          <td id="LC3245" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3246"></td>
          <td id="LC3246" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3247"></td>
          <td id="LC3247" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (Lf != <span class="pl-c1">8</span>+<span class="pl-c1">3</span>*s-&gt;<span class="pl-smi">img_n</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad SOF len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3248"></td>
          <td id="LC3248" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3249"></td>
          <td id="LC3249" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">rgb</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3250"></td>
          <td id="LC3250" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; s-&gt;<span class="pl-smi">img_n</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3251"></td>
          <td id="LC3251" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">char</span> rgb[<span class="pl-c1">3</span>] = { <span class="pl-s"><span class="pl-pds">&#39;</span>R<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>G<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span> };</td>
        </tr>
        <tr>
          <td id="L3252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3252"></td>
          <td id="LC3252" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">id</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L3253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3253"></td>
          <td id="LC3253" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">3</span> &amp;&amp; z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">id</span> == rgb[i])</td>
        </tr>
        <tr>
          <td id="L3254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3254"></td>
          <td id="LC3254" class="blob-code blob-code-inner js-file-line">         ++z-&gt;<span class="pl-smi">rgb</span>;</td>
        </tr>
        <tr>
          <td id="L3255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3255"></td>
          <td id="LC3255" class="blob-code blob-code-inner js-file-line">      q = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L3256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3256"></td>
          <td id="LC3256" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> = (q &gt;&gt; <span class="pl-c1">4</span>);  <span class="pl-k">if</span> (!z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> || z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> &gt; <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad H<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3257"></td>
          <td id="LC3257" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> = q &amp; <span class="pl-c1">15</span>;    <span class="pl-k">if</span> (!z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> || z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> &gt; <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad V<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3258"></td>
          <td id="LC3258" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">tq</span> = <span class="pl-c1">stbi__get8</span>(s);  <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">tq</span> &gt; <span class="pl-c1">3</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad TQ<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3259"></td>
          <td id="LC3259" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3260"></td>
          <td id="LC3260" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3261"></td>
          <td id="LC3261" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (scan != STBI__SCAN_load) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3262"></td>
          <td id="LC3262" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3263"></td>
          <td id="LC3263" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>, s-&gt;<span class="pl-smi">img_n</span>, <span class="pl-c1">0</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Image too large to decode<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3264"></td>
          <td id="LC3264" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3265"></td>
          <td id="LC3265" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; s-&gt;<span class="pl-smi">img_n</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3266"></td>
          <td id="LC3266" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> &gt; h_max) h_max = z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L3267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3267"></td>
          <td id="LC3267" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> &gt; v_max) v_max = z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span>;</td>
        </tr>
        <tr>
          <td id="L3268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3268"></td>
          <td id="LC3268" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3269"></td>
          <td id="LC3269" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3270"></td>
          <td id="LC3270" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> check that plane subsampling factors are integer ratios; our resamplers can&#39;t deal with fractional ratios</span></td>
        </tr>
        <tr>
          <td id="L3271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3271"></td>
          <td id="LC3271" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> and I&#39;ve never seen a non-corrupted JPEG file actually use them</span></td>
        </tr>
        <tr>
          <td id="L3272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3272"></td>
          <td id="LC3272" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; s-&gt;<span class="pl-smi">img_n</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3273"></td>
          <td id="LC3273" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (h_max % z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> != <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad H<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3274"></td>
          <td id="LC3274" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (v_max % z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> != <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad V<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3275"></td>
          <td id="LC3275" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3276"></td>
          <td id="LC3276" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3277"></td>
          <td id="LC3277" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> compute interleaved mcu info</span></td>
        </tr>
        <tr>
          <td id="L3278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3278"></td>
          <td id="LC3278" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">img_h_max</span> = h_max;</td>
        </tr>
        <tr>
          <td id="L3279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3279"></td>
          <td id="LC3279" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">img_v_max</span> = v_max;</td>
        </tr>
        <tr>
          <td id="L3280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3280"></td>
          <td id="LC3280" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">img_mcu_w</span> = h_max * <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L3281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3281"></td>
          <td id="LC3281" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">img_mcu_h</span> = v_max * <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L3282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3282"></td>
          <td id="LC3282" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> these sizes can&#39;t be more than 17 bits</span></td>
        </tr>
        <tr>
          <td id="L3283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3283"></td>
          <td id="LC3283" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">img_mcu_x</span> = (s-&gt;<span class="pl-smi">img_x</span> + z-&gt;<span class="pl-smi">img_mcu_w</span>-<span class="pl-c1">1</span>) / z-&gt;<span class="pl-smi">img_mcu_w</span>;</td>
        </tr>
        <tr>
          <td id="L3284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3284"></td>
          <td id="LC3284" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">img_mcu_y</span> = (s-&gt;<span class="pl-smi">img_y</span> + z-&gt;<span class="pl-smi">img_mcu_h</span>-<span class="pl-c1">1</span>) / z-&gt;<span class="pl-smi">img_mcu_h</span>;</td>
        </tr>
        <tr>
          <td id="L3285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3285"></td>
          <td id="LC3285" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3286"></td>
          <td id="LC3286" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; s-&gt;<span class="pl-smi">img_n</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3287"></td>
          <td id="LC3287" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> number of effective pixels (e.g. for non-interleaved MCU)</span></td>
        </tr>
        <tr>
          <td id="L3288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3288"></td>
          <td id="LC3288" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">x</span> = (s-&gt;<span class="pl-smi">img_x</span> * z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> + h_max-<span class="pl-c1">1</span>) / h_max;</td>
        </tr>
        <tr>
          <td id="L3289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3289"></td>
          <td id="LC3289" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">y</span> = (s-&gt;<span class="pl-smi">img_y</span> * z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> + v_max-<span class="pl-c1">1</span>) / v_max;</td>
        </tr>
        <tr>
          <td id="L3290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3290"></td>
          <td id="LC3290" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> to simplify generation, we&#39;ll allocate enough memory to decode</span></td>
        </tr>
        <tr>
          <td id="L3291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3291"></td>
          <td id="LC3291" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> the bogus oversized data from using interleaved MCUs and their</span></td>
        </tr>
        <tr>
          <td id="L3292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3292"></td>
          <td id="LC3292" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> big blocks (e.g. a 16x16 iMCU on an image of width 33); we won&#39;t</span></td>
        </tr>
        <tr>
          <td id="L3293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3293"></td>
          <td id="LC3293" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> discard the extra data until colorspace conversion</span></td>
        </tr>
        <tr>
          <td id="L3294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3294"></td>
          <td id="LC3294" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L3295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3295"></td>
          <td id="LC3295" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> img_mcu_x, img_mcu_y: &lt;=17 bits; comp[i].h and .v are &lt;=4 (checked earlier)</span></td>
        </tr>
        <tr>
          <td id="L3296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3296"></td>
          <td id="LC3296" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> so these muls can&#39;t overflow with 32-bit ints (which we require)</span></td>
        </tr>
        <tr>
          <td id="L3297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3297"></td>
          <td id="LC3297" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">w2</span> = z-&gt;<span class="pl-smi">img_mcu_x</span> * z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h</span> * <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L3298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3298"></td>
          <td id="LC3298" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h2</span> = z-&gt;<span class="pl-smi">img_mcu_y</span> * z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">v</span> * <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L3299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3299"></td>
          <td id="LC3299" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">coeff</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3300"></td>
          <td id="LC3300" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3301"></td>
          <td id="LC3301" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">linebuf</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3302"></td>
          <td id="LC3302" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_data</span> = <span class="pl-c1">stbi__malloc_mad2</span>(z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">w2</span>, z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h2</span>, <span class="pl-c1">15</span>);</td>
        </tr>
        <tr>
          <td id="L3303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3303"></td>
          <td id="LC3303" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_data</span> == <span class="pl-c1">NULL</span>)</td>
        </tr>
        <tr>
          <td id="L3304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3304"></td>
          <td id="LC3304" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__free_jpeg_components</span>(z, i+<span class="pl-c1">1</span>, <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3305"></td>
          <td id="LC3305" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> align blocks for idct using mmx/sse</span></td>
        </tr>
        <tr>
          <td id="L3306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3306"></td>
          <td id="LC3306" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">data</span> = (stbi_uc*) (((<span class="pl-c1">size_t</span>) z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_data</span> + <span class="pl-c1">15</span>) &amp; ~<span class="pl-c1">15</span>);</td>
        </tr>
        <tr>
          <td id="L3307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3307"></td>
          <td id="LC3307" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">progressive</span>) {</td>
        </tr>
        <tr>
          <td id="L3308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3308"></td>
          <td id="LC3308" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> w2, h2 are multiples of 8 (see above)</span></td>
        </tr>
        <tr>
          <td id="L3309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3309"></td>
          <td id="LC3309" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">coeff_w</span> = z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">w2</span> / <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L3310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3310"></td>
          <td id="LC3310" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">coeff_h</span> = z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h2</span> / <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L3311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3311"></td>
          <td id="LC3311" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span> = <span class="pl-c1">stbi__malloc_mad3</span>(z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">w2</span>, z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">h2</span>, <span class="pl-k">sizeof</span>(<span class="pl-k">short</span>), <span class="pl-c1">15</span>);</td>
        </tr>
        <tr>
          <td id="L3312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3312"></td>
          <td id="LC3312" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span> == <span class="pl-c1">NULL</span>)</td>
        </tr>
        <tr>
          <td id="L3313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3313"></td>
          <td id="LC3313" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__free_jpeg_components</span>(z, i+<span class="pl-c1">1</span>, <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3314"></td>
          <td id="LC3314" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">coeff</span> = (<span class="pl-k">short</span>*) (((<span class="pl-c1">size_t</span>) z-&gt;<span class="pl-smi">img_comp</span>[i].<span class="pl-smi">raw_coeff</span> + <span class="pl-c1">15</span>) &amp; ~<span class="pl-c1">15</span>);</td>
        </tr>
        <tr>
          <td id="L3315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3315"></td>
          <td id="LC3315" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3316"></td>
          <td id="LC3316" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3317"></td>
          <td id="LC3317" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3318"></td>
          <td id="LC3318" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3319"></td>
          <td id="LC3319" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3320"></td>
          <td id="LC3320" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3321"></td>
          <td id="LC3321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> use comparisons since in some cases we handle more than one case (e.g. SOF)</span></td>
        </tr>
        <tr>
          <td id="L3322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3322"></td>
          <td id="LC3322" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__DNL</span>(<span class="pl-v">x</span>)         ((x) == <span class="pl-c1">0xdc</span>)</td>
        </tr>
        <tr>
          <td id="L3323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3323"></td>
          <td id="LC3323" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__SOI</span>(<span class="pl-v">x</span>)         ((x) == <span class="pl-c1">0xd8</span>)</td>
        </tr>
        <tr>
          <td id="L3324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3324"></td>
          <td id="LC3324" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__EOI</span>(<span class="pl-v">x</span>)         ((x) == <span class="pl-c1">0xd9</span>)</td>
        </tr>
        <tr>
          <td id="L3325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3325"></td>
          <td id="LC3325" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__SOF</span>(<span class="pl-v">x</span>)         ((x) == <span class="pl-c1">0xc0</span> || (x) == <span class="pl-c1">0xc1</span> || (x) == <span class="pl-c1">0xc2</span>)</td>
        </tr>
        <tr>
          <td id="L3326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3326"></td>
          <td id="LC3326" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__SOS</span>(<span class="pl-v">x</span>)         ((x) == <span class="pl-c1">0xda</span>)</td>
        </tr>
        <tr>
          <td id="L3327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3327"></td>
          <td id="LC3327" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3328"></td>
          <td id="LC3328" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__SOF_progressive</span>(<span class="pl-v">x</span>)   ((x) == <span class="pl-c1">0xc2</span>)</td>
        </tr>
        <tr>
          <td id="L3329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3329"></td>
          <td id="LC3329" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3330"></td>
          <td id="LC3330" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__decode_jpeg_header</span>(stbi__jpeg *z, <span class="pl-k">int</span> scan)</td>
        </tr>
        <tr>
          <td id="L3331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3331"></td>
          <td id="LC3331" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3332"></td>
          <td id="LC3332" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> m;</td>
        </tr>
        <tr>
          <td id="L3333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3333"></td>
          <td id="LC3333" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">jfif</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3334"></td>
          <td id="LC3334" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">app14_color_transform</span> = -<span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> valid values are 0,1,2</span></td>
        </tr>
        <tr>
          <td id="L3335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3335"></td>
          <td id="LC3335" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">marker</span> = STBI__MARKER_none; <span class="pl-c"><span class="pl-c">//</span> initialize cached marker to empty</span></td>
        </tr>
        <tr>
          <td id="L3336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3336"></td>
          <td id="LC3336" class="blob-code blob-code-inner js-file-line">   m = <span class="pl-c1">stbi__get_marker</span>(z);</td>
        </tr>
        <tr>
          <td id="L3337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3337"></td>
          <td id="LC3337" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__SOI</span>(m)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no SOI<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3338"></td>
          <td id="LC3338" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (scan == STBI__SCAN_type) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3339"></td>
          <td id="LC3339" class="blob-code blob-code-inner js-file-line">   m = <span class="pl-c1">stbi__get_marker</span>(z);</td>
        </tr>
        <tr>
          <td id="L3340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3340"></td>
          <td id="LC3340" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (!<span class="pl-c1">stbi__SOF</span>(m)) {</td>
        </tr>
        <tr>
          <td id="L3341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3341"></td>
          <td id="LC3341" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!<span class="pl-c1">stbi__process_marker</span>(z,m)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3342"></td>
          <td id="LC3342" class="blob-code blob-code-inner js-file-line">      m = <span class="pl-c1">stbi__get_marker</span>(z);</td>
        </tr>
        <tr>
          <td id="L3343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3343"></td>
          <td id="LC3343" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (m == STBI__MARKER_none) {</td>
        </tr>
        <tr>
          <td id="L3344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3344"></td>
          <td id="LC3344" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> some files have extra padding after their blocks, so ok, we&#39;ll scan</span></td>
        </tr>
        <tr>
          <td id="L3345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3345"></td>
          <td id="LC3345" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(z-&gt;<span class="pl-smi">s</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no SOF<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3346"></td>
          <td id="LC3346" class="blob-code blob-code-inner js-file-line">         m = <span class="pl-c1">stbi__get_marker</span>(z);</td>
        </tr>
        <tr>
          <td id="L3347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3347"></td>
          <td id="LC3347" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3348"></td>
          <td id="LC3348" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3349"></td>
          <td id="LC3349" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">progressive</span> = <span class="pl-c1">stbi__SOF_progressive</span>(m);</td>
        </tr>
        <tr>
          <td id="L3350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3350"></td>
          <td id="LC3350" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__process_frame_header</span>(z, scan)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3351"></td>
          <td id="LC3351" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3352"></td>
          <td id="LC3352" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3353"></td>
          <td id="LC3353" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3354"></td>
          <td id="LC3354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> decode image to YCbCr format</span></td>
        </tr>
        <tr>
          <td id="L3355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3355"></td>
          <td id="LC3355" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__decode_jpeg_image</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L3356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3356"></td>
          <td id="LC3356" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3357"></td>
          <td id="LC3357" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> m;</td>
        </tr>
        <tr>
          <td id="L3358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3358"></td>
          <td id="LC3358" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (m = <span class="pl-c1">0</span>; m &lt; <span class="pl-c1">4</span>; m++) {</td>
        </tr>
        <tr>
          <td id="L3359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3359"></td>
          <td id="LC3359" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">img_comp</span>[m].<span class="pl-smi">raw_data</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3360"></td>
          <td id="LC3360" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">img_comp</span>[m].<span class="pl-smi">raw_coeff</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L3361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3361"></td>
          <td id="LC3361" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3362"></td>
          <td id="LC3362" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">restart_interval</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3363"></td>
          <td id="LC3363" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__decode_jpeg_header</span>(j, STBI__SCAN_load)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3364"></td>
          <td id="LC3364" class="blob-code blob-code-inner js-file-line">   m = <span class="pl-c1">stbi__get_marker</span>(j);</td>
        </tr>
        <tr>
          <td id="L3365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3365"></td>
          <td id="LC3365" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (!<span class="pl-c1">stbi__EOI</span>(m)) {</td>
        </tr>
        <tr>
          <td id="L3366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3366"></td>
          <td id="LC3366" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__SOS</span>(m)) {</td>
        </tr>
        <tr>
          <td id="L3367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3367"></td>
          <td id="LC3367" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!<span class="pl-c1">stbi__process_scan_header</span>(j)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3368"></td>
          <td id="LC3368" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!<span class="pl-c1">stbi__parse_entropy_coded_data</span>(j)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3369"></td>
          <td id="LC3369" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">marker</span> == STBI__MARKER_none ) {</td>
        </tr>
        <tr>
          <td id="L3370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3370"></td>
          <td id="LC3370" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> handle 0s at the end of image data from IP Kamera 9060</span></td>
        </tr>
        <tr>
          <td id="L3371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3371"></td>
          <td id="LC3371" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (!<span class="pl-c1">stbi__at_eof</span>(j-&gt;<span class="pl-smi">s</span>)) {</td>
        </tr>
        <tr>
          <td id="L3372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3372"></td>
          <td id="LC3372" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> x = <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3373"></td>
          <td id="LC3373" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (x == <span class="pl-c1">255</span>) {</td>
        </tr>
        <tr>
          <td id="L3374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3374"></td>
          <td id="LC3374" class="blob-code blob-code-inner js-file-line">                  j-&gt;<span class="pl-smi">marker</span> = <span class="pl-c1">stbi__get8</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3375"></td>
          <td id="LC3375" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L3376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3376"></td>
          <td id="LC3376" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3377"></td>
          <td id="LC3377" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3378"></td>
          <td id="LC3378" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> if we reach eof without hitting a marker, stbi__get_marker() below will fail and we&#39;ll eventually return 0</span></td>
        </tr>
        <tr>
          <td id="L3379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3379"></td>
          <td id="LC3379" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3380"></td>
          <td id="LC3380" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-c1">stbi__DNL</span>(m)) {</td>
        </tr>
        <tr>
          <td id="L3381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3381"></td>
          <td id="LC3381" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> Ld = <span class="pl-c1">stbi__get16be</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3382"></td>
          <td id="LC3382" class="blob-code blob-code-inner js-file-line">         stbi__uint32 NL = <span class="pl-c1">stbi__get16be</span>(j-&gt;<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L3383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3383"></td>
          <td id="LC3383" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (Ld != <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DNL len<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3384"></td>
          <td id="LC3384" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (NL != j-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad DNL height<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt JPEG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3385"></td>
          <td id="LC3385" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3386"></td>
          <td id="LC3386" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!<span class="pl-c1">stbi__process_marker</span>(j, m)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3387"></td>
          <td id="LC3387" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3388"></td>
          <td id="LC3388" class="blob-code blob-code-inner js-file-line">      m = <span class="pl-c1">stbi__get_marker</span>(j);</td>
        </tr>
        <tr>
          <td id="L3389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3389"></td>
          <td id="LC3389" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3390"></td>
          <td id="LC3390" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (j-&gt;<span class="pl-smi">progressive</span>)</td>
        </tr>
        <tr>
          <td id="L3391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3391"></td>
          <td id="LC3391" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__jpeg_finish</span>(j);</td>
        </tr>
        <tr>
          <td id="L3392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3392"></td>
          <td id="LC3392" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3393"></td>
          <td id="LC3393" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3394"></td>
          <td id="LC3394" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3395"></td>
          <td id="LC3395" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> static jfif-centered resampling (across block boundaries)</span></td>
        </tr>
        <tr>
          <td id="L3396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3396"></td>
          <td id="LC3396" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3397"></td>
          <td id="LC3397" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,</td>
        </tr>
        <tr>
          <td id="L3398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3398"></td>
          <td id="LC3398" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs);</td>
        </tr>
        <tr>
          <td id="L3399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3399"></td>
          <td id="LC3399" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3400"></td>
          <td id="LC3400" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__div4</span>(<span class="pl-v">x</span>) ((stbi_uc) ((x) &gt;&gt; <span class="pl-c1">2</span>))</td>
        </tr>
        <tr>
          <td id="L3401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3401"></td>
          <td id="LC3401" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3402"></td>
          <td id="LC3402" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">resample_row_1</span>(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs)</td>
        </tr>
        <tr>
          <td id="L3403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3403"></td>
          <td id="LC3403" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3404"></td>
          <td id="LC3404" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(out);</td>
        </tr>
        <tr>
          <td id="L3405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3405"></td>
          <td id="LC3405" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(in_far);</td>
        </tr>
        <tr>
          <td id="L3406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3406"></td>
          <td id="LC3406" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(w);</td>
        </tr>
        <tr>
          <td id="L3407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3407"></td>
          <td id="LC3407" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(hs);</td>
        </tr>
        <tr>
          <td id="L3408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3408"></td>
          <td id="LC3408" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> in_near;</td>
        </tr>
        <tr>
          <td id="L3409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3409"></td>
          <td id="LC3409" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3410"></td>
          <td id="LC3410" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3411"></td>
          <td id="LC3411" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc* <span class="pl-c1">stbi__resample_row_v_2</span>(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs)</td>
        </tr>
        <tr>
          <td id="L3412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3412"></td>
          <td id="LC3412" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3413"></td>
          <td id="LC3413" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> need to generate two samples vertically for every one in input</span></td>
        </tr>
        <tr>
          <td id="L3414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3414"></td>
          <td id="LC3414" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3415"></td>
          <td id="LC3415" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(hs);</td>
        </tr>
        <tr>
          <td id="L3416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3416"></td>
          <td id="LC3416" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w; ++i)</td>
        </tr>
        <tr>
          <td id="L3417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3417"></td>
          <td id="LC3417" class="blob-code blob-code-inner js-file-line">      out[i] = <span class="pl-c1">stbi__div4</span>(<span class="pl-c1">3</span>*in_near[i] + in_far[i] + <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3418"></td>
          <td id="LC3418" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3419"></td>
          <td id="LC3419" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3420"></td>
          <td id="LC3420" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3421"></td>
          <td id="LC3421" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc*  <span class="pl-c1">stbi__resample_row_h_2</span>(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs)</td>
        </tr>
        <tr>
          <td id="L3422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3422"></td>
          <td id="LC3422" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3423"></td>
          <td id="LC3423" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> need to generate two samples horizontally for every one in input</span></td>
        </tr>
        <tr>
          <td id="L3424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3424"></td>
          <td id="LC3424" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3425"></td>
          <td id="LC3425" class="blob-code blob-code-inner js-file-line">   stbi_uc *input = in_near;</td>
        </tr>
        <tr>
          <td id="L3426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3426"></td>
          <td id="LC3426" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3427"></td>
          <td id="LC3427" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (w == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L3428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3428"></td>
          <td id="LC3428" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> if only one sample, can&#39;t do any interpolation</span></td>
        </tr>
        <tr>
          <td id="L3429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3429"></td>
          <td id="LC3429" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">0</span>] = out[<span class="pl-c1">1</span>] = input[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L3430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3430"></td>
          <td id="LC3430" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3431"></td>
          <td id="LC3431" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3432"></td>
          <td id="LC3432" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3433"></td>
          <td id="LC3433" class="blob-code blob-code-inner js-file-line">   out[<span class="pl-c1">0</span>] = input[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L3434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3434"></td>
          <td id="LC3434" class="blob-code blob-code-inner js-file-line">   out[<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div4</span>(input[<span class="pl-c1">0</span>]*<span class="pl-c1">3</span> + input[<span class="pl-c1">1</span>] + <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3435"></td>
          <td id="LC3435" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">1</span>; i &lt; w-<span class="pl-c1">1</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3436"></td>
          <td id="LC3436" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> n = <span class="pl-c1">3</span>*input[i]+<span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L3437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3437"></td>
          <td id="LC3437" class="blob-code blob-code-inner js-file-line">      out[i*<span class="pl-c1">2</span>+<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__div4</span>(n+input[i-<span class="pl-c1">1</span>]);</td>
        </tr>
        <tr>
          <td id="L3438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3438"></td>
          <td id="LC3438" class="blob-code blob-code-inner js-file-line">      out[i*<span class="pl-c1">2</span>+<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div4</span>(n+input[i+<span class="pl-c1">1</span>]);</td>
        </tr>
        <tr>
          <td id="L3439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3439"></td>
          <td id="LC3439" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3440"></td>
          <td id="LC3440" class="blob-code blob-code-inner js-file-line">   out[i*<span class="pl-c1">2</span>+<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__div4</span>(input[w-<span class="pl-c1">2</span>]*<span class="pl-c1">3</span> + input[w-<span class="pl-c1">1</span>] + <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3441"></td>
          <td id="LC3441" class="blob-code blob-code-inner js-file-line">   out[i*<span class="pl-c1">2</span>+<span class="pl-c1">1</span>] = input[w-<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L3442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3442"></td>
          <td id="LC3442" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3443"></td>
          <td id="LC3443" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(in_far);</td>
        </tr>
        <tr>
          <td id="L3444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3444"></td>
          <td id="LC3444" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(hs);</td>
        </tr>
        <tr>
          <td id="L3445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3445"></td>
          <td id="LC3445" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3446"></td>
          <td id="LC3446" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3447"></td>
          <td id="LC3447" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3448"></td>
          <td id="LC3448" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3449"></td>
          <td id="LC3449" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__div16</span>(<span class="pl-v">x</span>) ((stbi_uc) ((x) &gt;&gt; <span class="pl-c1">4</span>))</td>
        </tr>
        <tr>
          <td id="L3450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3450"></td>
          <td id="LC3450" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3451"></td>
          <td id="LC3451" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__resample_row_hv_2</span>(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs)</td>
        </tr>
        <tr>
          <td id="L3452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3452"></td>
          <td id="LC3452" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3453"></td>
          <td id="LC3453" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> need to generate 2x2 samples for every one in input</span></td>
        </tr>
        <tr>
          <td id="L3454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3454"></td>
          <td id="LC3454" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,t0,t1;</td>
        </tr>
        <tr>
          <td id="L3455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3455"></td>
          <td id="LC3455" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (w == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L3456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3456"></td>
          <td id="LC3456" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">0</span>] = out[<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div4</span>(<span class="pl-c1">3</span>*in_near[<span class="pl-c1">0</span>] + in_far[<span class="pl-c1">0</span>] + <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3457"></td>
          <td id="LC3457" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3458"></td>
          <td id="LC3458" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3459"></td>
          <td id="LC3459" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3460"></td>
          <td id="LC3460" class="blob-code blob-code-inner js-file-line">   t1 = <span class="pl-c1">3</span>*in_near[<span class="pl-c1">0</span>] + in_far[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L3461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3461"></td>
          <td id="LC3461" class="blob-code blob-code-inner js-file-line">   out[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__div4</span>(t1+<span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3462"></td>
          <td id="LC3462" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">1</span>; i &lt; w; ++i) {</td>
        </tr>
        <tr>
          <td id="L3463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3463"></td>
          <td id="LC3463" class="blob-code blob-code-inner js-file-line">      t0 = t1;</td>
        </tr>
        <tr>
          <td id="L3464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3464"></td>
          <td id="LC3464" class="blob-code blob-code-inner js-file-line">      t1 = <span class="pl-c1">3</span>*in_near[i]+in_far[i];</td>
        </tr>
        <tr>
          <td id="L3465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3465"></td>
          <td id="LC3465" class="blob-code blob-code-inner js-file-line">      out[i*<span class="pl-c1">2</span>-<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div16</span>(<span class="pl-c1">3</span>*t0 + t1 + <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3466"></td>
          <td id="LC3466" class="blob-code blob-code-inner js-file-line">      out[i*<span class="pl-c1">2</span>  ] = <span class="pl-c1">stbi__div16</span>(<span class="pl-c1">3</span>*t1 + t0 + <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3467"></td>
          <td id="LC3467" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3468"></td>
          <td id="LC3468" class="blob-code blob-code-inner js-file-line">   out[w*<span class="pl-c1">2</span>-<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div4</span>(t1+<span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3469"></td>
          <td id="LC3469" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3470"></td>
          <td id="LC3470" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(hs);</td>
        </tr>
        <tr>
          <td id="L3471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3471"></td>
          <td id="LC3471" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3472"></td>
          <td id="LC3472" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3473"></td>
          <td id="LC3473" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3474"></td>
          <td id="LC3474" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3475"></td>
          <td id="LC3475" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_SSE2) || defined(STBI_NEON)</td>
        </tr>
        <tr>
          <td id="L3476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3476"></td>
          <td id="LC3476" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__resample_row_hv_2_simd</span>(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs)</td>
        </tr>
        <tr>
          <td id="L3477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3477"></td>
          <td id="LC3477" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3478"></td>
          <td id="LC3478" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> need to generate 2x2 samples for every one in input</span></td>
        </tr>
        <tr>
          <td id="L3479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3479"></td>
          <td id="LC3479" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i=<span class="pl-c1">0</span>,t0,t1;</td>
        </tr>
        <tr>
          <td id="L3480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3480"></td>
          <td id="LC3480" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3481"></td>
          <td id="LC3481" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (w == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L3482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3482"></td>
          <td id="LC3482" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">0</span>] = out[<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div4</span>(<span class="pl-c1">3</span>*in_near[<span class="pl-c1">0</span>] + in_far[<span class="pl-c1">0</span>] + <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3483"></td>
          <td id="LC3483" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3484"></td>
          <td id="LC3484" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3485"></td>
          <td id="LC3485" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3486"></td>
          <td id="LC3486" class="blob-code blob-code-inner js-file-line">   t1 = <span class="pl-c1">3</span>*in_near[<span class="pl-c1">0</span>] + in_far[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L3487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3487"></td>
          <td id="LC3487" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> process groups of 8 pixels for as long as we can.</span></td>
        </tr>
        <tr>
          <td id="L3488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3488"></td>
          <td id="LC3488" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> note we can&#39;t handle the last pixel in a row in this loop</span></td>
        </tr>
        <tr>
          <td id="L3489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3489"></td>
          <td id="LC3489" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> because we need to handle the filter boundary conditions.</span></td>
        </tr>
        <tr>
          <td id="L3490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3490"></td>
          <td id="LC3490" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (; i &lt; ((w-<span class="pl-c1">1</span>) &amp; ~<span class="pl-c1">7</span>); i += <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L3491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3491"></td>
          <td id="LC3491" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_SSE2)</td>
        </tr>
        <tr>
          <td id="L3492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3492"></td>
          <td id="LC3492" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> load and perform the vertical filtering pass</span></td>
        </tr>
        <tr>
          <td id="L3493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3493"></td>
          <td id="LC3493" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> this uses 3*x + y = 4*x + (y - x)</span></td>
        </tr>
        <tr>
          <td id="L3494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3494"></td>
          <td id="LC3494" class="blob-code blob-code-inner js-file-line">      __m128i zero  = <span class="pl-c1">_mm_setzero_si128</span>();</td>
        </tr>
        <tr>
          <td id="L3495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3495"></td>
          <td id="LC3495" class="blob-code blob-code-inner js-file-line">      __m128i farb  = <span class="pl-c1">_mm_loadl_epi64</span>((__m128i *) (in_far + i));</td>
        </tr>
        <tr>
          <td id="L3496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3496"></td>
          <td id="LC3496" class="blob-code blob-code-inner js-file-line">      __m128i nearb = <span class="pl-c1">_mm_loadl_epi64</span>((__m128i *) (in_near + i));</td>
        </tr>
        <tr>
          <td id="L3497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3497"></td>
          <td id="LC3497" class="blob-code blob-code-inner js-file-line">      __m128i farw  = <span class="pl-c1">_mm_unpacklo_epi8</span>(farb, zero);</td>
        </tr>
        <tr>
          <td id="L3498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3498"></td>
          <td id="LC3498" class="blob-code blob-code-inner js-file-line">      __m128i nearw = <span class="pl-c1">_mm_unpacklo_epi8</span>(nearb, zero);</td>
        </tr>
        <tr>
          <td id="L3499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3499"></td>
          <td id="LC3499" class="blob-code blob-code-inner js-file-line">      __m128i diff  = <span class="pl-c1">_mm_sub_epi16</span>(farw, nearw);</td>
        </tr>
        <tr>
          <td id="L3500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3500"></td>
          <td id="LC3500" class="blob-code blob-code-inner js-file-line">      __m128i nears = <span class="pl-c1">_mm_slli_epi16</span>(nearw, <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3501"></td>
          <td id="LC3501" class="blob-code blob-code-inner js-file-line">      __m128i curr  = <span class="pl-c1">_mm_add_epi16</span>(nears, diff); <span class="pl-c"><span class="pl-c">//</span> current row</span></td>
        </tr>
        <tr>
          <td id="L3502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3502"></td>
          <td id="LC3502" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3503"></td>
          <td id="LC3503" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> horizontal filter works the same based on shifted vers of current</span></td>
        </tr>
        <tr>
          <td id="L3504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3504"></td>
          <td id="LC3504" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> row. &quot;prev&quot; is current row shifted right by 1 pixel; we need to</span></td>
        </tr>
        <tr>
          <td id="L3505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3505"></td>
          <td id="LC3505" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> insert the previous pixel value (from t1).</span></td>
        </tr>
        <tr>
          <td id="L3506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3506"></td>
          <td id="LC3506" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> &quot;next&quot; is current row shifted left by 1 pixel, with first pixel</span></td>
        </tr>
        <tr>
          <td id="L3507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3507"></td>
          <td id="LC3507" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> of next block of 8 pixels added in.</span></td>
        </tr>
        <tr>
          <td id="L3508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3508"></td>
          <td id="LC3508" class="blob-code blob-code-inner js-file-line">      __m128i prv0 = <span class="pl-c1">_mm_slli_si128</span>(curr, <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3509"></td>
          <td id="LC3509" class="blob-code blob-code-inner js-file-line">      __m128i nxt0 = <span class="pl-c1">_mm_srli_si128</span>(curr, <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3510"></td>
          <td id="LC3510" class="blob-code blob-code-inner js-file-line">      __m128i prev = <span class="pl-c1">_mm_insert_epi16</span>(prv0, t1, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L3511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3511"></td>
          <td id="LC3511" class="blob-code blob-code-inner js-file-line">      __m128i next = <span class="pl-c1">_mm_insert_epi16</span>(nxt0, <span class="pl-c1">3</span>*in_near[i+<span class="pl-c1">8</span>] + in_far[i+<span class="pl-c1">8</span>], <span class="pl-c1">7</span>);</td>
        </tr>
        <tr>
          <td id="L3512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3512"></td>
          <td id="LC3512" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3513"></td>
          <td id="LC3513" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> horizontal filter, polyphase implementation since it&#39;s convenient:</span></td>
        </tr>
        <tr>
          <td id="L3514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3514"></td>
          <td id="LC3514" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> even pixels = 3*cur + prev = cur*4 + (prev - cur)</span></td>
        </tr>
        <tr>
          <td id="L3515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3515"></td>
          <td id="LC3515" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> odd  pixels = 3*cur + next = cur*4 + (next - cur)</span></td>
        </tr>
        <tr>
          <td id="L3516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3516"></td>
          <td id="LC3516" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> note the shared term.</span></td>
        </tr>
        <tr>
          <td id="L3517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3517"></td>
          <td id="LC3517" class="blob-code blob-code-inner js-file-line">      __m128i bias  = <span class="pl-c1">_mm_set1_epi16</span>(<span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3518"></td>
          <td id="LC3518" class="blob-code blob-code-inner js-file-line">      __m128i curs = <span class="pl-c1">_mm_slli_epi16</span>(curr, <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3519"></td>
          <td id="LC3519" class="blob-code blob-code-inner js-file-line">      __m128i prvd = <span class="pl-c1">_mm_sub_epi16</span>(prev, curr);</td>
        </tr>
        <tr>
          <td id="L3520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3520"></td>
          <td id="LC3520" class="blob-code blob-code-inner js-file-line">      __m128i nxtd = <span class="pl-c1">_mm_sub_epi16</span>(next, curr);</td>
        </tr>
        <tr>
          <td id="L3521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3521"></td>
          <td id="LC3521" class="blob-code blob-code-inner js-file-line">      __m128i curb = <span class="pl-c1">_mm_add_epi16</span>(curs, bias);</td>
        </tr>
        <tr>
          <td id="L3522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3522"></td>
          <td id="LC3522" class="blob-code blob-code-inner js-file-line">      __m128i even = <span class="pl-c1">_mm_add_epi16</span>(prvd, curb);</td>
        </tr>
        <tr>
          <td id="L3523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3523"></td>
          <td id="LC3523" class="blob-code blob-code-inner js-file-line">      __m128i odd  = <span class="pl-c1">_mm_add_epi16</span>(nxtd, curb);</td>
        </tr>
        <tr>
          <td id="L3524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3524"></td>
          <td id="LC3524" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3525"></td>
          <td id="LC3525" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> interleave even and odd pixels, then undo scaling.</span></td>
        </tr>
        <tr>
          <td id="L3526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3526"></td>
          <td id="LC3526" class="blob-code blob-code-inner js-file-line">      __m128i int0 = <span class="pl-c1">_mm_unpacklo_epi16</span>(even, odd);</td>
        </tr>
        <tr>
          <td id="L3527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3527"></td>
          <td id="LC3527" class="blob-code blob-code-inner js-file-line">      __m128i int1 = <span class="pl-c1">_mm_unpackhi_epi16</span>(even, odd);</td>
        </tr>
        <tr>
          <td id="L3528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3528"></td>
          <td id="LC3528" class="blob-code blob-code-inner js-file-line">      __m128i de0  = <span class="pl-c1">_mm_srli_epi16</span>(int0, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3529"></td>
          <td id="LC3529" class="blob-code blob-code-inner js-file-line">      __m128i de1  = <span class="pl-c1">_mm_srli_epi16</span>(int1, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3530"></td>
          <td id="LC3530" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3531"></td>
          <td id="LC3531" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pack and write output</span></td>
        </tr>
        <tr>
          <td id="L3532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3532"></td>
          <td id="LC3532" class="blob-code blob-code-inner js-file-line">      __m128i outv = <span class="pl-c1">_mm_packus_epi16</span>(de0, de1);</td>
        </tr>
        <tr>
          <td id="L3533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3533"></td>
          <td id="LC3533" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">_mm_storeu_si128</span>((__m128i *) (out + i*<span class="pl-c1">2</span>), outv);</td>
        </tr>
        <tr>
          <td id="L3534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3534"></td>
          <td id="LC3534" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> defined(STBI_NEON)</td>
        </tr>
        <tr>
          <td id="L3535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3535"></td>
          <td id="LC3535" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> load and perform the vertical filtering pass</span></td>
        </tr>
        <tr>
          <td id="L3536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3536"></td>
          <td id="LC3536" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> this uses 3*x + y = 4*x + (y - x)</span></td>
        </tr>
        <tr>
          <td id="L3537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3537"></td>
          <td id="LC3537" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> farb  = <span class="pl-c1">vld1_u8</span>(in_far + i);</td>
        </tr>
        <tr>
          <td id="L3538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3538"></td>
          <td id="LC3538" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> nearb = <span class="pl-c1">vld1_u8</span>(in_near + i);</td>
        </tr>
        <tr>
          <td id="L3539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3539"></td>
          <td id="LC3539" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> diff  = <span class="pl-c1">vreinterpretq_s16_u16</span>(<span class="pl-c1">vsubl_u8</span>(farb, nearb));</td>
        </tr>
        <tr>
          <td id="L3540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3540"></td>
          <td id="LC3540" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> nears = <span class="pl-c1">vreinterpretq_s16_u16</span>(<span class="pl-c1">vshll_n_u8</span>(nearb, <span class="pl-c1">2</span>));</td>
        </tr>
        <tr>
          <td id="L3541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3541"></td>
          <td id="LC3541" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> curr  = <span class="pl-c1">vaddq_s16</span>(nears, diff); <span class="pl-c"><span class="pl-c">//</span> current row</span></td>
        </tr>
        <tr>
          <td id="L3542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3542"></td>
          <td id="LC3542" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3543"></td>
          <td id="LC3543" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> horizontal filter works the same based on shifted vers of current</span></td>
        </tr>
        <tr>
          <td id="L3544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3544"></td>
          <td id="LC3544" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> row. &quot;prev&quot; is current row shifted right by 1 pixel; we need to</span></td>
        </tr>
        <tr>
          <td id="L3545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3545"></td>
          <td id="LC3545" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> insert the previous pixel value (from t1).</span></td>
        </tr>
        <tr>
          <td id="L3546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3546"></td>
          <td id="LC3546" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> &quot;next&quot; is current row shifted left by 1 pixel, with first pixel</span></td>
        </tr>
        <tr>
          <td id="L3547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3547"></td>
          <td id="LC3547" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> of next block of 8 pixels added in.</span></td>
        </tr>
        <tr>
          <td id="L3548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3548"></td>
          <td id="LC3548" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> prv0 = <span class="pl-c1">vextq_s16</span>(curr, curr, <span class="pl-c1">7</span>);</td>
        </tr>
        <tr>
          <td id="L3549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3549"></td>
          <td id="LC3549" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> nxt0 = <span class="pl-c1">vextq_s16</span>(curr, curr, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L3550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3550"></td>
          <td id="LC3550" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> prev = <span class="pl-c1">vsetq_lane_s16</span>(t1, prv0, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L3551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3551"></td>
          <td id="LC3551" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> next = <span class="pl-c1">vsetq_lane_s16</span>(<span class="pl-c1">3</span>*in_near[i+<span class="pl-c1">8</span>] + in_far[i+<span class="pl-c1">8</span>], nxt0, <span class="pl-c1">7</span>);</td>
        </tr>
        <tr>
          <td id="L3552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3552"></td>
          <td id="LC3552" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3553"></td>
          <td id="LC3553" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> horizontal filter, polyphase implementation since it&#39;s convenient:</span></td>
        </tr>
        <tr>
          <td id="L3554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3554"></td>
          <td id="LC3554" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> even pixels = 3*cur + prev = cur*4 + (prev - cur)</span></td>
        </tr>
        <tr>
          <td id="L3555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3555"></td>
          <td id="LC3555" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> odd  pixels = 3*cur + next = cur*4 + (next - cur)</span></td>
        </tr>
        <tr>
          <td id="L3556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3556"></td>
          <td id="LC3556" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> note the shared term.</span></td>
        </tr>
        <tr>
          <td id="L3557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3557"></td>
          <td id="LC3557" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> curs = <span class="pl-c1">vshlq_n_s16</span>(curr, <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3558"></td>
          <td id="LC3558" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> prvd = <span class="pl-c1">vsubq_s16</span>(prev, curr);</td>
        </tr>
        <tr>
          <td id="L3559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3559"></td>
          <td id="LC3559" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> nxtd = <span class="pl-c1">vsubq_s16</span>(next, curr);</td>
        </tr>
        <tr>
          <td id="L3560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3560"></td>
          <td id="LC3560" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> even = <span class="pl-c1">vaddq_s16</span>(curs, prvd);</td>
        </tr>
        <tr>
          <td id="L3561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3561"></td>
          <td id="LC3561" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> odd  = <span class="pl-c1">vaddq_s16</span>(curs, nxtd);</td>
        </tr>
        <tr>
          <td id="L3562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3562"></td>
          <td id="LC3562" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3563"></td>
          <td id="LC3563" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> undo scaling and round, then store with even/odd phases interleaved</span></td>
        </tr>
        <tr>
          <td id="L3564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3564"></td>
          <td id="LC3564" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8x2_t</span> o;</td>
        </tr>
        <tr>
          <td id="L3565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3565"></td>
          <td id="LC3565" class="blob-code blob-code-inner js-file-line">      o.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>] = <span class="pl-c1">vqrshrun_n_s16</span>(even, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3566"></td>
          <td id="LC3566" class="blob-code blob-code-inner js-file-line">      o.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>] = <span class="pl-c1">vqrshrun_n_s16</span>(odd,  <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3567"></td>
          <td id="LC3567" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">vst2_u8</span>(out + i*<span class="pl-c1">2</span>, o);</td>
        </tr>
        <tr>
          <td id="L3568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3568"></td>
          <td id="LC3568" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3569"></td>
          <td id="LC3569" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3570"></td>
          <td id="LC3570" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> &quot;previous&quot; value for next iter</span></td>
        </tr>
        <tr>
          <td id="L3571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3571"></td>
          <td id="LC3571" class="blob-code blob-code-inner js-file-line">      t1 = <span class="pl-c1">3</span>*in_near[i+<span class="pl-c1">7</span>] + in_far[i+<span class="pl-c1">7</span>];</td>
        </tr>
        <tr>
          <td id="L3572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3572"></td>
          <td id="LC3572" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3573"></td>
          <td id="LC3573" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3574"></td>
          <td id="LC3574" class="blob-code blob-code-inner js-file-line">   t0 = t1;</td>
        </tr>
        <tr>
          <td id="L3575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3575"></td>
          <td id="LC3575" class="blob-code blob-code-inner js-file-line">   t1 = <span class="pl-c1">3</span>*in_near[i] + in_far[i];</td>
        </tr>
        <tr>
          <td id="L3576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3576"></td>
          <td id="LC3576" class="blob-code blob-code-inner js-file-line">   out[i*<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__div16</span>(<span class="pl-c1">3</span>*t1 + t0 + <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3577"></td>
          <td id="LC3577" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3578"></td>
          <td id="LC3578" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (++i; i &lt; w; ++i) {</td>
        </tr>
        <tr>
          <td id="L3579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3579"></td>
          <td id="LC3579" class="blob-code blob-code-inner js-file-line">      t0 = t1;</td>
        </tr>
        <tr>
          <td id="L3580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3580"></td>
          <td id="LC3580" class="blob-code blob-code-inner js-file-line">      t1 = <span class="pl-c1">3</span>*in_near[i]+in_far[i];</td>
        </tr>
        <tr>
          <td id="L3581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3581"></td>
          <td id="LC3581" class="blob-code blob-code-inner js-file-line">      out[i*<span class="pl-c1">2</span>-<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div16</span>(<span class="pl-c1">3</span>*t0 + t1 + <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3582"></td>
          <td id="LC3582" class="blob-code blob-code-inner js-file-line">      out[i*<span class="pl-c1">2</span>  ] = <span class="pl-c1">stbi__div16</span>(<span class="pl-c1">3</span>*t1 + t0 + <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3583"></td>
          <td id="LC3583" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3584"></td>
          <td id="LC3584" class="blob-code blob-code-inner js-file-line">   out[w*<span class="pl-c1">2</span>-<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__div4</span>(t1+<span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L3585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3585"></td>
          <td id="LC3585" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3586"></td>
          <td id="LC3586" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(hs);</td>
        </tr>
        <tr>
          <td id="L3587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3587"></td>
          <td id="LC3587" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3588"></td>
          <td id="LC3588" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3589"></td>
          <td id="LC3589" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3590"></td>
          <td id="LC3590" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3591"></td>
          <td id="LC3591" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3592"></td>
          <td id="LC3592" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__resample_row_generic</span>(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, <span class="pl-k">int</span> w, <span class="pl-k">int</span> hs)</td>
        </tr>
        <tr>
          <td id="L3593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3593"></td>
          <td id="LC3593" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3594"></td>
          <td id="LC3594" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> resample with nearest-neighbor</span></td>
        </tr>
        <tr>
          <td id="L3595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3595"></td>
          <td id="LC3595" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,j;</td>
        </tr>
        <tr>
          <td id="L3596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3596"></td>
          <td id="LC3596" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(in_far);</td>
        </tr>
        <tr>
          <td id="L3597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3597"></td>
          <td id="LC3597" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w; ++i)</td>
        </tr>
        <tr>
          <td id="L3598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3598"></td>
          <td id="LC3598" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; hs; ++j)</td>
        </tr>
        <tr>
          <td id="L3599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3599"></td>
          <td id="LC3599" class="blob-code blob-code-inner js-file-line">         out[i*hs+j] = in_near[i];</td>
        </tr>
        <tr>
          <td id="L3600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3600"></td>
          <td id="LC3600" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L3601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3601"></td>
          <td id="LC3601" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3602"></td>
          <td id="LC3602" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3603"></td>
          <td id="LC3603" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this is a reduced-precision calculation of YCbCr-to-RGB introduced</span></td>
        </tr>
        <tr>
          <td id="L3604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3604"></td>
          <td id="LC3604" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> to make sure the code produces the same results in both SIMD and scalar</span></td>
        </tr>
        <tr>
          <td id="L3605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3605"></td>
          <td id="LC3605" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__float2fixed</span>(<span class="pl-v">x</span>)  (((<span class="pl-k">int</span>) ((x) * <span class="pl-c1">4096</span>.<span class="pl-c1">0f</span> + <span class="pl-c1">0</span>.<span class="pl-c1">5f</span>)) &lt;&lt; <span class="pl-c1">8</span>)</td>
        </tr>
        <tr>
          <td id="L3606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3606"></td>
          <td id="LC3606" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__YCbCr_to_RGB_row</span>(stbi_uc *out, <span class="pl-k">const</span> stbi_uc *y, <span class="pl-k">const</span> stbi_uc *pcb, <span class="pl-k">const</span> stbi_uc *pcr, <span class="pl-k">int</span> count, <span class="pl-k">int</span> step)</td>
        </tr>
        <tr>
          <td id="L3607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3607"></td>
          <td id="LC3607" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3608"></td>
          <td id="LC3608" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L3609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3609"></td>
          <td id="LC3609" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; count; ++i) {</td>
        </tr>
        <tr>
          <td id="L3610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3610"></td>
          <td id="LC3610" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> y_fixed = (y[i] &lt;&lt; <span class="pl-c1">20</span>) + (<span class="pl-c1">1</span>&lt;&lt;<span class="pl-c1">19</span>); <span class="pl-c"><span class="pl-c">//</span> rounding</span></td>
        </tr>
        <tr>
          <td id="L3611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3611"></td>
          <td id="LC3611" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> r,g,b;</td>
        </tr>
        <tr>
          <td id="L3612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3612"></td>
          <td id="LC3612" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> cr = pcr[i] - <span class="pl-c1">128</span>;</td>
        </tr>
        <tr>
          <td id="L3613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3613"></td>
          <td id="LC3613" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> cb = pcb[i] - <span class="pl-c1">128</span>;</td>
        </tr>
        <tr>
          <td id="L3614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3614"></td>
          <td id="LC3614" class="blob-code blob-code-inner js-file-line">      r = y_fixed +  cr* <span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">1</span>.<span class="pl-c1">40200f</span>);</td>
        </tr>
        <tr>
          <td id="L3615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3615"></td>
          <td id="LC3615" class="blob-code blob-code-inner js-file-line">      g = y_fixed + (cr*-<span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">0</span>.<span class="pl-c1">71414f</span>)) + ((cb*-<span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">0</span>.<span class="pl-c1">34414f</span>)) &amp; <span class="pl-c1">0xffff0000</span>);</td>
        </tr>
        <tr>
          <td id="L3616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3616"></td>
          <td id="LC3616" class="blob-code blob-code-inner js-file-line">      b = y_fixed                                     +   cb* <span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">1</span>.<span class="pl-c1">77200f</span>);</td>
        </tr>
        <tr>
          <td id="L3617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3617"></td>
          <td id="LC3617" class="blob-code blob-code-inner js-file-line">      r &gt;&gt;= <span class="pl-c1">20</span>;</td>
        </tr>
        <tr>
          <td id="L3618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3618"></td>
          <td id="LC3618" class="blob-code blob-code-inner js-file-line">      g &gt;&gt;= <span class="pl-c1">20</span>;</td>
        </tr>
        <tr>
          <td id="L3619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3619"></td>
          <td id="LC3619" class="blob-code blob-code-inner js-file-line">      b &gt;&gt;= <span class="pl-c1">20</span>;</td>
        </tr>
        <tr>
          <td id="L3620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3620"></td>
          <td id="LC3620" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span>) r &gt; <span class="pl-c1">255</span>) { <span class="pl-k">if</span> (r &lt; <span class="pl-c1">0</span>) r = <span class="pl-c1">0</span>; <span class="pl-k">else</span> r = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3621"></td>
          <td id="LC3621" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span>) g &gt; <span class="pl-c1">255</span>) { <span class="pl-k">if</span> (g &lt; <span class="pl-c1">0</span>) g = <span class="pl-c1">0</span>; <span class="pl-k">else</span> g = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3622"></td>
          <td id="LC3622" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span>) b &gt; <span class="pl-c1">255</span>) { <span class="pl-k">if</span> (b &lt; <span class="pl-c1">0</span>) b = <span class="pl-c1">0</span>; <span class="pl-k">else</span> b = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3623"></td>
          <td id="LC3623" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">0</span>] = (stbi_uc)r;</td>
        </tr>
        <tr>
          <td id="L3624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3624"></td>
          <td id="LC3624" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">1</span>] = (stbi_uc)g;</td>
        </tr>
        <tr>
          <td id="L3625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3625"></td>
          <td id="LC3625" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">2</span>] = (stbi_uc)b;</td>
        </tr>
        <tr>
          <td id="L3626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3626"></td>
          <td id="LC3626" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3627"></td>
          <td id="LC3627" class="blob-code blob-code-inner js-file-line">      out += step;</td>
        </tr>
        <tr>
          <td id="L3628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3628"></td>
          <td id="LC3628" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3629"></td>
          <td id="LC3629" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3630"></td>
          <td id="LC3630" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3631"></td>
          <td id="LC3631" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(STBI_SSE2) || defined(STBI_NEON)</td>
        </tr>
        <tr>
          <td id="L3632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3632"></td>
          <td id="LC3632" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__YCbCr_to_RGB_simd</span>(stbi_uc *out, stbi_uc <span class="pl-k">const</span> *y, stbi_uc <span class="pl-k">const</span> *pcb, stbi_uc <span class="pl-k">const</span> *pcr, <span class="pl-k">int</span> count, <span class="pl-k">int</span> step)</td>
        </tr>
        <tr>
          <td id="L3633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3633"></td>
          <td id="LC3633" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3634"></td>
          <td id="LC3634" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3635"></td>
          <td id="LC3635" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3636"></td>
          <td id="LC3636" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_SSE2</td>
        </tr>
        <tr>
          <td id="L3637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3637"></td>
          <td id="LC3637" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> step == 3 is pretty ugly on the final interleave, and i&#39;m not convinced</span></td>
        </tr>
        <tr>
          <td id="L3638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3638"></td>
          <td id="LC3638" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> it&#39;s useful in practice (you wouldn&#39;t use it for textures, for example).</span></td>
        </tr>
        <tr>
          <td id="L3639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3639"></td>
          <td id="LC3639" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> so just accelerate step == 4 case.</span></td>
        </tr>
        <tr>
          <td id="L3640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3640"></td>
          <td id="LC3640" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (step == <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L3641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3641"></td>
          <td id="LC3641" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> this is a fairly straightforward implementation and not super-optimized.</span></td>
        </tr>
        <tr>
          <td id="L3642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3642"></td>
          <td id="LC3642" class="blob-code blob-code-inner js-file-line">      __m128i signflip  = <span class="pl-c1">_mm_set1_epi8</span>(-<span class="pl-c1">0x80</span>);</td>
        </tr>
        <tr>
          <td id="L3643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3643"></td>
          <td id="LC3643" class="blob-code blob-code-inner js-file-line">      __m128i cr_const0 = <span class="pl-c1">_mm_set1_epi16</span>(   (<span class="pl-k">short</span>) ( <span class="pl-c1">1</span>.<span class="pl-c1">40200f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3644"></td>
          <td id="LC3644" class="blob-code blob-code-inner js-file-line">      __m128i cr_const1 = <span class="pl-c1">_mm_set1_epi16</span>( - (<span class="pl-k">short</span>) ( <span class="pl-c1">0</span>.<span class="pl-c1">71414f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3645"></td>
          <td id="LC3645" class="blob-code blob-code-inner js-file-line">      __m128i cb_const0 = <span class="pl-c1">_mm_set1_epi16</span>( - (<span class="pl-k">short</span>) ( <span class="pl-c1">0</span>.<span class="pl-c1">34414f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3646"></td>
          <td id="LC3646" class="blob-code blob-code-inner js-file-line">      __m128i cb_const1 = <span class="pl-c1">_mm_set1_epi16</span>(   (<span class="pl-k">short</span>) ( <span class="pl-c1">1</span>.<span class="pl-c1">77200f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3647"></td>
          <td id="LC3647" class="blob-code blob-code-inner js-file-line">      __m128i y_bias = <span class="pl-c1">_mm_set1_epi8</span>((<span class="pl-k">char</span>) (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>) <span class="pl-c1">128</span>);</td>
        </tr>
        <tr>
          <td id="L3648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3648"></td>
          <td id="LC3648" class="blob-code blob-code-inner js-file-line">      __m128i xw = <span class="pl-c1">_mm_set1_epi16</span>(<span class="pl-c1">255</span>); <span class="pl-c"><span class="pl-c">//</span> alpha channel</span></td>
        </tr>
        <tr>
          <td id="L3649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3649"></td>
          <td id="LC3649" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3650"></td>
          <td id="LC3650" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (; i+<span class="pl-c1">7</span> &lt; count; i += <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L3651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3651"></td>
          <td id="LC3651" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> load</span></td>
        </tr>
        <tr>
          <td id="L3652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3652"></td>
          <td id="LC3652" class="blob-code blob-code-inner js-file-line">         __m128i y_bytes = <span class="pl-c1">_mm_loadl_epi64</span>((__m128i *) (y+i));</td>
        </tr>
        <tr>
          <td id="L3653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3653"></td>
          <td id="LC3653" class="blob-code blob-code-inner js-file-line">         __m128i cr_bytes = <span class="pl-c1">_mm_loadl_epi64</span>((__m128i *) (pcr+i));</td>
        </tr>
        <tr>
          <td id="L3654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3654"></td>
          <td id="LC3654" class="blob-code blob-code-inner js-file-line">         __m128i cb_bytes = <span class="pl-c1">_mm_loadl_epi64</span>((__m128i *) (pcb+i));</td>
        </tr>
        <tr>
          <td id="L3655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3655"></td>
          <td id="LC3655" class="blob-code blob-code-inner js-file-line">         __m128i cr_biased = <span class="pl-c1">_mm_xor_si128</span>(cr_bytes, signflip); <span class="pl-c"><span class="pl-c">//</span> -128</span></td>
        </tr>
        <tr>
          <td id="L3656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3656"></td>
          <td id="LC3656" class="blob-code blob-code-inner js-file-line">         __m128i cb_biased = <span class="pl-c1">_mm_xor_si128</span>(cb_bytes, signflip); <span class="pl-c"><span class="pl-c">//</span> -128</span></td>
        </tr>
        <tr>
          <td id="L3657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3657"></td>
          <td id="LC3657" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3658"></td>
          <td id="LC3658" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> unpack to short (and left-shift cr, cb by 8)</span></td>
        </tr>
        <tr>
          <td id="L3659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3659"></td>
          <td id="LC3659" class="blob-code blob-code-inner js-file-line">         __m128i yw  = <span class="pl-c1">_mm_unpacklo_epi8</span>(y_bias, y_bytes);</td>
        </tr>
        <tr>
          <td id="L3660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3660"></td>
          <td id="LC3660" class="blob-code blob-code-inner js-file-line">         __m128i crw = <span class="pl-c1">_mm_unpacklo_epi8</span>(<span class="pl-c1">_mm_setzero_si128</span>(), cr_biased);</td>
        </tr>
        <tr>
          <td id="L3661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3661"></td>
          <td id="LC3661" class="blob-code blob-code-inner js-file-line">         __m128i cbw = <span class="pl-c1">_mm_unpacklo_epi8</span>(<span class="pl-c1">_mm_setzero_si128</span>(), cb_biased);</td>
        </tr>
        <tr>
          <td id="L3662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3662"></td>
          <td id="LC3662" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3663"></td>
          <td id="LC3663" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> color transform</span></td>
        </tr>
        <tr>
          <td id="L3664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3664"></td>
          <td id="LC3664" class="blob-code blob-code-inner js-file-line">         __m128i yws = <span class="pl-c1">_mm_srli_epi16</span>(yw, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3665"></td>
          <td id="LC3665" class="blob-code blob-code-inner js-file-line">         __m128i cr0 = <span class="pl-c1">_mm_mulhi_epi16</span>(cr_const0, crw);</td>
        </tr>
        <tr>
          <td id="L3666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3666"></td>
          <td id="LC3666" class="blob-code blob-code-inner js-file-line">         __m128i cb0 = <span class="pl-c1">_mm_mulhi_epi16</span>(cb_const0, cbw);</td>
        </tr>
        <tr>
          <td id="L3667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3667"></td>
          <td id="LC3667" class="blob-code blob-code-inner js-file-line">         __m128i cb1 = <span class="pl-c1">_mm_mulhi_epi16</span>(cbw, cb_const1);</td>
        </tr>
        <tr>
          <td id="L3668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3668"></td>
          <td id="LC3668" class="blob-code blob-code-inner js-file-line">         __m128i cr1 = <span class="pl-c1">_mm_mulhi_epi16</span>(crw, cr_const1);</td>
        </tr>
        <tr>
          <td id="L3669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3669"></td>
          <td id="LC3669" class="blob-code blob-code-inner js-file-line">         __m128i rws = <span class="pl-c1">_mm_add_epi16</span>(cr0, yws);</td>
        </tr>
        <tr>
          <td id="L3670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3670"></td>
          <td id="LC3670" class="blob-code blob-code-inner js-file-line">         __m128i gwt = <span class="pl-c1">_mm_add_epi16</span>(cb0, yws);</td>
        </tr>
        <tr>
          <td id="L3671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3671"></td>
          <td id="LC3671" class="blob-code blob-code-inner js-file-line">         __m128i bws = <span class="pl-c1">_mm_add_epi16</span>(yws, cb1);</td>
        </tr>
        <tr>
          <td id="L3672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3672"></td>
          <td id="LC3672" class="blob-code blob-code-inner js-file-line">         __m128i gws = <span class="pl-c1">_mm_add_epi16</span>(gwt, cr1);</td>
        </tr>
        <tr>
          <td id="L3673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3673"></td>
          <td id="LC3673" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3674"></td>
          <td id="LC3674" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> descale</span></td>
        </tr>
        <tr>
          <td id="L3675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3675"></td>
          <td id="LC3675" class="blob-code blob-code-inner js-file-line">         __m128i rw = <span class="pl-c1">_mm_srai_epi16</span>(rws, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3676"></td>
          <td id="LC3676" class="blob-code blob-code-inner js-file-line">         __m128i bw = <span class="pl-c1">_mm_srai_epi16</span>(bws, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3677"></td>
          <td id="LC3677" class="blob-code blob-code-inner js-file-line">         __m128i gw = <span class="pl-c1">_mm_srai_epi16</span>(gws, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3678"></td>
          <td id="LC3678" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3679"></td>
          <td id="LC3679" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> back to byte, set up for transpose</span></td>
        </tr>
        <tr>
          <td id="L3680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3680"></td>
          <td id="LC3680" class="blob-code blob-code-inner js-file-line">         __m128i brb = <span class="pl-c1">_mm_packus_epi16</span>(rw, bw);</td>
        </tr>
        <tr>
          <td id="L3681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3681"></td>
          <td id="LC3681" class="blob-code blob-code-inner js-file-line">         __m128i gxb = <span class="pl-c1">_mm_packus_epi16</span>(gw, xw);</td>
        </tr>
        <tr>
          <td id="L3682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3682"></td>
          <td id="LC3682" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3683"></td>
          <td id="LC3683" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> transpose to interleave channels</span></td>
        </tr>
        <tr>
          <td id="L3684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3684"></td>
          <td id="LC3684" class="blob-code blob-code-inner js-file-line">         __m128i t0 = <span class="pl-c1">_mm_unpacklo_epi8</span>(brb, gxb);</td>
        </tr>
        <tr>
          <td id="L3685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3685"></td>
          <td id="LC3685" class="blob-code blob-code-inner js-file-line">         __m128i t1 = <span class="pl-c1">_mm_unpackhi_epi8</span>(brb, gxb);</td>
        </tr>
        <tr>
          <td id="L3686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3686"></td>
          <td id="LC3686" class="blob-code blob-code-inner js-file-line">         __m128i o0 = <span class="pl-c1">_mm_unpacklo_epi16</span>(t0, t1);</td>
        </tr>
        <tr>
          <td id="L3687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3687"></td>
          <td id="LC3687" class="blob-code blob-code-inner js-file-line">         __m128i o1 = <span class="pl-c1">_mm_unpackhi_epi16</span>(t0, t1);</td>
        </tr>
        <tr>
          <td id="L3688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3688"></td>
          <td id="LC3688" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3689"></td>
          <td id="LC3689" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> store</span></td>
        </tr>
        <tr>
          <td id="L3690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3690"></td>
          <td id="LC3690" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">_mm_storeu_si128</span>((__m128i *) (out + <span class="pl-c1">0</span>), o0);</td>
        </tr>
        <tr>
          <td id="L3691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3691"></td>
          <td id="LC3691" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">_mm_storeu_si128</span>((__m128i *) (out + <span class="pl-c1">16</span>), o1);</td>
        </tr>
        <tr>
          <td id="L3692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3692"></td>
          <td id="LC3692" class="blob-code blob-code-inner js-file-line">         out += <span class="pl-c1">32</span>;</td>
        </tr>
        <tr>
          <td id="L3693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3693"></td>
          <td id="LC3693" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3694"></td>
          <td id="LC3694" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3695"></td>
          <td id="LC3695" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3696"></td>
          <td id="LC3696" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3697"></td>
          <td id="LC3697" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_NEON</td>
        </tr>
        <tr>
          <td id="L3698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3698"></td>
          <td id="LC3698" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> in this version, step=3 support would be easy to add. but is there demand?</span></td>
        </tr>
        <tr>
          <td id="L3699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3699"></td>
          <td id="LC3699" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (step == <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L3700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3700"></td>
          <td id="LC3700" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> this is a fairly straightforward implementation and not super-optimized.</span></td>
        </tr>
        <tr>
          <td id="L3701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3701"></td>
          <td id="LC3701" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">uint8x8_t</span> signflip = <span class="pl-c1">vdup_n_u8</span>(<span class="pl-c1">0x80</span>);</td>
        </tr>
        <tr>
          <td id="L3702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3702"></td>
          <td id="LC3702" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> cr_const0 = <span class="pl-c1">vdupq_n_s16</span>(   (<span class="pl-k">short</span>) ( <span class="pl-c1">1</span>.<span class="pl-c1">40200f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3703"></td>
          <td id="LC3703" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> cr_const1 = <span class="pl-c1">vdupq_n_s16</span>( - (<span class="pl-k">short</span>) ( <span class="pl-c1">0</span>.<span class="pl-c1">71414f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3704"></td>
          <td id="LC3704" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> cb_const0 = <span class="pl-c1">vdupq_n_s16</span>( - (<span class="pl-k">short</span>) ( <span class="pl-c1">0</span>.<span class="pl-c1">34414f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3705"></td>
          <td id="LC3705" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">int16x8_t</span> cb_const1 = <span class="pl-c1">vdupq_n_s16</span>(   (<span class="pl-k">short</span>) ( <span class="pl-c1">1</span>.<span class="pl-c1">77200f</span>*<span class="pl-c1">4096</span>.<span class="pl-c1">0f</span>+<span class="pl-c1">0</span>.<span class="pl-c1">5f</span>));</td>
        </tr>
        <tr>
          <td id="L3706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3706"></td>
          <td id="LC3706" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3707"></td>
          <td id="LC3707" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (; i+<span class="pl-c1">7</span> &lt; count; i += <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L3708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3708"></td>
          <td id="LC3708" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> load</span></td>
        </tr>
        <tr>
          <td id="L3709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3709"></td>
          <td id="LC3709" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">uint8x8_t</span> y_bytes  = <span class="pl-c1">vld1_u8</span>(y + i);</td>
        </tr>
        <tr>
          <td id="L3710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3710"></td>
          <td id="LC3710" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">uint8x8_t</span> cr_bytes = <span class="pl-c1">vld1_u8</span>(pcr + i);</td>
        </tr>
        <tr>
          <td id="L3711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3711"></td>
          <td id="LC3711" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">uint8x8_t</span> cb_bytes = <span class="pl-c1">vld1_u8</span>(pcb + i);</td>
        </tr>
        <tr>
          <td id="L3712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3712"></td>
          <td id="LC3712" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int8x8_t</span> cr_biased = <span class="pl-c1">vreinterpret_s8_u8</span>(<span class="pl-c1">vsub_u8</span>(cr_bytes, signflip));</td>
        </tr>
        <tr>
          <td id="L3713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3713"></td>
          <td id="LC3713" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int8x8_t</span> cb_biased = <span class="pl-c1">vreinterpret_s8_u8</span>(<span class="pl-c1">vsub_u8</span>(cb_bytes, signflip));</td>
        </tr>
        <tr>
          <td id="L3714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3714"></td>
          <td id="LC3714" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3715"></td>
          <td id="LC3715" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> expand to s16</span></td>
        </tr>
        <tr>
          <td id="L3716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3716"></td>
          <td id="LC3716" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> yws = <span class="pl-c1">vreinterpretq_s16_u16</span>(<span class="pl-c1">vshll_n_u8</span>(y_bytes, <span class="pl-c1">4</span>));</td>
        </tr>
        <tr>
          <td id="L3717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3717"></td>
          <td id="LC3717" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> crw = <span class="pl-c1">vshll_n_s8</span>(cr_biased, <span class="pl-c1">7</span>);</td>
        </tr>
        <tr>
          <td id="L3718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3718"></td>
          <td id="LC3718" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> cbw = <span class="pl-c1">vshll_n_s8</span>(cb_biased, <span class="pl-c1">7</span>);</td>
        </tr>
        <tr>
          <td id="L3719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3719"></td>
          <td id="LC3719" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3720"></td>
          <td id="LC3720" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> color transform</span></td>
        </tr>
        <tr>
          <td id="L3721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3721"></td>
          <td id="LC3721" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> cr0 = <span class="pl-c1">vqdmulhq_s16</span>(crw, cr_const0);</td>
        </tr>
        <tr>
          <td id="L3722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3722"></td>
          <td id="LC3722" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> cb0 = <span class="pl-c1">vqdmulhq_s16</span>(cbw, cb_const0);</td>
        </tr>
        <tr>
          <td id="L3723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3723"></td>
          <td id="LC3723" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> cr1 = <span class="pl-c1">vqdmulhq_s16</span>(crw, cr_const1);</td>
        </tr>
        <tr>
          <td id="L3724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3724"></td>
          <td id="LC3724" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> cb1 = <span class="pl-c1">vqdmulhq_s16</span>(cbw, cb_const1);</td>
        </tr>
        <tr>
          <td id="L3725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3725"></td>
          <td id="LC3725" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> rws = <span class="pl-c1">vaddq_s16</span>(yws, cr0);</td>
        </tr>
        <tr>
          <td id="L3726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3726"></td>
          <td id="LC3726" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> gws = <span class="pl-c1">vaddq_s16</span>(<span class="pl-c1">vaddq_s16</span>(yws, cb0), cr1);</td>
        </tr>
        <tr>
          <td id="L3727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3727"></td>
          <td id="LC3727" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">int16x8_t</span> bws = <span class="pl-c1">vaddq_s16</span>(yws, cb1);</td>
        </tr>
        <tr>
          <td id="L3728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3728"></td>
          <td id="LC3728" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3729"></td>
          <td id="LC3729" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> undo scaling, round, convert to byte</span></td>
        </tr>
        <tr>
          <td id="L3730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3730"></td>
          <td id="LC3730" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">uint8x8x4_t</span> o;</td>
        </tr>
        <tr>
          <td id="L3731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3731"></td>
          <td id="LC3731" class="blob-code blob-code-inner js-file-line">         o.<span class="pl-smi">val</span>[<span class="pl-c1">0</span>] = <span class="pl-c1">vqrshrun_n_s16</span>(rws, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3732"></td>
          <td id="LC3732" class="blob-code blob-code-inner js-file-line">         o.<span class="pl-smi">val</span>[<span class="pl-c1">1</span>] = <span class="pl-c1">vqrshrun_n_s16</span>(gws, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3733"></td>
          <td id="LC3733" class="blob-code blob-code-inner js-file-line">         o.<span class="pl-smi">val</span>[<span class="pl-c1">2</span>] = <span class="pl-c1">vqrshrun_n_s16</span>(bws, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L3734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3734"></td>
          <td id="LC3734" class="blob-code blob-code-inner js-file-line">         o.<span class="pl-smi">val</span>[<span class="pl-c1">3</span>] = <span class="pl-c1">vdup_n_u8</span>(<span class="pl-c1">255</span>);</td>
        </tr>
        <tr>
          <td id="L3735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3735"></td>
          <td id="LC3735" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3736"></td>
          <td id="LC3736" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> store, interleaving r/g/b/a</span></td>
        </tr>
        <tr>
          <td id="L3737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3737"></td>
          <td id="LC3737" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">vst4_u8</span>(out, o);</td>
        </tr>
        <tr>
          <td id="L3738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3738"></td>
          <td id="LC3738" class="blob-code blob-code-inner js-file-line">         out += <span class="pl-c1">8</span>*<span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L3739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3739"></td>
          <td id="LC3739" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3740"></td>
          <td id="LC3740" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3741"></td>
          <td id="LC3741" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3742"></td>
          <td id="LC3742" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3743"></td>
          <td id="LC3743" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (; i &lt; count; ++i) {</td>
        </tr>
        <tr>
          <td id="L3744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3744"></td>
          <td id="LC3744" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> y_fixed = (y[i] &lt;&lt; <span class="pl-c1">20</span>) + (<span class="pl-c1">1</span>&lt;&lt;<span class="pl-c1">19</span>); <span class="pl-c"><span class="pl-c">//</span> rounding</span></td>
        </tr>
        <tr>
          <td id="L3745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3745"></td>
          <td id="LC3745" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> r,g,b;</td>
        </tr>
        <tr>
          <td id="L3746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3746"></td>
          <td id="LC3746" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> cr = pcr[i] - <span class="pl-c1">128</span>;</td>
        </tr>
        <tr>
          <td id="L3747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3747"></td>
          <td id="LC3747" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> cb = pcb[i] - <span class="pl-c1">128</span>;</td>
        </tr>
        <tr>
          <td id="L3748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3748"></td>
          <td id="LC3748" class="blob-code blob-code-inner js-file-line">      r = y_fixed + cr* <span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">1</span>.<span class="pl-c1">40200f</span>);</td>
        </tr>
        <tr>
          <td id="L3749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3749"></td>
          <td id="LC3749" class="blob-code blob-code-inner js-file-line">      g = y_fixed + cr*-<span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">0</span>.<span class="pl-c1">71414f</span>) + ((cb*-<span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">0</span>.<span class="pl-c1">34414f</span>)) &amp; <span class="pl-c1">0xffff0000</span>);</td>
        </tr>
        <tr>
          <td id="L3750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3750"></td>
          <td id="LC3750" class="blob-code blob-code-inner js-file-line">      b = y_fixed                                   +   cb* <span class="pl-c1">stbi__float2fixed</span>(<span class="pl-c1">1</span>.<span class="pl-c1">77200f</span>);</td>
        </tr>
        <tr>
          <td id="L3751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3751"></td>
          <td id="LC3751" class="blob-code blob-code-inner js-file-line">      r &gt;&gt;= <span class="pl-c1">20</span>;</td>
        </tr>
        <tr>
          <td id="L3752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3752"></td>
          <td id="LC3752" class="blob-code blob-code-inner js-file-line">      g &gt;&gt;= <span class="pl-c1">20</span>;</td>
        </tr>
        <tr>
          <td id="L3753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3753"></td>
          <td id="LC3753" class="blob-code blob-code-inner js-file-line">      b &gt;&gt;= <span class="pl-c1">20</span>;</td>
        </tr>
        <tr>
          <td id="L3754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3754"></td>
          <td id="LC3754" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span>) r &gt; <span class="pl-c1">255</span>) { <span class="pl-k">if</span> (r &lt; <span class="pl-c1">0</span>) r = <span class="pl-c1">0</span>; <span class="pl-k">else</span> r = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3755"></td>
          <td id="LC3755" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span>) g &gt; <span class="pl-c1">255</span>) { <span class="pl-k">if</span> (g &lt; <span class="pl-c1">0</span>) g = <span class="pl-c1">0</span>; <span class="pl-k">else</span> g = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3756"></td>
          <td id="LC3756" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((<span class="pl-k">unsigned</span>) b &gt; <span class="pl-c1">255</span>) { <span class="pl-k">if</span> (b &lt; <span class="pl-c1">0</span>) b = <span class="pl-c1">0</span>; <span class="pl-k">else</span> b = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3757"></td>
          <td id="LC3757" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">0</span>] = (stbi_uc)r;</td>
        </tr>
        <tr>
          <td id="L3758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3758"></td>
          <td id="LC3758" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">1</span>] = (stbi_uc)g;</td>
        </tr>
        <tr>
          <td id="L3759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3759"></td>
          <td id="LC3759" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">2</span>] = (stbi_uc)b;</td>
        </tr>
        <tr>
          <td id="L3760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3760"></td>
          <td id="LC3760" class="blob-code blob-code-inner js-file-line">      out[<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3761"></td>
          <td id="LC3761" class="blob-code blob-code-inner js-file-line">      out += step;</td>
        </tr>
        <tr>
          <td id="L3762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3762"></td>
          <td id="LC3762" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3763"></td>
          <td id="LC3763" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3764"></td>
          <td id="LC3764" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3765"></td>
          <td id="LC3765" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3766"></td>
          <td id="LC3766" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> set up the kernels</span></td>
        </tr>
        <tr>
          <td id="L3767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3767"></td>
          <td id="LC3767" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__setup_jpeg</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L3768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3768"></td>
          <td id="LC3768" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3769"></td>
          <td id="LC3769" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">idct_block_kernel</span> = stbi__idct_block;</td>
        </tr>
        <tr>
          <td id="L3770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3770"></td>
          <td id="LC3770" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">YCbCr_to_RGB_kernel</span> = stbi__YCbCr_to_RGB_row;</td>
        </tr>
        <tr>
          <td id="L3771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3771"></td>
          <td id="LC3771" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">resample_row_hv_2_kernel</span> = stbi__resample_row_hv_2;</td>
        </tr>
        <tr>
          <td id="L3772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3772"></td>
          <td id="LC3772" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3773"></td>
          <td id="LC3773" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_SSE2</td>
        </tr>
        <tr>
          <td id="L3774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3774"></td>
          <td id="LC3774" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__sse2_available</span>()) {</td>
        </tr>
        <tr>
          <td id="L3775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3775"></td>
          <td id="LC3775" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">idct_block_kernel</span> = stbi__idct_simd;</td>
        </tr>
        <tr>
          <td id="L3776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3776"></td>
          <td id="LC3776" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">YCbCr_to_RGB_kernel</span> = stbi__YCbCr_to_RGB_simd;</td>
        </tr>
        <tr>
          <td id="L3777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3777"></td>
          <td id="LC3777" class="blob-code blob-code-inner js-file-line">      j-&gt;<span class="pl-smi">resample_row_hv_2_kernel</span> = stbi__resample_row_hv_2_simd;</td>
        </tr>
        <tr>
          <td id="L3778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3778"></td>
          <td id="LC3778" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3779"></td>
          <td id="LC3779" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3780"></td>
          <td id="LC3780" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3781"></td>
          <td id="LC3781" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> STBI_NEON</td>
        </tr>
        <tr>
          <td id="L3782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3782"></td>
          <td id="LC3782" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">idct_block_kernel</span> = stbi__idct_simd;</td>
        </tr>
        <tr>
          <td id="L3783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3783"></td>
          <td id="LC3783" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">YCbCr_to_RGB_kernel</span> = stbi__YCbCr_to_RGB_simd;</td>
        </tr>
        <tr>
          <td id="L3784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3784"></td>
          <td id="LC3784" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">resample_row_hv_2_kernel</span> = stbi__resample_row_hv_2_simd;</td>
        </tr>
        <tr>
          <td id="L3785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3785"></td>
          <td id="LC3785" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L3786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3786"></td>
          <td id="LC3786" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3787"></td>
          <td id="LC3787" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3788"></td>
          <td id="LC3788" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> clean up the temporary component buffers</span></td>
        </tr>
        <tr>
          <td id="L3789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3789"></td>
          <td id="LC3789" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__cleanup_jpeg</span>(stbi__jpeg *j)</td>
        </tr>
        <tr>
          <td id="L3790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3790"></td>
          <td id="LC3790" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3791"></td>
          <td id="LC3791" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__free_jpeg_components</span>(j, j-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L3792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3792"></td>
          <td id="LC3792" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3793"></td>
          <td id="LC3793" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3794"></td>
          <td id="LC3794" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L3795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3795"></td>
          <td id="LC3795" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3796"></td>
          <td id="LC3796" class="blob-code blob-code-inner js-file-line">   resample_row_func resample;</td>
        </tr>
        <tr>
          <td id="L3797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3797"></td>
          <td id="LC3797" class="blob-code blob-code-inner js-file-line">   stbi_uc *line0,*line1;</td>
        </tr>
        <tr>
          <td id="L3798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3798"></td>
          <td id="LC3798" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> hs,vs;   <span class="pl-c"><span class="pl-c">//</span> expansion factor in each axis</span></td>
        </tr>
        <tr>
          <td id="L3799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3799"></td>
          <td id="LC3799" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> w_lores; <span class="pl-c"><span class="pl-c">//</span> horizontal pixels pre-expansion</span></td>
        </tr>
        <tr>
          <td id="L3800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3800"></td>
          <td id="LC3800" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> ystep;   <span class="pl-c"><span class="pl-c">//</span> how far through vertical expansion we are</span></td>
        </tr>
        <tr>
          <td id="L3801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3801"></td>
          <td id="LC3801" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> ypos;    <span class="pl-c"><span class="pl-c">//</span> which pre-expansion row we&#39;re on</span></td>
        </tr>
        <tr>
          <td id="L3802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3802"></td>
          <td id="LC3802" class="blob-code blob-code-inner js-file-line">} stbi__resample;</td>
        </tr>
        <tr>
          <td id="L3803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3803"></td>
          <td id="LC3803" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3804"></td>
          <td id="LC3804" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> fast 0..255 * 0..255 =&gt; 0..255 rounded multiplication</span></td>
        </tr>
        <tr>
          <td id="L3805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3805"></td>
          <td id="LC3805" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc <span class="pl-smi">stbi__blinn_8x8</span>(stbi_uc x, stbi_uc y)</td>
        </tr>
        <tr>
          <td id="L3806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3806"></td>
          <td id="LC3806" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3807"></td>
          <td id="LC3807" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> t = x*y + <span class="pl-c1">128</span>;</td>
        </tr>
        <tr>
          <td id="L3808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3808"></td>
          <td id="LC3808" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (stbi_uc) ((t + (t &gt;&gt;<span class="pl-c1">8</span>)) &gt;&gt; <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L3809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3809"></td>
          <td id="LC3809" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3810"></td>
          <td id="LC3810" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3811"></td>
          <td id="LC3811" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">load_jpeg_image</span>(stbi__jpeg *z, <span class="pl-k">int</span> *out_x, <span class="pl-k">int</span> *out_y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L3812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3812"></td>
          <td id="LC3812" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3813"></td>
          <td id="LC3813" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> n, decode_n, is_rgb;</td>
        </tr>
        <tr>
          <td id="L3814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3814"></td>
          <td id="LC3814" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> = <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> make stbi__cleanup_jpeg safe</span></td>
        </tr>
        <tr>
          <td id="L3815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3815"></td>
          <td id="LC3815" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3816"></td>
          <td id="LC3816" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> validate req_comp</span></td>
        </tr>
        <tr>
          <td id="L3817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3817"></td>
          <td id="LC3817" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &lt; <span class="pl-c1">0</span> || req_comp &gt; <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad req_comp<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Internal error<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3818"></td>
          <td id="LC3818" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3819"></td>
          <td id="LC3819" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> load a jpeg image from whichever source, but leave in YCbCr format</span></td>
        </tr>
        <tr>
          <td id="L3820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3820"></td>
          <td id="LC3820" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__decode_jpeg_image</span>(z)) { <span class="pl-c1">stbi__cleanup_jpeg</span>(z); <span class="pl-k">return</span> <span class="pl-c1">NULL</span>; }</td>
        </tr>
        <tr>
          <td id="L3821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3821"></td>
          <td id="LC3821" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3822"></td>
          <td id="LC3822" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> determine actual number of components to generate</span></td>
        </tr>
        <tr>
          <td id="L3823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3823"></td>
          <td id="LC3823" class="blob-code blob-code-inner js-file-line">   n = req_comp ? req_comp : z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> &gt;= <span class="pl-c1">3</span> ? <span class="pl-c1">3</span> : <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3824"></td>
          <td id="LC3824" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3825"></td>
          <td id="LC3825" class="blob-code blob-code-inner js-file-line">   is_rgb = z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">3</span> &amp;&amp; (z-&gt;<span class="pl-smi">rgb</span> == <span class="pl-c1">3</span> || (z-&gt;<span class="pl-smi">app14_color_transform</span> == <span class="pl-c1">0</span> &amp;&amp; !z-&gt;<span class="pl-smi">jfif</span>));</td>
        </tr>
        <tr>
          <td id="L3826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3826"></td>
          <td id="LC3826" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3827"></td>
          <td id="LC3827" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">3</span> &amp;&amp; n &lt; <span class="pl-c1">3</span> &amp;&amp; !is_rgb)</td>
        </tr>
        <tr>
          <td id="L3828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3828"></td>
          <td id="LC3828" class="blob-code blob-code-inner js-file-line">      decode_n = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3829"></td>
          <td id="LC3829" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3830"></td>
          <td id="LC3830" class="blob-code blob-code-inner js-file-line">      decode_n = z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L3831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3831"></td>
          <td id="LC3831" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3832"></td>
          <td id="LC3832" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> nothing to do if no components requested; check this now to avoid</span></td>
        </tr>
        <tr>
          <td id="L3833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3833"></td>
          <td id="LC3833" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> accessing uninitialized coutput[0] later</span></td>
        </tr>
        <tr>
          <td id="L3834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3834"></td>
          <td id="LC3834" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (decode_n &lt;= <span class="pl-c1">0</span>) { <span class="pl-c1">stbi__cleanup_jpeg</span>(z); <span class="pl-k">return</span> <span class="pl-c1">NULL</span>; }</td>
        </tr>
        <tr>
          <td id="L3835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3835"></td>
          <td id="LC3835" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3836"></td>
          <td id="LC3836" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> resample and color-convert</span></td>
        </tr>
        <tr>
          <td id="L3837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3837"></td>
          <td id="LC3837" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L3838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3838"></td>
          <td id="LC3838" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L3839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3839"></td>
          <td id="LC3839" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">unsigned</span> <span class="pl-k">int</span> i,j;</td>
        </tr>
        <tr>
          <td id="L3840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3840"></td>
          <td id="LC3840" class="blob-code blob-code-inner js-file-line">      stbi_uc *output;</td>
        </tr>
        <tr>
          <td id="L3841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3841"></td>
          <td id="LC3841" class="blob-code blob-code-inner js-file-line">      stbi_uc *coutput[<span class="pl-c1">4</span>] = { <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span> };</td>
        </tr>
        <tr>
          <td id="L3842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3842"></td>
          <td id="LC3842" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3843"></td>
          <td id="LC3843" class="blob-code blob-code-inner js-file-line">      stbi__resample res_comp[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L3844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3844"></td>
          <td id="LC3844" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3845"></td>
          <td id="LC3845" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; decode_n; ++k) {</td>
        </tr>
        <tr>
          <td id="L3846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3846"></td>
          <td id="LC3846" class="blob-code blob-code-inner js-file-line">         stbi__resample *r = &amp;res_comp[k];</td>
        </tr>
        <tr>
          <td id="L3847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3847"></td>
          <td id="LC3847" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3848"></td>
          <td id="LC3848" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> allocate line buffer big enough for upsampling off the edges</span></td>
        </tr>
        <tr>
          <td id="L3849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3849"></td>
          <td id="LC3849" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> with upsample factor of 4</span></td>
        </tr>
        <tr>
          <td id="L3850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3850"></td>
          <td id="LC3850" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">linebuf</span> = (stbi_uc *) <span class="pl-c1">stbi__malloc</span>(z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span> + <span class="pl-c1">3</span>);</td>
        </tr>
        <tr>
          <td id="L3851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3851"></td>
          <td id="LC3851" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">linebuf</span>) { <span class="pl-c1">stbi__cleanup_jpeg</span>(z); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L3852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3852"></td>
          <td id="LC3852" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3853"></td>
          <td id="LC3853" class="blob-code blob-code-inner js-file-line">         r-&gt;<span class="pl-smi">hs</span>      = z-&gt;<span class="pl-smi">img_h_max</span> / z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L3854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3854"></td>
          <td id="LC3854" class="blob-code blob-code-inner js-file-line">         r-&gt;<span class="pl-smi">vs</span>      = z-&gt;<span class="pl-smi">img_v_max</span> / z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">v</span>;</td>
        </tr>
        <tr>
          <td id="L3855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3855"></td>
          <td id="LC3855" class="blob-code blob-code-inner js-file-line">         r-&gt;<span class="pl-smi">ystep</span>   = r-&gt;<span class="pl-smi">vs</span> &gt;&gt; <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L3856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3856"></td>
          <td id="LC3856" class="blob-code blob-code-inner js-file-line">         r-&gt;<span class="pl-smi">w_lores</span> = (z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span> + r-&gt;<span class="pl-smi">hs</span>-<span class="pl-c1">1</span>) / r-&gt;<span class="pl-smi">hs</span>;</td>
        </tr>
        <tr>
          <td id="L3857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3857"></td>
          <td id="LC3857" class="blob-code blob-code-inner js-file-line">         r-&gt;<span class="pl-smi">ypos</span>    = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3858"></td>
          <td id="LC3858" class="blob-code blob-code-inner js-file-line">         r-&gt;<span class="pl-smi">line0</span>   = r-&gt;<span class="pl-smi">line1</span> = z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">data</span>;</td>
        </tr>
        <tr>
          <td id="L3859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3859"></td>
          <td id="LC3859" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3860"></td>
          <td id="LC3860" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span>      (r-&gt;<span class="pl-smi">hs</span> == <span class="pl-c1">1</span> &amp;&amp; r-&gt;<span class="pl-smi">vs</span> == <span class="pl-c1">1</span>) r-&gt;<span class="pl-smi">resample</span> = resample_row_1;</td>
        </tr>
        <tr>
          <td id="L3861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3861"></td>
          <td id="LC3861" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">else</span> <span class="pl-k">if</span> (r-&gt;<span class="pl-smi">hs</span> == <span class="pl-c1">1</span> &amp;&amp; r-&gt;<span class="pl-smi">vs</span> == <span class="pl-c1">2</span>) r-&gt;<span class="pl-smi">resample</span> = stbi__resample_row_v_2;</td>
        </tr>
        <tr>
          <td id="L3862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3862"></td>
          <td id="LC3862" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">else</span> <span class="pl-k">if</span> (r-&gt;<span class="pl-smi">hs</span> == <span class="pl-c1">2</span> &amp;&amp; r-&gt;<span class="pl-smi">vs</span> == <span class="pl-c1">1</span>) r-&gt;<span class="pl-smi">resample</span> = stbi__resample_row_h_2;</td>
        </tr>
        <tr>
          <td id="L3863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3863"></td>
          <td id="LC3863" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">else</span> <span class="pl-k">if</span> (r-&gt;<span class="pl-smi">hs</span> == <span class="pl-c1">2</span> &amp;&amp; r-&gt;<span class="pl-smi">vs</span> == <span class="pl-c1">2</span>) r-&gt;<span class="pl-smi">resample</span> = z-&gt;<span class="pl-smi">resample_row_hv_2_kernel</span>;</td>
        </tr>
        <tr>
          <td id="L3864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3864"></td>
          <td id="LC3864" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">else</span>                               r-&gt;<span class="pl-smi">resample</span> = stbi__resample_row_generic;</td>
        </tr>
        <tr>
          <td id="L3865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3865"></td>
          <td id="LC3865" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3866"></td>
          <td id="LC3866" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3867"></td>
          <td id="LC3867" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> can&#39;t error after this so, this is safe</span></td>
        </tr>
        <tr>
          <td id="L3868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3868"></td>
          <td id="LC3868" class="blob-code blob-code-inner js-file-line">      output = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(n, z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L3869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3869"></td>
          <td id="LC3869" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!output) { <span class="pl-c1">stbi__cleanup_jpeg</span>(z); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L3870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3870"></td>
          <td id="LC3870" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3871"></td>
          <td id="LC3871" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> now go ahead and resample</span></td>
        </tr>
        <tr>
          <td id="L3872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3872"></td>
          <td id="LC3872" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L3873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3873"></td>
          <td id="LC3873" class="blob-code blob-code-inner js-file-line">         stbi_uc *out = output + n * z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span> * j;</td>
        </tr>
        <tr>
          <td id="L3874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3874"></td>
          <td id="LC3874" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; decode_n; ++k) {</td>
        </tr>
        <tr>
          <td id="L3875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3875"></td>
          <td id="LC3875" class="blob-code blob-code-inner js-file-line">            stbi__resample *r = &amp;res_comp[k];</td>
        </tr>
        <tr>
          <td id="L3876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3876"></td>
          <td id="LC3876" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> y_bot = r-&gt;<span class="pl-smi">ystep</span> &gt;= (r-&gt;<span class="pl-smi">vs</span> &gt;&gt; <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L3877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3877"></td>
          <td id="LC3877" class="blob-code blob-code-inner js-file-line">            coutput[k] = r-&gt;<span class="pl-c1">resample</span>(z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">linebuf</span>,</td>
        </tr>
        <tr>
          <td id="L3878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3878"></td>
          <td id="LC3878" class="blob-code blob-code-inner js-file-line">                                     y_bot ? r-&gt;<span class="pl-smi">line1</span> : r-&gt;<span class="pl-smi">line0</span>,</td>
        </tr>
        <tr>
          <td id="L3879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3879"></td>
          <td id="LC3879" class="blob-code blob-code-inner js-file-line">                                     y_bot ? r-&gt;<span class="pl-smi">line0</span> : r-&gt;<span class="pl-smi">line1</span>,</td>
        </tr>
        <tr>
          <td id="L3880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3880"></td>
          <td id="LC3880" class="blob-code blob-code-inner js-file-line">                                     r-&gt;<span class="pl-smi">w_lores</span>, r-&gt;<span class="pl-smi">hs</span>);</td>
        </tr>
        <tr>
          <td id="L3881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3881"></td>
          <td id="LC3881" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (++r-&gt;<span class="pl-smi">ystep</span> &gt;= r-&gt;<span class="pl-smi">vs</span>) {</td>
        </tr>
        <tr>
          <td id="L3882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3882"></td>
          <td id="LC3882" class="blob-code blob-code-inner js-file-line">               r-&gt;<span class="pl-smi">ystep</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L3883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3883"></td>
          <td id="LC3883" class="blob-code blob-code-inner js-file-line">               r-&gt;<span class="pl-smi">line0</span> = r-&gt;<span class="pl-smi">line1</span>;</td>
        </tr>
        <tr>
          <td id="L3884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3884"></td>
          <td id="LC3884" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (++r-&gt;<span class="pl-smi">ypos</span> &lt; z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">y</span>)</td>
        </tr>
        <tr>
          <td id="L3885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3885"></td>
          <td id="LC3885" class="blob-code blob-code-inner js-file-line">                  r-&gt;<span class="pl-smi">line1</span> += z-&gt;<span class="pl-smi">img_comp</span>[k].<span class="pl-smi">w2</span>;</td>
        </tr>
        <tr>
          <td id="L3886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3886"></td>
          <td id="LC3886" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3887"></td>
          <td id="LC3887" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3888"></td>
          <td id="LC3888" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (n &gt;= <span class="pl-c1">3</span>) {</td>
        </tr>
        <tr>
          <td id="L3889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3889"></td>
          <td id="LC3889" class="blob-code blob-code-inner js-file-line">            stbi_uc *y = coutput[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L3890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3890"></td>
          <td id="LC3890" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">3</span>) {</td>
        </tr>
        <tr>
          <td id="L3891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3891"></td>
          <td id="LC3891" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (is_rgb) {</td>
        </tr>
        <tr>
          <td id="L3892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3892"></td>
          <td id="LC3892" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3893"></td>
          <td id="LC3893" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">0</span>] = y[i];</td>
        </tr>
        <tr>
          <td id="L3894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3894"></td>
          <td id="LC3894" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">1</span>] = coutput[<span class="pl-c1">1</span>][i];</td>
        </tr>
        <tr>
          <td id="L3895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3895"></td>
          <td id="LC3895" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">2</span>] = coutput[<span class="pl-c1">2</span>][i];</td>
        </tr>
        <tr>
          <td id="L3896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3896"></td>
          <td id="LC3896" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3897"></td>
          <td id="LC3897" class="blob-code blob-code-inner js-file-line">                     out += n;</td>
        </tr>
        <tr>
          <td id="L3898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3898"></td>
          <td id="LC3898" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L3899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3899"></td>
          <td id="LC3899" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3900"></td>
          <td id="LC3900" class="blob-code blob-code-inner js-file-line">                  z-&gt;<span class="pl-c1">YCbCr_to_RGB_kernel</span>(out, y, coutput[<span class="pl-c1">1</span>], coutput[<span class="pl-c1">2</span>], z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, n);</td>
        </tr>
        <tr>
          <td id="L3901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3901"></td>
          <td id="LC3901" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3902"></td>
          <td id="LC3902" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L3903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3903"></td>
          <td id="LC3903" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">app14_color_transform</span> == <span class="pl-c1">0</span>) { <span class="pl-c"><span class="pl-c">//</span> CMYK</span></td>
        </tr>
        <tr>
          <td id="L3904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3904"></td>
          <td id="LC3904" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3905"></td>
          <td id="LC3905" class="blob-code blob-code-inner js-file-line">                     stbi_uc m = coutput[<span class="pl-c1">3</span>][i];</td>
        </tr>
        <tr>
          <td id="L3906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3906"></td>
          <td id="LC3906" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(coutput[<span class="pl-c1">0</span>][i], m);</td>
        </tr>
        <tr>
          <td id="L3907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3907"></td>
          <td id="LC3907" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(coutput[<span class="pl-c1">1</span>][i], m);</td>
        </tr>
        <tr>
          <td id="L3908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3908"></td>
          <td id="LC3908" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(coutput[<span class="pl-c1">2</span>][i], m);</td>
        </tr>
        <tr>
          <td id="L3909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3909"></td>
          <td id="LC3909" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3910"></td>
          <td id="LC3910" class="blob-code blob-code-inner js-file-line">                     out += n;</td>
        </tr>
        <tr>
          <td id="L3911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3911"></td>
          <td id="LC3911" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L3912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3912"></td>
          <td id="LC3912" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">app14_color_transform</span> == <span class="pl-c1">2</span>) { <span class="pl-c"><span class="pl-c">//</span> YCCK</span></td>
        </tr>
        <tr>
          <td id="L3913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3913"></td>
          <td id="LC3913" class="blob-code blob-code-inner js-file-line">                  z-&gt;<span class="pl-c1">YCbCr_to_RGB_kernel</span>(out, y, coutput[<span class="pl-c1">1</span>], coutput[<span class="pl-c1">2</span>], z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, n);</td>
        </tr>
        <tr>
          <td id="L3914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3914"></td>
          <td id="LC3914" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3915"></td>
          <td id="LC3915" class="blob-code blob-code-inner js-file-line">                     stbi_uc m = coutput[<span class="pl-c1">3</span>][i];</td>
        </tr>
        <tr>
          <td id="L3916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3916"></td>
          <td id="LC3916" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(<span class="pl-c1">255</span> - out[<span class="pl-c1">0</span>], m);</td>
        </tr>
        <tr>
          <td id="L3917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3917"></td>
          <td id="LC3917" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(<span class="pl-c1">255</span> - out[<span class="pl-c1">1</span>], m);</td>
        </tr>
        <tr>
          <td id="L3918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3918"></td>
          <td id="LC3918" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(<span class="pl-c1">255</span> - out[<span class="pl-c1">2</span>], m);</td>
        </tr>
        <tr>
          <td id="L3919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3919"></td>
          <td id="LC3919" class="blob-code blob-code-inner js-file-line">                     out += n;</td>
        </tr>
        <tr>
          <td id="L3920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3920"></td>
          <td id="LC3920" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L3921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3921"></td>
          <td id="LC3921" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> YCbCr + alpha?  Ignore the fourth channel for now</span></td>
        </tr>
        <tr>
          <td id="L3922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3922"></td>
          <td id="LC3922" class="blob-code blob-code-inner js-file-line">                  z-&gt;<span class="pl-c1">YCbCr_to_RGB_kernel</span>(out, y, coutput[<span class="pl-c1">1</span>], coutput[<span class="pl-c1">2</span>], z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, n);</td>
        </tr>
        <tr>
          <td id="L3923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3923"></td>
          <td id="LC3923" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3924"></td>
          <td id="LC3924" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3925"></td>
          <td id="LC3925" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3926"></td>
          <td id="LC3926" class="blob-code blob-code-inner js-file-line">                  out[<span class="pl-c1">0</span>] = out[<span class="pl-c1">1</span>] = out[<span class="pl-c1">2</span>] = y[i];</td>
        </tr>
        <tr>
          <td id="L3927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3927"></td>
          <td id="LC3927" class="blob-code blob-code-inner js-file-line">                  out[<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>; <span class="pl-c"><span class="pl-c">//</span> not used if n==3</span></td>
        </tr>
        <tr>
          <td id="L3928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3928"></td>
          <td id="LC3928" class="blob-code blob-code-inner js-file-line">                  out += n;</td>
        </tr>
        <tr>
          <td id="L3929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3929"></td>
          <td id="LC3929" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3930"></td>
          <td id="LC3930" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3931"></td>
          <td id="LC3931" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (is_rgb) {</td>
        </tr>
        <tr>
          <td id="L3932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3932"></td>
          <td id="LC3932" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (n == <span class="pl-c1">1</span>)</td>
        </tr>
        <tr>
          <td id="L3933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3933"></td>
          <td id="LC3933" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L3934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3934"></td>
          <td id="LC3934" class="blob-code blob-code-inner js-file-line">                     *out++ = <span class="pl-c1">stbi__compute_y</span>(coutput[<span class="pl-c1">0</span>][i], coutput[<span class="pl-c1">1</span>][i], coutput[<span class="pl-c1">2</span>][i]);</td>
        </tr>
        <tr>
          <td id="L3935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3935"></td>
          <td id="LC3935" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3936"></td>
          <td id="LC3936" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i, out += <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L3937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3937"></td>
          <td id="LC3937" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__compute_y</span>(coutput[<span class="pl-c1">0</span>][i], coutput[<span class="pl-c1">1</span>][i], coutput[<span class="pl-c1">2</span>][i]);</td>
        </tr>
        <tr>
          <td id="L3938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3938"></td>
          <td id="LC3938" class="blob-code blob-code-inner js-file-line">                     out[<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3939"></td>
          <td id="LC3939" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L3940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3940"></td>
          <td id="LC3940" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3941"></td>
          <td id="LC3941" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">4</span> &amp;&amp; z-&gt;<span class="pl-smi">app14_color_transform</span> == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L3942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3942"></td>
          <td id="LC3942" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3943"></td>
          <td id="LC3943" class="blob-code blob-code-inner js-file-line">                  stbi_uc m = coutput[<span class="pl-c1">3</span>][i];</td>
        </tr>
        <tr>
          <td id="L3944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3944"></td>
          <td id="LC3944" class="blob-code blob-code-inner js-file-line">                  stbi_uc r = <span class="pl-c1">stbi__blinn_8x8</span>(coutput[<span class="pl-c1">0</span>][i], m);</td>
        </tr>
        <tr>
          <td id="L3945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3945"></td>
          <td id="LC3945" class="blob-code blob-code-inner js-file-line">                  stbi_uc g = <span class="pl-c1">stbi__blinn_8x8</span>(coutput[<span class="pl-c1">1</span>][i], m);</td>
        </tr>
        <tr>
          <td id="L3946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3946"></td>
          <td id="LC3946" class="blob-code blob-code-inner js-file-line">                  stbi_uc b = <span class="pl-c1">stbi__blinn_8x8</span>(coutput[<span class="pl-c1">2</span>][i], m);</td>
        </tr>
        <tr>
          <td id="L3947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3947"></td>
          <td id="LC3947" class="blob-code blob-code-inner js-file-line">                  out[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__compute_y</span>(r, g, b);</td>
        </tr>
        <tr>
          <td id="L3948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3948"></td>
          <td id="LC3948" class="blob-code blob-code-inner js-file-line">                  out[<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3949"></td>
          <td id="LC3949" class="blob-code blob-code-inner js-file-line">                  out += n;</td>
        </tr>
        <tr>
          <td id="L3950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3950"></td>
          <td id="LC3950" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3951"></td>
          <td id="LC3951" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> == <span class="pl-c1">4</span> &amp;&amp; z-&gt;<span class="pl-smi">app14_color_transform</span> == <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L3952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3952"></td>
          <td id="LC3952" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L3953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3953"></td>
          <td id="LC3953" class="blob-code blob-code-inner js-file-line">                  out[<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__blinn_8x8</span>(<span class="pl-c1">255</span> - coutput[<span class="pl-c1">0</span>][i], coutput[<span class="pl-c1">3</span>][i]);</td>
        </tr>
        <tr>
          <td id="L3954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3954"></td>
          <td id="LC3954" class="blob-code blob-code-inner js-file-line">                  out[<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L3955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3955"></td>
          <td id="LC3955" class="blob-code blob-code-inner js-file-line">                  out += n;</td>
        </tr>
        <tr>
          <td id="L3956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3956"></td>
          <td id="LC3956" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L3957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3957"></td>
          <td id="LC3957" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3958"></td>
          <td id="LC3958" class="blob-code blob-code-inner js-file-line">               stbi_uc *y = coutput[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L3959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3959"></td>
          <td id="LC3959" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (n == <span class="pl-c1">1</span>)</td>
        </tr>
        <tr>
          <td id="L3960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3960"></td>
          <td id="LC3960" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) out[i] = y[i];</td>
        </tr>
        <tr>
          <td id="L3961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3961"></td>
          <td id="LC3961" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3962"></td>
          <td id="LC3962" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>; ++i) { *out++ = y[i]; *out++ = <span class="pl-c1">255</span>; }</td>
        </tr>
        <tr>
          <td id="L3963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3963"></td>
          <td id="LC3963" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L3964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3964"></td>
          <td id="LC3964" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L3965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3965"></td>
          <td id="LC3965" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3966"></td>
          <td id="LC3966" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__cleanup_jpeg</span>(z);</td>
        </tr>
        <tr>
          <td id="L3967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3967"></td>
          <td id="LC3967" class="blob-code blob-code-inner js-file-line">      *out_x = z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L3968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3968"></td>
          <td id="LC3968" class="blob-code blob-code-inner js-file-line">      *out_y = z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L3969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3969"></td>
          <td id="LC3969" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (comp) *comp = z-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> &gt;= <span class="pl-c1">3</span> ? <span class="pl-c1">3</span> : <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> report original components, not output</span></td>
        </tr>
        <tr>
          <td id="L3970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3970"></td>
          <td id="LC3970" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> output;</td>
        </tr>
        <tr>
          <td id="L3971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3971"></td>
          <td id="LC3971" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L3972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3972"></td>
          <td id="LC3972" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3973"></td>
          <td id="LC3973" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3974"></td>
          <td id="LC3974" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__jpeg_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L3975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3975"></td>
          <td id="LC3975" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3976"></td>
          <td id="LC3976" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span>* result;</td>
        </tr>
        <tr>
          <td id="L3977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3977"></td>
          <td id="LC3977" class="blob-code blob-code-inner js-file-line">   stbi__jpeg* j = (stbi__jpeg*) <span class="pl-c1">stbi__malloc</span>(<span class="pl-k">sizeof</span>(stbi__jpeg));</td>
        </tr>
        <tr>
          <td id="L3978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3978"></td>
          <td id="LC3978" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!j) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3979"></td>
          <td id="LC3979" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L3980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3980"></td>
          <td id="LC3980" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">s</span> = s;</td>
        </tr>
        <tr>
          <td id="L3981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3981"></td>
          <td id="LC3981" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__setup_jpeg</span>(j);</td>
        </tr>
        <tr>
          <td id="L3982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3982"></td>
          <td id="LC3982" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">load_jpeg_image</span>(j, x,y,comp,req_comp);</td>
        </tr>
        <tr>
          <td id="L3983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3983"></td>
          <td id="LC3983" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(j);</td>
        </tr>
        <tr>
          <td id="L3984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3984"></td>
          <td id="LC3984" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L3985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3985"></td>
          <td id="LC3985" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3986"></td>
          <td id="LC3986" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3987"></td>
          <td id="LC3987" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L3988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3988"></td>
          <td id="LC3988" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L3989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3989"></td>
          <td id="LC3989" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r;</td>
        </tr>
        <tr>
          <td id="L3990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3990"></td>
          <td id="LC3990" class="blob-code blob-code-inner js-file-line">   stbi__jpeg* j = (stbi__jpeg*)<span class="pl-c1">stbi__malloc</span>(<span class="pl-k">sizeof</span>(stbi__jpeg));</td>
        </tr>
        <tr>
          <td id="L3991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3991"></td>
          <td id="LC3991" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!j) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3992"></td>
          <td id="LC3992" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">s</span> = s;</td>
        </tr>
        <tr>
          <td id="L3993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3993"></td>
          <td id="LC3993" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__setup_jpeg</span>(j);</td>
        </tr>
        <tr>
          <td id="L3994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3994"></td>
          <td id="LC3994" class="blob-code blob-code-inner js-file-line">   r = <span class="pl-c1">stbi__decode_jpeg_header</span>(j, STBI__SCAN_type);</td>
        </tr>
        <tr>
          <td id="L3995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3995"></td>
          <td id="LC3995" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L3996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3996"></td>
          <td id="LC3996" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(j);</td>
        </tr>
        <tr>
          <td id="L3997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3997"></td>
          <td id="LC3997" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L3998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3998"></td>
          <td id="LC3998" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="3999"></td>
          <td id="LC3999" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4000"></td>
          <td id="LC4000" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_info_raw</span>(stbi__jpeg *j, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L4001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4001"></td>
          <td id="LC4001" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4002"></td>
          <td id="LC4002" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__decode_jpeg_header</span>(j, STBI__SCAN_header)) {</td>
        </tr>
        <tr>
          <td id="L4003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4003"></td>
          <td id="LC4003" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>( j-&gt;<span class="pl-smi">s</span> );</td>
        </tr>
        <tr>
          <td id="L4004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4004"></td>
          <td id="LC4004" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4005"></td>
          <td id="LC4005" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4006"></td>
          <td id="LC4006" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (x) *x = j-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L4007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4007"></td>
          <td id="LC4007" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (y) *y = j-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L4008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4008"></td>
          <td id="LC4008" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = j-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> &gt;= <span class="pl-c1">3</span> ? <span class="pl-c1">3</span> : <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4009"></td>
          <td id="LC4009" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4010"></td>
          <td id="LC4010" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4011"></td>
          <td id="LC4011" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4012"></td>
          <td id="LC4012" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__jpeg_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L4013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4013"></td>
          <td id="LC4013" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4014"></td>
          <td id="LC4014" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> result;</td>
        </tr>
        <tr>
          <td id="L4015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4015"></td>
          <td id="LC4015" class="blob-code blob-code-inner js-file-line">   stbi__jpeg* j = (stbi__jpeg*) (<span class="pl-c1">stbi__malloc</span>(<span class="pl-k">sizeof</span>(stbi__jpeg)));</td>
        </tr>
        <tr>
          <td id="L4016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4016"></td>
          <td id="LC4016" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!j) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4017"></td>
          <td id="LC4017" class="blob-code blob-code-inner js-file-line">   j-&gt;<span class="pl-smi">s</span> = s;</td>
        </tr>
        <tr>
          <td id="L4018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4018"></td>
          <td id="LC4018" class="blob-code blob-code-inner js-file-line">   result = <span class="pl-c1">stbi__jpeg_info_raw</span>(j, x, y, comp);</td>
        </tr>
        <tr>
          <td id="L4019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4019"></td>
          <td id="LC4019" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(j);</td>
        </tr>
        <tr>
          <td id="L4020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4020"></td>
          <td id="LC4020" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L4021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4021"></td>
          <td id="LC4021" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4022"></td>
          <td id="LC4022" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L4023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4023"></td>
          <td id="LC4023" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4024"></td>
          <td id="LC4024" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> public domain zlib decode    v0.2  Sean Barrett 2006-11-18</span></td>
        </tr>
        <tr>
          <td id="L4025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4025"></td>
          <td id="LC4025" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    simple implementation</span></td>
        </tr>
        <tr>
          <td id="L4026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4026"></td>
          <td id="LC4026" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - all input must be provided in an upfront buffer</span></td>
        </tr>
        <tr>
          <td id="L4027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4027"></td>
          <td id="LC4027" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - all output is written to a single output buffer (can malloc/realloc)</span></td>
        </tr>
        <tr>
          <td id="L4028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4028"></td>
          <td id="LC4028" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    performance</span></td>
        </tr>
        <tr>
          <td id="L4029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4029"></td>
          <td id="LC4029" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - fast huffman</span></td>
        </tr>
        <tr>
          <td id="L4030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4030"></td>
          <td id="LC4030" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4031"></td>
          <td id="LC4031" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_ZLIB</td>
        </tr>
        <tr>
          <td id="L4032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4032"></td>
          <td id="LC4032" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4033"></td>
          <td id="LC4033" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> fast-way is faster to check than jpeg huffman, but slow way is slower</span></td>
        </tr>
        <tr>
          <td id="L4034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4034"></td>
          <td id="LC4034" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__ZFAST_BITS</span>  <span class="pl-c1">9</span> <span class="pl-c"><span class="pl-c">//</span> accelerate all cases in default tables</span></td>
        </tr>
        <tr>
          <td id="L4035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4035"></td>
          <td id="LC4035" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__ZFAST_MASK</span>  ((<span class="pl-c1">1</span> &lt;&lt; STBI__ZFAST_BITS) - <span class="pl-c1">1</span>)</td>
        </tr>
        <tr>
          <td id="L4036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4036"></td>
          <td id="LC4036" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__ZNSYMS</span> <span class="pl-c1">288</span> <span class="pl-c"><span class="pl-c">//</span> number of symbols in literal/length alphabet</span></td>
        </tr>
        <tr>
          <td id="L4037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4037"></td>
          <td id="LC4037" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4038"></td>
          <td id="LC4038" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> zlib-style huffman encoding</span></td>
        </tr>
        <tr>
          <td id="L4039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4039"></td>
          <td id="LC4039" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> (jpegs packs from left, zlib from right, so can&#39;t share code)</span></td>
        </tr>
        <tr>
          <td id="L4040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4040"></td>
          <td id="LC4040" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L4041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4041"></td>
          <td id="LC4041" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4042"></td>
          <td id="LC4042" class="blob-code blob-code-inner js-file-line">   stbi__uint16 fast[<span class="pl-c1">1</span> &lt;&lt; STBI__ZFAST_BITS];</td>
        </tr>
        <tr>
          <td id="L4043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4043"></td>
          <td id="LC4043" class="blob-code blob-code-inner js-file-line">   stbi__uint16 firstcode[<span class="pl-c1">16</span>];</td>
        </tr>
        <tr>
          <td id="L4044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4044"></td>
          <td id="LC4044" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> maxcode[<span class="pl-c1">17</span>];</td>
        </tr>
        <tr>
          <td id="L4045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4045"></td>
          <td id="LC4045" class="blob-code blob-code-inner js-file-line">   stbi__uint16 firstsymbol[<span class="pl-c1">16</span>];</td>
        </tr>
        <tr>
          <td id="L4046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4046"></td>
          <td id="LC4046" class="blob-code blob-code-inner js-file-line">   stbi_uc  size[STBI__ZNSYMS];</td>
        </tr>
        <tr>
          <td id="L4047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4047"></td>
          <td id="LC4047" class="blob-code blob-code-inner js-file-line">   stbi__uint16 value[STBI__ZNSYMS];</td>
        </tr>
        <tr>
          <td id="L4048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4048"></td>
          <td id="LC4048" class="blob-code blob-code-inner js-file-line">} stbi__zhuffman;</td>
        </tr>
        <tr>
          <td id="L4049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4049"></td>
          <td id="LC4049" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4050"></td>
          <td id="LC4050" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bitreverse16</span>(<span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L4051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4051"></td>
          <td id="LC4051" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4052"></td>
          <td id="LC4052" class="blob-code blob-code-inner js-file-line">  n = ((n &amp; <span class="pl-c1">0xAAAA</span>) &gt;&gt;  <span class="pl-c1">1</span>) | ((n &amp; <span class="pl-c1">0x5555</span>) &lt;&lt; <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L4053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4053"></td>
          <td id="LC4053" class="blob-code blob-code-inner js-file-line">  n = ((n &amp; <span class="pl-c1">0xCCCC</span>) &gt;&gt;  <span class="pl-c1">2</span>) | ((n &amp; <span class="pl-c1">0x3333</span>) &lt;&lt; <span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L4054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4054"></td>
          <td id="LC4054" class="blob-code blob-code-inner js-file-line">  n = ((n &amp; <span class="pl-c1">0xF0F0</span>) &gt;&gt;  <span class="pl-c1">4</span>) | ((n &amp; <span class="pl-c1">0x0F0F</span>) &lt;&lt; <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L4055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4055"></td>
          <td id="LC4055" class="blob-code blob-code-inner js-file-line">  n = ((n &amp; <span class="pl-c1">0xFF00</span>) &gt;&gt;  <span class="pl-c1">8</span>) | ((n &amp; <span class="pl-c1">0x00FF</span>) &lt;&lt; <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L4056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4056"></td>
          <td id="LC4056" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> n;</td>
        </tr>
        <tr>
          <td id="L4057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4057"></td>
          <td id="LC4057" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4058"></td>
          <td id="LC4058" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4059"></td>
          <td id="LC4059" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bit_reverse</span>(<span class="pl-k">int</span> v, <span class="pl-k">int</span> bits)</td>
        </tr>
        <tr>
          <td id="L4060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4060"></td>
          <td id="LC4060" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4061"></td>
          <td id="LC4061" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(bits &lt;= <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L4062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4062"></td>
          <td id="LC4062" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> to bit reverse n bits, reverse 16 and shift</span></td>
        </tr>
        <tr>
          <td id="L4063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4063"></td>
          <td id="LC4063" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> e.g. 11 bits, bit reverse and shift away 5</span></td>
        </tr>
        <tr>
          <td id="L4064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4064"></td>
          <td id="LC4064" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__bitreverse16</span>(v) &gt;&gt; (<span class="pl-c1">16</span>-bits);</td>
        </tr>
        <tr>
          <td id="L4065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4065"></td>
          <td id="LC4065" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4066"></td>
          <td id="LC4066" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4067"></td>
          <td id="LC4067" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__zbuild_huffman</span>(stbi__zhuffman *z, <span class="pl-k">const</span> stbi_uc *sizelist, <span class="pl-k">int</span> num)</td>
        </tr>
        <tr>
          <td id="L4068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4068"></td>
          <td id="LC4068" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4069"></td>
          <td id="LC4069" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,k=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4070"></td>
          <td id="LC4070" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> code, next_code[<span class="pl-c1">16</span>], sizes[<span class="pl-c1">17</span>];</td>
        </tr>
        <tr>
          <td id="L4071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4071"></td>
          <td id="LC4071" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4072"></td>
          <td id="LC4072" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> DEFLATE spec for generating codes</span></td>
        </tr>
        <tr>
          <td id="L4073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4073"></td>
          <td id="LC4073" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(sizes, <span class="pl-c1">0</span>, <span class="pl-k">sizeof</span>(sizes));</td>
        </tr>
        <tr>
          <td id="L4074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4074"></td>
          <td id="LC4074" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(z-&gt;<span class="pl-smi">fast</span>, <span class="pl-c1">0</span>, <span class="pl-k">sizeof</span>(z-&gt;<span class="pl-smi">fast</span>));</td>
        </tr>
        <tr>
          <td id="L4075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4075"></td>
          <td id="LC4075" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; num; ++i)</td>
        </tr>
        <tr>
          <td id="L4076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4076"></td>
          <td id="LC4076" class="blob-code blob-code-inner js-file-line">      ++sizes[sizelist[i]];</td>
        </tr>
        <tr>
          <td id="L4077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4077"></td>
          <td id="LC4077" class="blob-code blob-code-inner js-file-line">   sizes[<span class="pl-c1">0</span>] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4078"></td>
          <td id="LC4078" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">1</span>; i &lt; <span class="pl-c1">16</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L4079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4079"></td>
          <td id="LC4079" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sizes[i] &gt; (<span class="pl-c1">1</span> &lt;&lt; i))</td>
        </tr>
        <tr>
          <td id="L4080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4080"></td>
          <td id="LC4080" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad sizes<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4081"></td>
          <td id="LC4081" class="blob-code blob-code-inner js-file-line">   code = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4082"></td>
          <td id="LC4082" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">1</span>; i &lt; <span class="pl-c1">16</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L4083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4083"></td>
          <td id="LC4083" class="blob-code blob-code-inner js-file-line">      next_code[i] = code;</td>
        </tr>
        <tr>
          <td id="L4084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4084"></td>
          <td id="LC4084" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">firstcode</span>[i] = (stbi__uint16) code;</td>
        </tr>
        <tr>
          <td id="L4085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4085"></td>
          <td id="LC4085" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">firstsymbol</span>[i] = (stbi__uint16) k;</td>
        </tr>
        <tr>
          <td id="L4086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4086"></td>
          <td id="LC4086" class="blob-code blob-code-inner js-file-line">      code = (code + sizes[i]);</td>
        </tr>
        <tr>
          <td id="L4087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4087"></td>
          <td id="LC4087" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sizes[i])</td>
        </tr>
        <tr>
          <td id="L4088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4088"></td>
          <td id="LC4088" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (code-<span class="pl-c1">1</span> &gt;= (<span class="pl-c1">1</span> &lt;&lt; i)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad codelengths<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4089"></td>
          <td id="LC4089" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">maxcode</span>[i] = code &lt;&lt; (<span class="pl-c1">16</span>-i); <span class="pl-c"><span class="pl-c">//</span> preshift for inner loop</span></td>
        </tr>
        <tr>
          <td id="L4090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4090"></td>
          <td id="LC4090" class="blob-code blob-code-inner js-file-line">      code &lt;&lt;= <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4091"></td>
          <td id="LC4091" class="blob-code blob-code-inner js-file-line">      k += sizes[i];</td>
        </tr>
        <tr>
          <td id="L4092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4092"></td>
          <td id="LC4092" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4093"></td>
          <td id="LC4093" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">maxcode</span>[<span class="pl-c1">16</span>] = <span class="pl-c1">0x10000</span>; <span class="pl-c"><span class="pl-c">//</span> sentinel</span></td>
        </tr>
        <tr>
          <td id="L4094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4094"></td>
          <td id="LC4094" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; num; ++i) {</td>
        </tr>
        <tr>
          <td id="L4095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4095"></td>
          <td id="LC4095" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> s = sizelist[i];</td>
        </tr>
        <tr>
          <td id="L4096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4096"></td>
          <td id="LC4096" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (s) {</td>
        </tr>
        <tr>
          <td id="L4097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4097"></td>
          <td id="LC4097" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> c = next_code[s] - z-&gt;<span class="pl-smi">firstcode</span>[s] + z-&gt;<span class="pl-smi">firstsymbol</span>[s];</td>
        </tr>
        <tr>
          <td id="L4098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4098"></td>
          <td id="LC4098" class="blob-code blob-code-inner js-file-line">         stbi__uint16 fastv = (stbi__uint16) ((s &lt;&lt; <span class="pl-c1">9</span>) | i);</td>
        </tr>
        <tr>
          <td id="L4099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4099"></td>
          <td id="LC4099" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">size</span> [c] = (stbi_uc     ) s;</td>
        </tr>
        <tr>
          <td id="L4100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4100"></td>
          <td id="LC4100" class="blob-code blob-code-inner js-file-line">         z-&gt;<span class="pl-smi">value</span>[c] = (stbi__uint16) i;</td>
        </tr>
        <tr>
          <td id="L4101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4101"></td>
          <td id="LC4101" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (s &lt;= STBI__ZFAST_BITS) {</td>
        </tr>
        <tr>
          <td id="L4102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4102"></td>
          <td id="LC4102" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> j = <span class="pl-c1">stbi__bit_reverse</span>(next_code[s],s);</td>
        </tr>
        <tr>
          <td id="L4103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4103"></td>
          <td id="LC4103" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (j &lt; (<span class="pl-c1">1</span> &lt;&lt; STBI__ZFAST_BITS)) {</td>
        </tr>
        <tr>
          <td id="L4104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4104"></td>
          <td id="LC4104" class="blob-code blob-code-inner js-file-line">               z-&gt;<span class="pl-smi">fast</span>[j] = fastv;</td>
        </tr>
        <tr>
          <td id="L4105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4105"></td>
          <td id="LC4105" class="blob-code blob-code-inner js-file-line">               j += (<span class="pl-c1">1</span> &lt;&lt; s);</td>
        </tr>
        <tr>
          <td id="L4106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4106"></td>
          <td id="LC4106" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4107"></td>
          <td id="LC4107" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4108"></td>
          <td id="LC4108" class="blob-code blob-code-inner js-file-line">         ++next_code[s];</td>
        </tr>
        <tr>
          <td id="L4109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4109"></td>
          <td id="LC4109" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4110"></td>
          <td id="LC4110" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4111"></td>
          <td id="LC4111" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4112"></td>
          <td id="LC4112" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4113"></td>
          <td id="LC4113" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4114"></td>
          <td id="LC4114" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> zlib-from-memory implementation for PNG reading</span></td>
        </tr>
        <tr>
          <td id="L4115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4115"></td>
          <td id="LC4115" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    because PNG allows splitting the zlib stream arbitrarily,</span></td>
        </tr>
        <tr>
          <td id="L4116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4116"></td>
          <td id="LC4116" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    and it&#39;s annoying structurally to have PNG call ZLIB call PNG,</span></td>
        </tr>
        <tr>
          <td id="L4117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4117"></td>
          <td id="LC4117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    we require PNG read all the IDATs and combine them into a single</span></td>
        </tr>
        <tr>
          <td id="L4118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4118"></td>
          <td id="LC4118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    memory buffer</span></td>
        </tr>
        <tr>
          <td id="L4119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4119"></td>
          <td id="LC4119" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4120"></td>
          <td id="LC4120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L4121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4121"></td>
          <td id="LC4121" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4122"></td>
          <td id="LC4122" class="blob-code blob-code-inner js-file-line">   stbi_uc *zbuffer, *zbuffer_end;</td>
        </tr>
        <tr>
          <td id="L4123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4123"></td>
          <td id="LC4123" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> num_bits;</td>
        </tr>
        <tr>
          <td id="L4124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4124"></td>
          <td id="LC4124" class="blob-code blob-code-inner js-file-line">   stbi__uint32 code_buffer;</td>
        </tr>
        <tr>
          <td id="L4125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4125"></td>
          <td id="LC4125" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4126"></td>
          <td id="LC4126" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *zout;</td>
        </tr>
        <tr>
          <td id="L4127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4127"></td>
          <td id="LC4127" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *zout_start;</td>
        </tr>
        <tr>
          <td id="L4128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4128"></td>
          <td id="LC4128" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *zout_end;</td>
        </tr>
        <tr>
          <td id="L4129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4129"></td>
          <td id="LC4129" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span>   z_expandable;</td>
        </tr>
        <tr>
          <td id="L4130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4130"></td>
          <td id="LC4130" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4131"></td>
          <td id="LC4131" class="blob-code blob-code-inner js-file-line">   stbi__zhuffman z_length, z_distance;</td>
        </tr>
        <tr>
          <td id="L4132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4132"></td>
          <td id="LC4132" class="blob-code blob-code-inner js-file-line">} stbi__zbuf;</td>
        </tr>
        <tr>
          <td id="L4133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4133"></td>
          <td id="LC4133" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4134"></td>
          <td id="LC4134" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__zeof</span>(stbi__zbuf *z)</td>
        </tr>
        <tr>
          <td id="L4135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4135"></td>
          <td id="LC4135" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4136"></td>
          <td id="LC4136" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (z-&gt;<span class="pl-smi">zbuffer</span> &gt;= z-&gt;<span class="pl-smi">zbuffer_end</span>);</td>
        </tr>
        <tr>
          <td id="L4137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4137"></td>
          <td id="LC4137" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4138"></td>
          <td id="LC4138" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4139"></td>
          <td id="LC4139" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> stbi_uc <span class="pl-smi">stbi__zget8</span>(stbi__zbuf *z)</td>
        </tr>
        <tr>
          <td id="L4140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4140"></td>
          <td id="LC4140" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4141"></td>
          <td id="LC4141" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__zeof</span>(z) ? <span class="pl-c1">0</span> : *z-&gt;<span class="pl-smi">zbuffer</span>++;</td>
        </tr>
        <tr>
          <td id="L4142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4142"></td>
          <td id="LC4142" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4143"></td>
          <td id="LC4143" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4144"></td>
          <td id="LC4144" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__fill_bits</span>(stbi__zbuf *z)</td>
        </tr>
        <tr>
          <td id="L4145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4145"></td>
          <td id="LC4145" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4146"></td>
          <td id="LC4146" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L4147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4147"></td>
          <td id="LC4147" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">code_buffer</span> &gt;= (<span class="pl-c1">1U</span> &lt;&lt; z-&gt;<span class="pl-smi">num_bits</span>)) {</td>
        </tr>
        <tr>
          <td id="L4148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4148"></td>
          <td id="LC4148" class="blob-code blob-code-inner js-file-line">        z-&gt;<span class="pl-smi">zbuffer</span> = z-&gt;<span class="pl-smi">zbuffer_end</span>;  <span class="pl-c"><span class="pl-c">/*</span> treat this as EOF so we fail. <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L4149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4149"></td>
          <td id="LC4149" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L4150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4150"></td>
          <td id="LC4150" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4151"></td>
          <td id="LC4151" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">code_buffer</span> |= (<span class="pl-k">unsigned</span> <span class="pl-k">int</span>) <span class="pl-c1">stbi__zget8</span>(z) &lt;&lt; z-&gt;<span class="pl-smi">num_bits</span>;</td>
        </tr>
        <tr>
          <td id="L4152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4152"></td>
          <td id="LC4152" class="blob-code blob-code-inner js-file-line">      z-&gt;<span class="pl-smi">num_bits</span> += <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L4153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4153"></td>
          <td id="LC4153" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">while</span> (z-&gt;<span class="pl-smi">num_bits</span> &lt;= <span class="pl-c1">24</span>);</td>
        </tr>
        <tr>
          <td id="L4154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4154"></td>
          <td id="LC4154" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4155"></td>
          <td id="LC4155" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4156"></td>
          <td id="LC4156" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__zreceive</span>(stbi__zbuf *z, <span class="pl-k">int</span> n)</td>
        </tr>
        <tr>
          <td id="L4157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4157"></td>
          <td id="LC4157" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4158"></td>
          <td id="LC4158" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L4159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4159"></td>
          <td id="LC4159" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">num_bits</span> &lt; n) <span class="pl-c1">stbi__fill_bits</span>(z);</td>
        </tr>
        <tr>
          <td id="L4160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4160"></td>
          <td id="LC4160" class="blob-code blob-code-inner js-file-line">   k = z-&gt;<span class="pl-smi">code_buffer</span> &amp; ((<span class="pl-c1">1</span> &lt;&lt; n) - <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L4161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4161"></td>
          <td id="LC4161" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt;= n;</td>
        </tr>
        <tr>
          <td id="L4162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4162"></td>
          <td id="LC4162" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">num_bits</span> -= n;</td>
        </tr>
        <tr>
          <td id="L4163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4163"></td>
          <td id="LC4163" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> k;</td>
        </tr>
        <tr>
          <td id="L4164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4164"></td>
          <td id="LC4164" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4165"></td>
          <td id="LC4165" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4166"></td>
          <td id="LC4166" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__zhuffman_decode_slowpath</span>(stbi__zbuf *a, stbi__zhuffman *z)</td>
        </tr>
        <tr>
          <td id="L4167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4167"></td>
          <td id="LC4167" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4168"></td>
          <td id="LC4168" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> b,s,k;</td>
        </tr>
        <tr>
          <td id="L4169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4169"></td>
          <td id="LC4169" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> not resolved by fast table, so compute it the slow way</span></td>
        </tr>
        <tr>
          <td id="L4170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4170"></td>
          <td id="LC4170" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> use jpeg approach, which requires MSbits at top</span></td>
        </tr>
        <tr>
          <td id="L4171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4171"></td>
          <td id="LC4171" class="blob-code blob-code-inner js-file-line">   k = <span class="pl-c1">stbi__bit_reverse</span>(a-&gt;<span class="pl-smi">code_buffer</span>, <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L4172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4172"></td>
          <td id="LC4172" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (s=STBI__ZFAST_BITS+<span class="pl-c1">1</span>; ; ++s)</td>
        </tr>
        <tr>
          <td id="L4173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4173"></td>
          <td id="LC4173" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (k &lt; z-&gt;<span class="pl-smi">maxcode</span>[s])</td>
        </tr>
        <tr>
          <td id="L4174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4174"></td>
          <td id="LC4174" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4175"></td>
          <td id="LC4175" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s &gt;= <span class="pl-c1">16</span>) <span class="pl-k">return</span> -<span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> invalid code!</span></td>
        </tr>
        <tr>
          <td id="L4176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4176"></td>
          <td id="LC4176" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> code size is s, so:</span></td>
        </tr>
        <tr>
          <td id="L4177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4177"></td>
          <td id="LC4177" class="blob-code blob-code-inner js-file-line">   b = (k &gt;&gt; (<span class="pl-c1">16</span>-s)) - z-&gt;<span class="pl-smi">firstcode</span>[s] + z-&gt;<span class="pl-smi">firstsymbol</span>[s];</td>
        </tr>
        <tr>
          <td id="L4178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4178"></td>
          <td id="LC4178" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (b &gt;= STBI__ZNSYMS) <span class="pl-k">return</span> -<span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> some data was corrupt somewhere!</span></td>
        </tr>
        <tr>
          <td id="L4179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4179"></td>
          <td id="LC4179" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">size</span>[b] != s) <span class="pl-k">return</span> -<span class="pl-c1">1</span>;  <span class="pl-c"><span class="pl-c">//</span> was originally an assert, but report failure instead.</span></td>
        </tr>
        <tr>
          <td id="L4180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4180"></td>
          <td id="LC4180" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt;= s;</td>
        </tr>
        <tr>
          <td id="L4181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4181"></td>
          <td id="LC4181" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">num_bits</span> -= s;</td>
        </tr>
        <tr>
          <td id="L4182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4182"></td>
          <td id="LC4182" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> z-&gt;<span class="pl-smi">value</span>[b];</td>
        </tr>
        <tr>
          <td id="L4183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4183"></td>
          <td id="LC4183" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4184"></td>
          <td id="LC4184" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4185"></td>
          <td id="LC4185" class="blob-code blob-code-inner js-file-line">stbi_inline <span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__zhuffman_decode</span>(stbi__zbuf *a, stbi__zhuffman *z)</td>
        </tr>
        <tr>
          <td id="L4186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4186"></td>
          <td id="LC4186" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4187"></td>
          <td id="LC4187" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> b,s;</td>
        </tr>
        <tr>
          <td id="L4188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4188"></td>
          <td id="LC4188" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (a-&gt;<span class="pl-smi">num_bits</span> &lt; <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L4189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4189"></td>
          <td id="LC4189" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__zeof</span>(a)) {</td>
        </tr>
        <tr>
          <td id="L4190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4190"></td>
          <td id="LC4190" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> -<span class="pl-c1">1</span>;   <span class="pl-c"><span class="pl-c">/*</span> report error for unexpected end of data. <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L4191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4191"></td>
          <td id="LC4191" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4192"></td>
          <td id="LC4192" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__fill_bits</span>(a);</td>
        </tr>
        <tr>
          <td id="L4193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4193"></td>
          <td id="LC4193" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4194"></td>
          <td id="LC4194" class="blob-code blob-code-inner js-file-line">   b = z-&gt;<span class="pl-smi">fast</span>[a-&gt;<span class="pl-smi">code_buffer</span> &amp; STBI__ZFAST_MASK];</td>
        </tr>
        <tr>
          <td id="L4195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4195"></td>
          <td id="LC4195" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (b) {</td>
        </tr>
        <tr>
          <td id="L4196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4196"></td>
          <td id="LC4196" class="blob-code blob-code-inner js-file-line">      s = b &gt;&gt; <span class="pl-c1">9</span>;</td>
        </tr>
        <tr>
          <td id="L4197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4197"></td>
          <td id="LC4197" class="blob-code blob-code-inner js-file-line">      a-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt;= s;</td>
        </tr>
        <tr>
          <td id="L4198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4198"></td>
          <td id="LC4198" class="blob-code blob-code-inner js-file-line">      a-&gt;<span class="pl-smi">num_bits</span> -= s;</td>
        </tr>
        <tr>
          <td id="L4199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4199"></td>
          <td id="LC4199" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b &amp; <span class="pl-c1">511</span>;</td>
        </tr>
        <tr>
          <td id="L4200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4200"></td>
          <td id="LC4200" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4201"></td>
          <td id="LC4201" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__zhuffman_decode_slowpath</span>(a, z);</td>
        </tr>
        <tr>
          <td id="L4202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4202"></td>
          <td id="LC4202" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4203"></td>
          <td id="LC4203" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4204"></td>
          <td id="LC4204" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__zexpand</span>(stbi__zbuf *z, <span class="pl-k">char</span> *zout, <span class="pl-k">int</span> n)  <span class="pl-c"><span class="pl-c">//</span> need to make room for n bytes</span></td>
        </tr>
        <tr>
          <td id="L4205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4205"></td>
          <td id="LC4205" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4206"></td>
          <td id="LC4206" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *q;</td>
        </tr>
        <tr>
          <td id="L4207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4207"></td>
          <td id="LC4207" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> cur, limit, old_limit;</td>
        </tr>
        <tr>
          <td id="L4208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4208"></td>
          <td id="LC4208" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">zout</span> = zout;</td>
        </tr>
        <tr>
          <td id="L4209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4209"></td>
          <td id="LC4209" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!z-&gt;<span class="pl-smi">z_expandable</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>output buffer limit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4210"></td>
          <td id="LC4210" class="blob-code blob-code-inner js-file-line">   cur   = (<span class="pl-k">unsigned</span> <span class="pl-k">int</span>) (z-&gt;<span class="pl-smi">zout</span> - z-&gt;<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4211"></td>
          <td id="LC4211" class="blob-code blob-code-inner js-file-line">   limit = old_limit = (<span class="pl-k">unsigned</span>) (z-&gt;<span class="pl-smi">zout_end</span> - z-&gt;<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4212"></td>
          <td id="LC4212" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (UINT_MAX - cur &lt; (<span class="pl-k">unsigned</span>) n) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4213"></td>
          <td id="LC4213" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (cur + n &gt; limit) {</td>
        </tr>
        <tr>
          <td id="L4214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4214"></td>
          <td id="LC4214" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span>(limit &gt; UINT_MAX / <span class="pl-c1">2</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4215"></td>
          <td id="LC4215" class="blob-code blob-code-inner js-file-line">      limit *= <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L4216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4216"></td>
          <td id="LC4216" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4217"></td>
          <td id="LC4217" class="blob-code blob-code-inner js-file-line">   q = (<span class="pl-k">char</span> *) <span class="pl-c1">STBI_REALLOC_SIZED</span>(z-&gt;<span class="pl-smi">zout_start</span>, old_limit, limit);</td>
        </tr>
        <tr>
          <td id="L4218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4218"></td>
          <td id="LC4218" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(old_limit);</td>
        </tr>
        <tr>
          <td id="L4219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4219"></td>
          <td id="LC4219" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (q == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4220"></td>
          <td id="LC4220" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">zout_start</span> = q;</td>
        </tr>
        <tr>
          <td id="L4221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4221"></td>
          <td id="LC4221" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">zout</span>       = q + cur;</td>
        </tr>
        <tr>
          <td id="L4222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4222"></td>
          <td id="LC4222" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">zout_end</span>   = q + limit;</td>
        </tr>
        <tr>
          <td id="L4223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4223"></td>
          <td id="LC4223" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4224"></td>
          <td id="LC4224" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4225"></td>
          <td id="LC4225" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4226"></td>
          <td id="LC4226" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> stbi__zlength_base[<span class="pl-c1">31</span>] = {</td>
        </tr>
        <tr>
          <td id="L4227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4227"></td>
          <td id="LC4227" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">10</span>,<span class="pl-c1">11</span>,<span class="pl-c1">13</span>,</td>
        </tr>
        <tr>
          <td id="L4228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4228"></td>
          <td id="LC4228" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">15</span>,<span class="pl-c1">17</span>,<span class="pl-c1">19</span>,<span class="pl-c1">23</span>,<span class="pl-c1">27</span>,<span class="pl-c1">31</span>,<span class="pl-c1">35</span>,<span class="pl-c1">43</span>,<span class="pl-c1">51</span>,<span class="pl-c1">59</span>,</td>
        </tr>
        <tr>
          <td id="L4229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4229"></td>
          <td id="LC4229" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">67</span>,<span class="pl-c1">83</span>,<span class="pl-c1">99</span>,<span class="pl-c1">115</span>,<span class="pl-c1">131</span>,<span class="pl-c1">163</span>,<span class="pl-c1">195</span>,<span class="pl-c1">227</span>,<span class="pl-c1">258</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span> };</td>
        </tr>
        <tr>
          <td id="L4230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4230"></td>
          <td id="LC4230" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4231"></td>
          <td id="LC4231" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> stbi__zlength_extra[<span class="pl-c1">31</span>]=</td>
        </tr>
        <tr>
          <td id="L4232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4232"></td>
          <td id="LC4232" class="blob-code blob-code-inner js-file-line">{ <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span> };</td>
        </tr>
        <tr>
          <td id="L4233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4233"></td>
          <td id="LC4233" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4234"></td>
          <td id="LC4234" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> stbi__zdist_base[<span class="pl-c1">32</span>] = { <span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">7</span>,<span class="pl-c1">9</span>,<span class="pl-c1">13</span>,<span class="pl-c1">17</span>,<span class="pl-c1">25</span>,<span class="pl-c1">33</span>,<span class="pl-c1">49</span>,<span class="pl-c1">65</span>,<span class="pl-c1">97</span>,<span class="pl-c1">129</span>,<span class="pl-c1">193</span>,</td>
        </tr>
        <tr>
          <td id="L4235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4235"></td>
          <td id="LC4235" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">257</span>,<span class="pl-c1">385</span>,<span class="pl-c1">513</span>,<span class="pl-c1">769</span>,<span class="pl-c1">1025</span>,<span class="pl-c1">1537</span>,<span class="pl-c1">2049</span>,<span class="pl-c1">3073</span>,<span class="pl-c1">4097</span>,<span class="pl-c1">6145</span>,<span class="pl-c1">8193</span>,<span class="pl-c1">12289</span>,<span class="pl-c1">16385</span>,<span class="pl-c1">24577</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>};</td>
        </tr>
        <tr>
          <td id="L4236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4236"></td>
          <td id="LC4236" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4237"></td>
          <td id="LC4237" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> stbi__zdist_extra[<span class="pl-c1">32</span>] =</td>
        </tr>
        <tr>
          <td id="L4238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4238"></td>
          <td id="LC4238" class="blob-code blob-code-inner js-file-line">{ <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">11</span>,<span class="pl-c1">11</span>,<span class="pl-c1">12</span>,<span class="pl-c1">12</span>,<span class="pl-c1">13</span>,<span class="pl-c1">13</span>};</td>
        </tr>
        <tr>
          <td id="L4239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4239"></td>
          <td id="LC4239" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4240"></td>
          <td id="LC4240" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__parse_huffman_block</span>(stbi__zbuf *a)</td>
        </tr>
        <tr>
          <td id="L4241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4241"></td>
          <td id="LC4241" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4242"></td>
          <td id="LC4242" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *zout = a-&gt;<span class="pl-smi">zout</span>;</td>
        </tr>
        <tr>
          <td id="L4243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4243"></td>
          <td id="LC4243" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(;;) {</td>
        </tr>
        <tr>
          <td id="L4244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4244"></td>
          <td id="LC4244" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> z = <span class="pl-c1">stbi__zhuffman_decode</span>(a, &amp;a-&gt;<span class="pl-smi">z_length</span>);</td>
        </tr>
        <tr>
          <td id="L4245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4245"></td>
          <td id="LC4245" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (z &lt; <span class="pl-c1">256</span>) {</td>
        </tr>
        <tr>
          <td id="L4246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4246"></td>
          <td id="LC4246" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> error in huffman codes</span></td>
        </tr>
        <tr>
          <td id="L4247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4247"></td>
          <td id="LC4247" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (zout &gt;= a-&gt;<span class="pl-smi">zout_end</span>) {</td>
        </tr>
        <tr>
          <td id="L4248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4248"></td>
          <td id="LC4248" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zexpand</span>(a, zout, <span class="pl-c1">1</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4249"></td>
          <td id="LC4249" class="blob-code blob-code-inner js-file-line">            zout = a-&gt;<span class="pl-smi">zout</span>;</td>
        </tr>
        <tr>
          <td id="L4250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4250"></td>
          <td id="LC4250" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4251"></td>
          <td id="LC4251" class="blob-code blob-code-inner js-file-line">         *zout++ = (<span class="pl-k">char</span>) z;</td>
        </tr>
        <tr>
          <td id="L4252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4252"></td>
          <td id="LC4252" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4253"></td>
          <td id="LC4253" class="blob-code blob-code-inner js-file-line">         stbi_uc *p;</td>
        </tr>
        <tr>
          <td id="L4254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4254"></td>
          <td id="LC4254" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> len,dist;</td>
        </tr>
        <tr>
          <td id="L4255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4255"></td>
          <td id="LC4255" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z == <span class="pl-c1">256</span>) {</td>
        </tr>
        <tr>
          <td id="L4256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4256"></td>
          <td id="LC4256" class="blob-code blob-code-inner js-file-line">            a-&gt;<span class="pl-smi">zout</span> = zout;</td>
        </tr>
        <tr>
          <td id="L4257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4257"></td>
          <td id="LC4257" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4258"></td>
          <td id="LC4258" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4259"></td>
          <td id="LC4259" class="blob-code blob-code-inner js-file-line">         z -= <span class="pl-c1">257</span>;</td>
        </tr>
        <tr>
          <td id="L4260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4260"></td>
          <td id="LC4260" class="blob-code blob-code-inner js-file-line">         len = stbi__zlength_base[z];</td>
        </tr>
        <tr>
          <td id="L4261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4261"></td>
          <td id="LC4261" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (stbi__zlength_extra[z]) len += <span class="pl-c1">stbi__zreceive</span>(a, stbi__zlength_extra[z]);</td>
        </tr>
        <tr>
          <td id="L4262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4262"></td>
          <td id="LC4262" class="blob-code blob-code-inner js-file-line">         z = <span class="pl-c1">stbi__zhuffman_decode</span>(a, &amp;a-&gt;<span class="pl-smi">z_distance</span>);</td>
        </tr>
        <tr>
          <td id="L4263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4263"></td>
          <td id="LC4263" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (z &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad huffman code<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4264"></td>
          <td id="LC4264" class="blob-code blob-code-inner js-file-line">         dist = stbi__zdist_base[z];</td>
        </tr>
        <tr>
          <td id="L4265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4265"></td>
          <td id="LC4265" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (stbi__zdist_extra[z]) dist += <span class="pl-c1">stbi__zreceive</span>(a, stbi__zdist_extra[z]);</td>
        </tr>
        <tr>
          <td id="L4266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4266"></td>
          <td id="LC4266" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (zout - a-&gt;<span class="pl-smi">zout_start</span> &lt; dist) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad dist<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4267"></td>
          <td id="LC4267" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (zout + len &gt; a-&gt;<span class="pl-smi">zout_end</span>) {</td>
        </tr>
        <tr>
          <td id="L4268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4268"></td>
          <td id="LC4268" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zexpand</span>(a, zout, len)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4269"></td>
          <td id="LC4269" class="blob-code blob-code-inner js-file-line">            zout = a-&gt;<span class="pl-smi">zout</span>;</td>
        </tr>
        <tr>
          <td id="L4270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4270"></td>
          <td id="LC4270" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4271"></td>
          <td id="LC4271" class="blob-code blob-code-inner js-file-line">         p = (stbi_uc *) (zout - dist);</td>
        </tr>
        <tr>
          <td id="L4272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4272"></td>
          <td id="LC4272" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (dist == <span class="pl-c1">1</span>) { <span class="pl-c"><span class="pl-c">//</span> run of one byte; common in images.</span></td>
        </tr>
        <tr>
          <td id="L4273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4273"></td>
          <td id="LC4273" class="blob-code blob-code-inner js-file-line">            stbi_uc v = *p;</td>
        </tr>
        <tr>
          <td id="L4274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4274"></td>
          <td id="LC4274" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (len) { <span class="pl-k">do</span> *zout++ = v; <span class="pl-k">while</span> (--len); }</td>
        </tr>
        <tr>
          <td id="L4275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4275"></td>
          <td id="LC4275" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4276"></td>
          <td id="LC4276" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (len) { <span class="pl-k">do</span> *zout++ = *p++; <span class="pl-k">while</span> (--len); }</td>
        </tr>
        <tr>
          <td id="L4277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4277"></td>
          <td id="LC4277" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4278"></td>
          <td id="LC4278" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4279"></td>
          <td id="LC4279" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4280"></td>
          <td id="LC4280" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4281"></td>
          <td id="LC4281" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4282"></td>
          <td id="LC4282" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__compute_huffman_codes</span>(stbi__zbuf *a)</td>
        </tr>
        <tr>
          <td id="L4283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4283"></td>
          <td id="LC4283" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4284"></td>
          <td id="LC4284" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">static</span> <span class="pl-k">const</span> stbi_uc length_dezigzag[<span class="pl-c1">19</span>] = { <span class="pl-c1">16</span>,<span class="pl-c1">17</span>,<span class="pl-c1">18</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">7</span>,<span class="pl-c1">9</span>,<span class="pl-c1">6</span>,<span class="pl-c1">10</span>,<span class="pl-c1">5</span>,<span class="pl-c1">11</span>,<span class="pl-c1">4</span>,<span class="pl-c1">12</span>,<span class="pl-c1">3</span>,<span class="pl-c1">13</span>,<span class="pl-c1">2</span>,<span class="pl-c1">14</span>,<span class="pl-c1">1</span>,<span class="pl-c1">15</span> };</td>
        </tr>
        <tr>
          <td id="L4285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4285"></td>
          <td id="LC4285" class="blob-code blob-code-inner js-file-line">   stbi__zhuffman z_codelength;</td>
        </tr>
        <tr>
          <td id="L4286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4286"></td>
          <td id="LC4286" class="blob-code blob-code-inner js-file-line">   stbi_uc lencodes[<span class="pl-c1">286</span>+<span class="pl-c1">32</span>+<span class="pl-c1">137</span>];<span class="pl-c"><span class="pl-c">//</span>padding for maximum single op</span></td>
        </tr>
        <tr>
          <td id="L4287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4287"></td>
          <td id="LC4287" class="blob-code blob-code-inner js-file-line">   stbi_uc codelength_sizes[<span class="pl-c1">19</span>];</td>
        </tr>
        <tr>
          <td id="L4288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4288"></td>
          <td id="LC4288" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i,n;</td>
        </tr>
        <tr>
          <td id="L4289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4289"></td>
          <td id="LC4289" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4290"></td>
          <td id="LC4290" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> hlit  = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">5</span>) + <span class="pl-c1">257</span>;</td>
        </tr>
        <tr>
          <td id="L4291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4291"></td>
          <td id="LC4291" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> hdist = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">5</span>) + <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4292"></td>
          <td id="LC4292" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> hclen = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">4</span>) + <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L4293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4293"></td>
          <td id="LC4293" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> ntot  = hlit + hdist;</td>
        </tr>
        <tr>
          <td id="L4294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4294"></td>
          <td id="LC4294" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4295"></td>
          <td id="LC4295" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(codelength_sizes, <span class="pl-c1">0</span>, <span class="pl-k">sizeof</span>(codelength_sizes));</td>
        </tr>
        <tr>
          <td id="L4296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4296"></td>
          <td id="LC4296" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; hclen; ++i) {</td>
        </tr>
        <tr>
          <td id="L4297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4297"></td>
          <td id="LC4297" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> s = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">3</span>);</td>
        </tr>
        <tr>
          <td id="L4298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4298"></td>
          <td id="LC4298" class="blob-code blob-code-inner js-file-line">      codelength_sizes[length_dezigzag[i]] = (stbi_uc) s;</td>
        </tr>
        <tr>
          <td id="L4299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4299"></td>
          <td id="LC4299" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4300"></td>
          <td id="LC4300" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zbuild_huffman</span>(&amp;z_codelength, codelength_sizes, <span class="pl-c1">19</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4301"></td>
          <td id="LC4301" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4302"></td>
          <td id="LC4302" class="blob-code blob-code-inner js-file-line">   n = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4303"></td>
          <td id="LC4303" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (n &lt; ntot) {</td>
        </tr>
        <tr>
          <td id="L4304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4304"></td>
          <td id="LC4304" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> c = <span class="pl-c1">stbi__zhuffman_decode</span>(a, &amp;z_codelength);</td>
        </tr>
        <tr>
          <td id="L4305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4305"></td>
          <td id="LC4305" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (c &lt; <span class="pl-c1">0</span> || c &gt;= <span class="pl-c1">19</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad codelengths<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4306"></td>
          <td id="LC4306" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (c &lt; <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L4307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4307"></td>
          <td id="LC4307" class="blob-code blob-code-inner js-file-line">         lencodes[n++] = (stbi_uc) c;</td>
        </tr>
        <tr>
          <td id="L4308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4308"></td>
          <td id="LC4308" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4309"></td>
          <td id="LC4309" class="blob-code blob-code-inner js-file-line">         stbi_uc fill = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4310"></td>
          <td id="LC4310" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (c == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L4311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4311"></td>
          <td id="LC4311" class="blob-code blob-code-inner js-file-line">            c = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">2</span>)+<span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L4312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4312"></td>
          <td id="LC4312" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (n == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad codelengths<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4313"></td>
          <td id="LC4313" class="blob-code blob-code-inner js-file-line">            fill = lencodes[n-<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L4314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4314"></td>
          <td id="LC4314" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (c == <span class="pl-c1">17</span>) {</td>
        </tr>
        <tr>
          <td id="L4315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4315"></td>
          <td id="LC4315" class="blob-code blob-code-inner js-file-line">            c = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">3</span>)+<span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L4316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4316"></td>
          <td id="LC4316" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (c == <span class="pl-c1">18</span>) {</td>
        </tr>
        <tr>
          <td id="L4317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4317"></td>
          <td id="LC4317" class="blob-code blob-code-inner js-file-line">            c = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">7</span>)+<span class="pl-c1">11</span>;</td>
        </tr>
        <tr>
          <td id="L4318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4318"></td>
          <td id="LC4318" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4319"></td>
          <td id="LC4319" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad codelengths<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4320"></td>
          <td id="LC4320" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4321"></td>
          <td id="LC4321" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (ntot - n &lt; c) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad codelengths<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4322"></td>
          <td id="LC4322" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">memset</span>(lencodes+n, fill, c);</td>
        </tr>
        <tr>
          <td id="L4323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4323"></td>
          <td id="LC4323" class="blob-code blob-code-inner js-file-line">         n += c;</td>
        </tr>
        <tr>
          <td id="L4324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4324"></td>
          <td id="LC4324" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4325"></td>
          <td id="LC4325" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4326"></td>
          <td id="LC4326" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (n != ntot) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad codelengths<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4327"></td>
          <td id="LC4327" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zbuild_huffman</span>(&amp;a-&gt;<span class="pl-smi">z_length</span>, lencodes, hlit)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4328"></td>
          <td id="LC4328" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zbuild_huffman</span>(&amp;a-&gt;<span class="pl-smi">z_distance</span>, lencodes+hlit, hdist)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4329"></td>
          <td id="LC4329" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4330"></td>
          <td id="LC4330" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4331"></td>
          <td id="LC4331" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4332"></td>
          <td id="LC4332" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__parse_uncompressed_block</span>(stbi__zbuf *a)</td>
        </tr>
        <tr>
          <td id="L4333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4333"></td>
          <td id="LC4333" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4334"></td>
          <td id="LC4334" class="blob-code blob-code-inner js-file-line">   stbi_uc header[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L4335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4335"></td>
          <td id="LC4335" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> len,nlen,k;</td>
        </tr>
        <tr>
          <td id="L4336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4336"></td>
          <td id="LC4336" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (a-&gt;<span class="pl-smi">num_bits</span> &amp; <span class="pl-c1">7</span>)</td>
        </tr>
        <tr>
          <td id="L4337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4337"></td>
          <td id="LC4337" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__zreceive</span>(a, a-&gt;<span class="pl-smi">num_bits</span> &amp; <span class="pl-c1">7</span>); <span class="pl-c"><span class="pl-c">//</span> discard</span></td>
        </tr>
        <tr>
          <td id="L4338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4338"></td>
          <td id="LC4338" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> drain the bit-packed data into header</span></td>
        </tr>
        <tr>
          <td id="L4339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4339"></td>
          <td id="LC4339" class="blob-code blob-code-inner js-file-line">   k = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4340"></td>
          <td id="LC4340" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (a-&gt;<span class="pl-smi">num_bits</span> &gt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L4341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4341"></td>
          <td id="LC4341" class="blob-code blob-code-inner js-file-line">      header[k++] = (stbi_uc) (a-&gt;<span class="pl-smi">code_buffer</span> &amp; <span class="pl-c1">255</span>); <span class="pl-c"><span class="pl-c">//</span> suppress MSVC run-time check</span></td>
        </tr>
        <tr>
          <td id="L4342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4342"></td>
          <td id="LC4342" class="blob-code blob-code-inner js-file-line">      a-&gt;<span class="pl-smi">code_buffer</span> &gt;&gt;= <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L4343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4343"></td>
          <td id="LC4343" class="blob-code blob-code-inner js-file-line">      a-&gt;<span class="pl-smi">num_bits</span> -= <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L4344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4344"></td>
          <td id="LC4344" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4345"></td>
          <td id="LC4345" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (a-&gt;<span class="pl-smi">num_bits</span> &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>zlib corrupt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4346"></td>
          <td id="LC4346" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> now fill header the normal way</span></td>
        </tr>
        <tr>
          <td id="L4347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4347"></td>
          <td id="LC4347" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (k &lt; <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L4348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4348"></td>
          <td id="LC4348" class="blob-code blob-code-inner js-file-line">      header[k++] = <span class="pl-c1">stbi__zget8</span>(a);</td>
        </tr>
        <tr>
          <td id="L4349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4349"></td>
          <td id="LC4349" class="blob-code blob-code-inner js-file-line">   len  = header[<span class="pl-c1">1</span>] * <span class="pl-c1">256</span> + header[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L4350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4350"></td>
          <td id="LC4350" class="blob-code blob-code-inner js-file-line">   nlen = header[<span class="pl-c1">3</span>] * <span class="pl-c1">256</span> + header[<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L4351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4351"></td>
          <td id="LC4351" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (nlen != (len ^ <span class="pl-c1">0xffff</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>zlib corrupt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4352"></td>
          <td id="LC4352" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (a-&gt;<span class="pl-smi">zbuffer</span> + len &gt; a-&gt;<span class="pl-smi">zbuffer_end</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>read past buffer<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4353"></td>
          <td id="LC4353" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (a-&gt;<span class="pl-smi">zout</span> + len &gt; a-&gt;<span class="pl-smi">zout_end</span>)</td>
        </tr>
        <tr>
          <td id="L4354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4354"></td>
          <td id="LC4354" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zexpand</span>(a, a-&gt;<span class="pl-smi">zout</span>, len)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4355"></td>
          <td id="LC4355" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memcpy</span>(a-&gt;<span class="pl-smi">zout</span>, a-&gt;<span class="pl-smi">zbuffer</span>, len);</td>
        </tr>
        <tr>
          <td id="L4356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4356"></td>
          <td id="LC4356" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">zbuffer</span> += len;</td>
        </tr>
        <tr>
          <td id="L4357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4357"></td>
          <td id="LC4357" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">zout</span> += len;</td>
        </tr>
        <tr>
          <td id="L4358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4358"></td>
          <td id="LC4358" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4359"></td>
          <td id="LC4359" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4360"></td>
          <td id="LC4360" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4361"></td>
          <td id="LC4361" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__parse_zlib_header</span>(stbi__zbuf *a)</td>
        </tr>
        <tr>
          <td id="L4362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4362"></td>
          <td id="LC4362" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4363"></td>
          <td id="LC4363" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> cmf   = <span class="pl-c1">stbi__zget8</span>(a);</td>
        </tr>
        <tr>
          <td id="L4364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4364"></td>
          <td id="LC4364" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> cm    = cmf &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L4365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4365"></td>
          <td id="LC4365" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">/*</span> int cinfo = cmf &gt;&gt; 4; <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L4366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4366"></td>
          <td id="LC4366" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> flg   = <span class="pl-c1">stbi__zget8</span>(a);</td>
        </tr>
        <tr>
          <td id="L4367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4367"></td>
          <td id="LC4367" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__zeof</span>(a)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad zlib header<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> zlib spec</span></td>
        </tr>
        <tr>
          <td id="L4368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4368"></td>
          <td id="LC4368" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ((cmf*<span class="pl-c1">256</span>+flg) % <span class="pl-c1">31</span> != <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad zlib header<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> zlib spec</span></td>
        </tr>
        <tr>
          <td id="L4369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4369"></td>
          <td id="LC4369" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (flg &amp; <span class="pl-c1">32</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no preset dict<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> preset dictionary not allowed in png</span></td>
        </tr>
        <tr>
          <td id="L4370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4370"></td>
          <td id="LC4370" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (cm != <span class="pl-c1">8</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad compression<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> DEFLATE required for png</span></td>
        </tr>
        <tr>
          <td id="L4371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4371"></td>
          <td id="LC4371" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> window = 1 &lt;&lt; (8 + cinfo)... but who cares, we fully buffer output</span></td>
        </tr>
        <tr>
          <td id="L4372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4372"></td>
          <td id="LC4372" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4373"></td>
          <td id="LC4373" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4374"></td>
          <td id="LC4374" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4375"></td>
          <td id="LC4375" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> stbi_uc stbi__zdefault_length[STBI__ZNSYMS] =</td>
        </tr>
        <tr>
          <td id="L4376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4376"></td>
          <td id="LC4376" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4377"></td>
          <td id="LC4377" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>, <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L4378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4378"></td>
          <td id="LC4378" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>, <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L4379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4379"></td>
          <td id="LC4379" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>, <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L4380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4380"></td>
          <td id="LC4380" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>, <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L4381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4381"></td>
          <td id="LC4381" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>, <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,</td>
        </tr>
        <tr>
          <td id="L4382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4382"></td>
          <td id="LC4382" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>, <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,</td>
        </tr>
        <tr>
          <td id="L4383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4383"></td>
          <td id="LC4383" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>, <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,</td>
        </tr>
        <tr>
          <td id="L4384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4384"></td>
          <td id="LC4384" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>, <span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>,</td>
        </tr>
        <tr>
          <td id="L4385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4385"></td>
          <td id="LC4385" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>, <span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span></td>
        </tr>
        <tr>
          <td id="L4386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4386"></td>
          <td id="LC4386" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L4387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4387"></td>
          <td id="LC4387" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> stbi_uc stbi__zdefault_distance[<span class="pl-c1">32</span>] =</td>
        </tr>
        <tr>
          <td id="L4388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4388"></td>
          <td id="LC4388" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4389"></td>
          <td id="LC4389" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">5</span></td>
        </tr>
        <tr>
          <td id="L4390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4390"></td>
          <td id="LC4390" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L4391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4391"></td>
          <td id="LC4391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
        </tr>
        <tr>
          <td id="L4392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4392"></td>
          <td id="LC4392" class="blob-code blob-code-inner js-file-line"><span class="pl-c">Init algorithm:</span></td>
        </tr>
        <tr>
          <td id="L4393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4393"></td>
          <td id="LC4393" class="blob-code blob-code-inner js-file-line"><span class="pl-c">{</span></td>
        </tr>
        <tr>
          <td id="L4394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4394"></td>
          <td id="LC4394" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   int i;   // use &lt;= to match clearly with spec</span></td>
        </tr>
        <tr>
          <td id="L4395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4395"></td>
          <td id="LC4395" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   for (i=0; i &lt;= 143; ++i)     stbi__zdefault_length[i]   = 8;</span></td>
        </tr>
        <tr>
          <td id="L4396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4396"></td>
          <td id="LC4396" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   for (   ; i &lt;= 255; ++i)     stbi__zdefault_length[i]   = 9;</span></td>
        </tr>
        <tr>
          <td id="L4397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4397"></td>
          <td id="LC4397" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   for (   ; i &lt;= 279; ++i)     stbi__zdefault_length[i]   = 7;</span></td>
        </tr>
        <tr>
          <td id="L4398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4398"></td>
          <td id="LC4398" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   for (   ; i &lt;= 287; ++i)     stbi__zdefault_length[i]   = 8;</span></td>
        </tr>
        <tr>
          <td id="L4399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4399"></td>
          <td id="LC4399" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
        </tr>
        <tr>
          <td id="L4400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4400"></td>
          <td id="LC4400" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   for (i=0; i &lt;=  31; ++i)     stbi__zdefault_distance[i] = 5;</span></td>
        </tr>
        <tr>
          <td id="L4401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4401"></td>
          <td id="LC4401" class="blob-code blob-code-inner js-file-line"><span class="pl-c">}</span></td>
        </tr>
        <tr>
          <td id="L4402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4402"></td>
          <td id="LC4402" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L4403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4403"></td>
          <td id="LC4403" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4404"></td>
          <td id="LC4404" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__parse_zlib</span>(stbi__zbuf *a, <span class="pl-k">int</span> parse_header)</td>
        </tr>
        <tr>
          <td id="L4405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4405"></td>
          <td id="LC4405" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4406"></td>
          <td id="LC4406" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> final, type;</td>
        </tr>
        <tr>
          <td id="L4407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4407"></td>
          <td id="LC4407" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (parse_header)</td>
        </tr>
        <tr>
          <td id="L4408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4408"></td>
          <td id="LC4408" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!<span class="pl-c1">stbi__parse_zlib_header</span>(a)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4409"></td>
          <td id="LC4409" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">num_bits</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4410"></td>
          <td id="LC4410" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">code_buffer</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4411"></td>
          <td id="LC4411" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L4412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4412"></td>
          <td id="LC4412" class="blob-code blob-code-inner js-file-line">      final = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L4413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4413"></td>
          <td id="LC4413" class="blob-code blob-code-inner js-file-line">      type = <span class="pl-c1">stbi__zreceive</span>(a,<span class="pl-c1">2</span>);</td>
        </tr>
        <tr>
          <td id="L4414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4414"></td>
          <td id="LC4414" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (type == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L4415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4415"></td>
          <td id="LC4415" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!<span class="pl-c1">stbi__parse_uncompressed_block</span>(a)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4416"></td>
          <td id="LC4416" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (type == <span class="pl-c1">3</span>) {</td>
        </tr>
        <tr>
          <td id="L4417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4417"></td>
          <td id="LC4417" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4418"></td>
          <td id="LC4418" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4419"></td>
          <td id="LC4419" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (type == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L4420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4420"></td>
          <td id="LC4420" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> use fixed code lengths</span></td>
        </tr>
        <tr>
          <td id="L4421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4421"></td>
          <td id="LC4421" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zbuild_huffman</span>(&amp;a-&gt;<span class="pl-smi">z_length</span>  , stbi__zdefault_length  , STBI__ZNSYMS)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4422"></td>
          <td id="LC4422" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__zbuild_huffman</span>(&amp;a-&gt;<span class="pl-smi">z_distance</span>, stbi__zdefault_distance,  <span class="pl-c1">32</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4423"></td>
          <td id="LC4423" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4424"></td>
          <td id="LC4424" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__compute_huffman_codes</span>(a)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4425"></td>
          <td id="LC4425" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4426"></td>
          <td id="LC4426" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!<span class="pl-c1">stbi__parse_huffman_block</span>(a)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4427"></td>
          <td id="LC4427" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4428"></td>
          <td id="LC4428" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">while</span> (!final);</td>
        </tr>
        <tr>
          <td id="L4429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4429"></td>
          <td id="LC4429" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4430"></td>
          <td id="LC4430" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4431"></td>
          <td id="LC4431" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4432"></td>
          <td id="LC4432" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__do_zlib</span>(stbi__zbuf *a, <span class="pl-k">char</span> *obuf, <span class="pl-k">int</span> olen, <span class="pl-k">int</span> <span class="pl-c1">exp</span>, <span class="pl-k">int</span> parse_header)</td>
        </tr>
        <tr>
          <td id="L4433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4433"></td>
          <td id="LC4433" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4434"></td>
          <td id="LC4434" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">zout_start</span> = obuf;</td>
        </tr>
        <tr>
          <td id="L4435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4435"></td>
          <td id="LC4435" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">zout</span>       = obuf;</td>
        </tr>
        <tr>
          <td id="L4436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4436"></td>
          <td id="LC4436" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">zout_end</span>   = obuf + olen;</td>
        </tr>
        <tr>
          <td id="L4437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4437"></td>
          <td id="LC4437" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">z_expandable</span> = <span class="pl-c1">exp</span>;</td>
        </tr>
        <tr>
          <td id="L4438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4438"></td>
          <td id="LC4438" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4439"></td>
          <td id="LC4439" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__parse_zlib</span>(a, parse_header);</td>
        </tr>
        <tr>
          <td id="L4440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4440"></td>
          <td id="LC4440" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4441"></td>
          <td id="LC4441" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4442"></td>
          <td id="LC4442" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_malloc_guesssize</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> initial_size, <span class="pl-k">int</span> *outlen)</td>
        </tr>
        <tr>
          <td id="L4443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4443"></td>
          <td id="LC4443" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4444"></td>
          <td id="LC4444" class="blob-code blob-code-inner js-file-line">   stbi__zbuf a;</td>
        </tr>
        <tr>
          <td id="L4445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4445"></td>
          <td id="LC4445" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *p = (<span class="pl-k">char</span> *) <span class="pl-c1">stbi__malloc</span>(initial_size);</td>
        </tr>
        <tr>
          <td id="L4446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4446"></td>
          <td id="LC4446" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L4447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4447"></td>
          <td id="LC4447" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer</span> = (stbi_uc *) buffer;</td>
        </tr>
        <tr>
          <td id="L4448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4448"></td>
          <td id="LC4448" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer_end</span> = (stbi_uc *) buffer + len;</td>
        </tr>
        <tr>
          <td id="L4449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4449"></td>
          <td id="LC4449" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__do_zlib</span>(&amp;a, p, initial_size, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>)) {</td>
        </tr>
        <tr>
          <td id="L4450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4450"></td>
          <td id="LC4450" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (outlen) *outlen = (<span class="pl-k">int</span>) (a.<span class="pl-smi">zout</span> - a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4451"></td>
          <td id="LC4451" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a.<span class="pl-smi">zout_start</span>;</td>
        </tr>
        <tr>
          <td id="L4452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4452"></td>
          <td id="LC4452" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4453"></td>
          <td id="LC4453" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4454"></td>
          <td id="LC4454" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L4455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4455"></td>
          <td id="LC4455" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4456"></td>
          <td id="LC4456" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4457"></td>
          <td id="LC4457" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4458"></td>
          <td id="LC4458" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_malloc</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *outlen)</td>
        </tr>
        <tr>
          <td id="L4459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4459"></td>
          <td id="LC4459" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4460"></td>
          <td id="LC4460" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi_zlib_decode_malloc_guesssize</span>(buffer, len, <span class="pl-c1">16384</span>, outlen);</td>
        </tr>
        <tr>
          <td id="L4461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4461"></td>
          <td id="LC4461" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4462"></td>
          <td id="LC4462" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4463"></td>
          <td id="LC4463" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_malloc_guesssize_headerflag</span>(<span class="pl-k">const</span> <span class="pl-k">char</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> initial_size, <span class="pl-k">int</span> *outlen, <span class="pl-k">int</span> parse_header)</td>
        </tr>
        <tr>
          <td id="L4464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4464"></td>
          <td id="LC4464" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4465"></td>
          <td id="LC4465" class="blob-code blob-code-inner js-file-line">   stbi__zbuf a;</td>
        </tr>
        <tr>
          <td id="L4466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4466"></td>
          <td id="LC4466" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *p = (<span class="pl-k">char</span> *) <span class="pl-c1">stbi__malloc</span>(initial_size);</td>
        </tr>
        <tr>
          <td id="L4467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4467"></td>
          <td id="LC4467" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L4468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4468"></td>
          <td id="LC4468" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer</span> = (stbi_uc *) buffer;</td>
        </tr>
        <tr>
          <td id="L4469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4469"></td>
          <td id="LC4469" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer_end</span> = (stbi_uc *) buffer + len;</td>
        </tr>
        <tr>
          <td id="L4470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4470"></td>
          <td id="LC4470" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__do_zlib</span>(&amp;a, p, initial_size, <span class="pl-c1">1</span>, parse_header)) {</td>
        </tr>
        <tr>
          <td id="L4471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4471"></td>
          <td id="LC4471" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (outlen) *outlen = (<span class="pl-k">int</span>) (a.<span class="pl-smi">zout</span> - a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4472"></td>
          <td id="LC4472" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a.<span class="pl-smi">zout_start</span>;</td>
        </tr>
        <tr>
          <td id="L4473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4473"></td>
          <td id="LC4473" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4474"></td>
          <td id="LC4474" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4475"></td>
          <td id="LC4475" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L4476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4476"></td>
          <td id="LC4476" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4477"></td>
          <td id="LC4477" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4478"></td>
          <td id="LC4478" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4479"></td>
          <td id="LC4479" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_zlib_decode_buffer</span>(<span class="pl-k">char</span> *obuffer, <span class="pl-k">int</span> olen, <span class="pl-k">char</span> <span class="pl-k">const</span> *ibuffer, <span class="pl-k">int</span> ilen)</td>
        </tr>
        <tr>
          <td id="L4480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4480"></td>
          <td id="LC4480" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4481"></td>
          <td id="LC4481" class="blob-code blob-code-inner js-file-line">   stbi__zbuf a;</td>
        </tr>
        <tr>
          <td id="L4482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4482"></td>
          <td id="LC4482" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer</span> = (stbi_uc *) ibuffer;</td>
        </tr>
        <tr>
          <td id="L4483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4483"></td>
          <td id="LC4483" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer_end</span> = (stbi_uc *) ibuffer + ilen;</td>
        </tr>
        <tr>
          <td id="L4484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4484"></td>
          <td id="LC4484" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__do_zlib</span>(&amp;a, obuffer, olen, <span class="pl-c1">0</span>, <span class="pl-c1">1</span>))</td>
        </tr>
        <tr>
          <td id="L4485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4485"></td>
          <td id="LC4485" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (<span class="pl-k">int</span>) (a.<span class="pl-smi">zout</span> - a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4486"></td>
          <td id="LC4486" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4487"></td>
          <td id="LC4487" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4488"></td>
          <td id="LC4488" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4489"></td>
          <td id="LC4489" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4490"></td>
          <td id="LC4490" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">char</span> *<span class="pl-c1">stbi_zlib_decode_noheader_malloc</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *outlen)</td>
        </tr>
        <tr>
          <td id="L4491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4491"></td>
          <td id="LC4491" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4492"></td>
          <td id="LC4492" class="blob-code blob-code-inner js-file-line">   stbi__zbuf a;</td>
        </tr>
        <tr>
          <td id="L4493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4493"></td>
          <td id="LC4493" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *p = (<span class="pl-k">char</span> *) <span class="pl-c1">stbi__malloc</span>(<span class="pl-c1">16384</span>);</td>
        </tr>
        <tr>
          <td id="L4494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4494"></td>
          <td id="LC4494" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L4495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4495"></td>
          <td id="LC4495" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer</span> = (stbi_uc *) buffer;</td>
        </tr>
        <tr>
          <td id="L4496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4496"></td>
          <td id="LC4496" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer_end</span> = (stbi_uc *) buffer+len;</td>
        </tr>
        <tr>
          <td id="L4497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4497"></td>
          <td id="LC4497" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__do_zlib</span>(&amp;a, p, <span class="pl-c1">16384</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>)) {</td>
        </tr>
        <tr>
          <td id="L4498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4498"></td>
          <td id="LC4498" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (outlen) *outlen = (<span class="pl-k">int</span>) (a.<span class="pl-smi">zout</span> - a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4499"></td>
          <td id="LC4499" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> a.<span class="pl-smi">zout_start</span>;</td>
        </tr>
        <tr>
          <td id="L4500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4500"></td>
          <td id="LC4500" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4501"></td>
          <td id="LC4501" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4502"></td>
          <td id="LC4502" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L4503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4503"></td>
          <td id="LC4503" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4504"></td>
          <td id="LC4504" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4505"></td>
          <td id="LC4505" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4506"></td>
          <td id="LC4506" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_zlib_decode_noheader_buffer</span>(<span class="pl-k">char</span> *obuffer, <span class="pl-k">int</span> olen, <span class="pl-k">const</span> <span class="pl-k">char</span> *ibuffer, <span class="pl-k">int</span> ilen)</td>
        </tr>
        <tr>
          <td id="L4507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4507"></td>
          <td id="LC4507" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4508"></td>
          <td id="LC4508" class="blob-code blob-code-inner js-file-line">   stbi__zbuf a;</td>
        </tr>
        <tr>
          <td id="L4509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4509"></td>
          <td id="LC4509" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer</span> = (stbi_uc *) ibuffer;</td>
        </tr>
        <tr>
          <td id="L4510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4510"></td>
          <td id="LC4510" class="blob-code blob-code-inner js-file-line">   a.<span class="pl-smi">zbuffer_end</span> = (stbi_uc *) ibuffer + ilen;</td>
        </tr>
        <tr>
          <td id="L4511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4511"></td>
          <td id="LC4511" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__do_zlib</span>(&amp;a, obuffer, olen, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L4512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4512"></td>
          <td id="LC4512" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (<span class="pl-k">int</span>) (a.<span class="pl-smi">zout</span> - a.<span class="pl-smi">zout_start</span>);</td>
        </tr>
        <tr>
          <td id="L4513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4513"></td>
          <td id="LC4513" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4514"></td>
          <td id="LC4514" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4515"></td>
          <td id="LC4515" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4516"></td>
          <td id="LC4516" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L4517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4517"></td>
          <td id="LC4517" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4518"></td>
          <td id="LC4518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> public domain &quot;baseline&quot; PNG decoder   v0.10  Sean Barrett 2006-11-18</span></td>
        </tr>
        <tr>
          <td id="L4519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4519"></td>
          <td id="LC4519" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    simple implementation</span></td>
        </tr>
        <tr>
          <td id="L4520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4520"></td>
          <td id="LC4520" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - only 8-bit samples</span></td>
        </tr>
        <tr>
          <td id="L4521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4521"></td>
          <td id="LC4521" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - no CRC checking</span></td>
        </tr>
        <tr>
          <td id="L4522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4522"></td>
          <td id="LC4522" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - allocates lots of intermediate memory</span></td>
        </tr>
        <tr>
          <td id="L4523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4523"></td>
          <td id="LC4523" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        - avoids problem of streaming data between subsystems</span></td>
        </tr>
        <tr>
          <td id="L4524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4524"></td>
          <td id="LC4524" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>        - avoids explicit window management</span></td>
        </tr>
        <tr>
          <td id="L4525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4525"></td>
          <td id="LC4525" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    performance</span></td>
        </tr>
        <tr>
          <td id="L4526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4526"></td>
          <td id="LC4526" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>      - uses stb_zlib, a PD zlib implementation with fast huffman decoding</span></td>
        </tr>
        <tr>
          <td id="L4527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4527"></td>
          <td id="LC4527" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4528"></td>
          <td id="LC4528" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PNG</td>
        </tr>
        <tr>
          <td id="L4529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4529"></td>
          <td id="LC4529" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L4530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4530"></td>
          <td id="LC4530" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4531"></td>
          <td id="LC4531" class="blob-code blob-code-inner js-file-line">   stbi__uint32 length;</td>
        </tr>
        <tr>
          <td id="L4532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4532"></td>
          <td id="LC4532" class="blob-code blob-code-inner js-file-line">   stbi__uint32 type;</td>
        </tr>
        <tr>
          <td id="L4533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4533"></td>
          <td id="LC4533" class="blob-code blob-code-inner js-file-line">} stbi__pngchunk;</td>
        </tr>
        <tr>
          <td id="L4534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4534"></td>
          <td id="LC4534" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4535"></td>
          <td id="LC4535" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi__pngchunk <span class="pl-smi">stbi__get_chunk_header</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L4536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4536"></td>
          <td id="LC4536" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4537"></td>
          <td id="LC4537" class="blob-code blob-code-inner js-file-line">   stbi__pngchunk c;</td>
        </tr>
        <tr>
          <td id="L4538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4538"></td>
          <td id="LC4538" class="blob-code blob-code-inner js-file-line">   c.<span class="pl-smi">length</span> = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L4539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4539"></td>
          <td id="LC4539" class="blob-code blob-code-inner js-file-line">   c.<span class="pl-smi">type</span>   = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L4540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4540"></td>
          <td id="LC4540" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> c;</td>
        </tr>
        <tr>
          <td id="L4541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4541"></td>
          <td id="LC4541" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4542"></td>
          <td id="LC4542" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4543"></td>
          <td id="LC4543" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__check_png_header</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L4544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4544"></td>
          <td id="LC4544" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4545"></td>
          <td id="LC4545" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">static</span> <span class="pl-k">const</span> stbi_uc png_sig[<span class="pl-c1">8</span>] = { <span class="pl-c1">137</span>,<span class="pl-c1">80</span>,<span class="pl-c1">78</span>,<span class="pl-c1">71</span>,<span class="pl-c1">13</span>,<span class="pl-c1">10</span>,<span class="pl-c1">26</span>,<span class="pl-c1">10</span> };</td>
        </tr>
        <tr>
          <td id="L4546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4546"></td>
          <td id="LC4546" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L4547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4547"></td>
          <td id="LC4547" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">8</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L4548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4548"></td>
          <td id="LC4548" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != png_sig[i]) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad png sig<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Not a PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4549"></td>
          <td id="LC4549" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4550"></td>
          <td id="LC4550" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4551"></td>
          <td id="LC4551" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4552"></td>
          <td id="LC4552" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L4553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4553"></td>
          <td id="LC4553" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4554"></td>
          <td id="LC4554" class="blob-code blob-code-inner js-file-line">   stbi__context *s;</td>
        </tr>
        <tr>
          <td id="L4555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4555"></td>
          <td id="LC4555" class="blob-code blob-code-inner js-file-line">   stbi_uc *idata, *expanded, *out;</td>
        </tr>
        <tr>
          <td id="L4556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4556"></td>
          <td id="LC4556" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> depth;</td>
        </tr>
        <tr>
          <td id="L4557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4557"></td>
          <td id="LC4557" class="blob-code blob-code-inner js-file-line">} stbi__png;</td>
        </tr>
        <tr>
          <td id="L4558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4558"></td>
          <td id="LC4558" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4559"></td>
          <td id="LC4559" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4560"></td>
          <td id="LC4560" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> {</td>
        </tr>
        <tr>
          <td id="L4561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4561"></td>
          <td id="LC4561" class="blob-code blob-code-inner js-file-line">   STBI__F_none=<span class="pl-c1">0</span>,</td>
        </tr>
        <tr>
          <td id="L4562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4562"></td>
          <td id="LC4562" class="blob-code blob-code-inner js-file-line">   STBI__F_sub=<span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L4563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4563"></td>
          <td id="LC4563" class="blob-code blob-code-inner js-file-line">   STBI__F_up=<span class="pl-c1">2</span>,</td>
        </tr>
        <tr>
          <td id="L4564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4564"></td>
          <td id="LC4564" class="blob-code blob-code-inner js-file-line">   STBI__F_avg=<span class="pl-c1">3</span>,</td>
        </tr>
        <tr>
          <td id="L4565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4565"></td>
          <td id="LC4565" class="blob-code blob-code-inner js-file-line">   STBI__F_paeth=<span class="pl-c1">4</span>,</td>
        </tr>
        <tr>
          <td id="L4566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4566"></td>
          <td id="LC4566" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> synthetic filters used for first scanline to avoid needing a dummy row of 0s</span></td>
        </tr>
        <tr>
          <td id="L4567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4567"></td>
          <td id="LC4567" class="blob-code blob-code-inner js-file-line">   STBI__F_avg_first,</td>
        </tr>
        <tr>
          <td id="L4568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4568"></td>
          <td id="LC4568" class="blob-code blob-code-inner js-file-line">   STBI__F_paeth_first</td>
        </tr>
        <tr>
          <td id="L4569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4569"></td>
          <td id="LC4569" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L4570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4570"></td>
          <td id="LC4570" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4571"></td>
          <td id="LC4571" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc first_row_filter[<span class="pl-c1">5</span>] =</td>
        </tr>
        <tr>
          <td id="L4572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4572"></td>
          <td id="LC4572" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4573"></td>
          <td id="LC4573" class="blob-code blob-code-inner js-file-line">   STBI__F_none,</td>
        </tr>
        <tr>
          <td id="L4574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4574"></td>
          <td id="LC4574" class="blob-code blob-code-inner js-file-line">   STBI__F_sub,</td>
        </tr>
        <tr>
          <td id="L4575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4575"></td>
          <td id="LC4575" class="blob-code blob-code-inner js-file-line">   STBI__F_none,</td>
        </tr>
        <tr>
          <td id="L4576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4576"></td>
          <td id="LC4576" class="blob-code blob-code-inner js-file-line">   STBI__F_avg_first,</td>
        </tr>
        <tr>
          <td id="L4577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4577"></td>
          <td id="LC4577" class="blob-code blob-code-inner js-file-line">   STBI__F_paeth_first</td>
        </tr>
        <tr>
          <td id="L4578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4578"></td>
          <td id="LC4578" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L4579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4579"></td>
          <td id="LC4579" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4580"></td>
          <td id="LC4580" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__paeth</span>(<span class="pl-k">int</span> a, <span class="pl-k">int</span> b, <span class="pl-k">int</span> c)</td>
        </tr>
        <tr>
          <td id="L4581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4581"></td>
          <td id="LC4581" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4582"></td>
          <td id="LC4582" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> p = a + b - c;</td>
        </tr>
        <tr>
          <td id="L4583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4583"></td>
          <td id="LC4583" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> pa = <span class="pl-c1">abs</span>(p-a);</td>
        </tr>
        <tr>
          <td id="L4584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4584"></td>
          <td id="LC4584" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> pb = <span class="pl-c1">abs</span>(p-b);</td>
        </tr>
        <tr>
          <td id="L4585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4585"></td>
          <td id="LC4585" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> pc = <span class="pl-c1">abs</span>(p-c);</td>
        </tr>
        <tr>
          <td id="L4586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4586"></td>
          <td id="LC4586" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (pa &lt;= pb &amp;&amp; pa &lt;= pc) <span class="pl-k">return</span> a;</td>
        </tr>
        <tr>
          <td id="L4587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4587"></td>
          <td id="LC4587" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (pb &lt;= pc) <span class="pl-k">return</span> b;</td>
        </tr>
        <tr>
          <td id="L4588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4588"></td>
          <td id="LC4588" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> c;</td>
        </tr>
        <tr>
          <td id="L4589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4589"></td>
          <td id="LC4589" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4590"></td>
          <td id="LC4590" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4591"></td>
          <td id="LC4591" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> stbi_uc stbi__depth_scale_table[<span class="pl-c1">9</span>] = { <span class="pl-c1">0</span>, <span class="pl-c1">0xff</span>, <span class="pl-c1">0x55</span>, <span class="pl-c1">0</span>, <span class="pl-c1">0x11</span>, <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>, <span class="pl-c1">0x01</span> };</td>
        </tr>
        <tr>
          <td id="L4592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4592"></td>
          <td id="LC4592" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4593"></td>
          <td id="LC4593" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> create the png data from post-deflated data</span></td>
        </tr>
        <tr>
          <td id="L4594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4594"></td>
          <td id="LC4594" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__create_png_image_raw</span>(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, <span class="pl-k">int</span> out_n, stbi__uint32 x, stbi__uint32 y, <span class="pl-k">int</span> depth, <span class="pl-k">int</span> color)</td>
        </tr>
        <tr>
          <td id="L4595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4595"></td>
          <td id="LC4595" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4596"></td>
          <td id="LC4596" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> bytes = (depth == <span class="pl-c1">16</span>? <span class="pl-c1">2</span> : <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L4597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4597"></td>
          <td id="LC4597" class="blob-code blob-code-inner js-file-line">   stbi__context *s = a-&gt;<span class="pl-smi">s</span>;</td>
        </tr>
        <tr>
          <td id="L4598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4598"></td>
          <td id="LC4598" class="blob-code blob-code-inner js-file-line">   stbi__uint32 i,j,stride = x*out_n*bytes;</td>
        </tr>
        <tr>
          <td id="L4599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4599"></td>
          <td id="LC4599" class="blob-code blob-code-inner js-file-line">   stbi__uint32 img_len, img_width_bytes;</td>
        </tr>
        <tr>
          <td id="L4600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4600"></td>
          <td id="LC4600" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> k;</td>
        </tr>
        <tr>
          <td id="L4601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4601"></td>
          <td id="LC4601" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> img_n = s-&gt;<span class="pl-smi">img_n</span>; <span class="pl-c"><span class="pl-c">//</span> copy it into a local for later</span></td>
        </tr>
        <tr>
          <td id="L4602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4602"></td>
          <td id="LC4602" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4603"></td>
          <td id="LC4603" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> output_bytes = out_n*bytes;</td>
        </tr>
        <tr>
          <td id="L4604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4604"></td>
          <td id="LC4604" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> filter_bytes = img_n*bytes;</td>
        </tr>
        <tr>
          <td id="L4605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4605"></td>
          <td id="LC4605" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> width = x;</td>
        </tr>
        <tr>
          <td id="L4606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4606"></td>
          <td id="LC4606" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4607"></td>
          <td id="LC4607" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(out_n == s-&gt;<span class="pl-smi">img_n</span> || out_n == s-&gt;<span class="pl-smi">img_n</span>+<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L4608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4608"></td>
          <td id="LC4608" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">out</span> = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(x, y, output_bytes, <span class="pl-c1">0</span>); <span class="pl-c"><span class="pl-c">//</span> extra bytes to write off the end into</span></td>
        </tr>
        <tr>
          <td id="L4609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4609"></td>
          <td id="LC4609" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!a-&gt;<span class="pl-smi">out</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4610"></td>
          <td id="LC4610" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4611"></td>
          <td id="LC4611" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(img_n, x, depth, <span class="pl-c1">7</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4612"></td>
          <td id="LC4612" class="blob-code blob-code-inner js-file-line">   img_width_bytes = (((img_n * x * depth) + <span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>);</td>
        </tr>
        <tr>
          <td id="L4613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4613"></td>
          <td id="LC4613" class="blob-code blob-code-inner js-file-line">   img_len = (img_width_bytes + <span class="pl-c1">1</span>) * y;</td>
        </tr>
        <tr>
          <td id="L4614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4614"></td>
          <td id="LC4614" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4615"></td>
          <td id="LC4615" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> we used to check for exact match between raw_len and img_len on non-interlaced PNGs,</span></td>
        </tr>
        <tr>
          <td id="L4616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4616"></td>
          <td id="LC4616" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> but issue #276 reported a PNG in the wild that had extra data at the end (all zeros),</span></td>
        </tr>
        <tr>
          <td id="L4617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4617"></td>
          <td id="LC4617" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> so just check for raw_len &lt; img_len always.</span></td>
        </tr>
        <tr>
          <td id="L4618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4618"></td>
          <td id="LC4618" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (raw_len &lt; img_len) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not enough pixels<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4619"></td>
          <td id="LC4619" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4620"></td>
          <td id="LC4620" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; y; ++j) {</td>
        </tr>
        <tr>
          <td id="L4621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4621"></td>
          <td id="LC4621" class="blob-code blob-code-inner js-file-line">      stbi_uc *cur = a-&gt;<span class="pl-smi">out</span> + stride*j;</td>
        </tr>
        <tr>
          <td id="L4622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4622"></td>
          <td id="LC4622" class="blob-code blob-code-inner js-file-line">      stbi_uc *prior;</td>
        </tr>
        <tr>
          <td id="L4623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4623"></td>
          <td id="LC4623" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> filter = *raw++;</td>
        </tr>
        <tr>
          <td id="L4624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4624"></td>
          <td id="LC4624" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4625"></td>
          <td id="LC4625" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (filter &gt; <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L4626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4626"></td>
          <td id="LC4626" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid filter<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4627"></td>
          <td id="LC4627" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4628"></td>
          <td id="LC4628" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (depth &lt; <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L4629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4629"></td>
          <td id="LC4629" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (img_width_bytes &gt; x) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid width<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4630"></td>
          <td id="LC4630" class="blob-code blob-code-inner js-file-line">         cur += x*out_n - img_width_bytes; <span class="pl-c"><span class="pl-c">//</span> store output to the rightmost img_len bytes, so we can decode in place</span></td>
        </tr>
        <tr>
          <td id="L4631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4631"></td>
          <td id="LC4631" class="blob-code blob-code-inner js-file-line">         filter_bytes = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4632"></td>
          <td id="LC4632" class="blob-code blob-code-inner js-file-line">         width = img_width_bytes;</td>
        </tr>
        <tr>
          <td id="L4633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4633"></td>
          <td id="LC4633" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4634"></td>
          <td id="LC4634" class="blob-code blob-code-inner js-file-line">      prior = cur - stride; <span class="pl-c"><span class="pl-c">//</span> bugfix: need to compute this after &#39;cur +=&#39; computation above</span></td>
        </tr>
        <tr>
          <td id="L4635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4635"></td>
          <td id="LC4635" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4636"></td>
          <td id="LC4636" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> if first row, use special filter that doesn&#39;t sample previous row</span></td>
        </tr>
        <tr>
          <td id="L4637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4637"></td>
          <td id="LC4637" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (j == <span class="pl-c1">0</span>) filter = first_row_filter[filter];</td>
        </tr>
        <tr>
          <td id="L4638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4638"></td>
          <td id="LC4638" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4639"></td>
          <td id="LC4639" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> handle first byte explicitly</span></td>
        </tr>
        <tr>
          <td id="L4640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4640"></td>
          <td id="LC4640" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; filter_bytes; ++k) {</td>
        </tr>
        <tr>
          <td id="L4641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4641"></td>
          <td id="LC4641" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">switch</span> (filter) {</td>
        </tr>
        <tr>
          <td id="L4642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4642"></td>
          <td id="LC4642" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_none       : cur[k] = raw[k]; <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4643"></td>
          <td id="LC4643" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_sub        : cur[k] = raw[k]; <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4644"></td>
          <td id="LC4644" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_up         : cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + prior[k]); <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4645"></td>
          <td id="LC4645" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_avg        : cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + (prior[k]&gt;&gt;<span class="pl-c1">1</span>)); <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4646"></td>
          <td id="LC4646" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_paeth      : cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + <span class="pl-c1">stbi__paeth</span>(<span class="pl-c1">0</span>,prior[k],<span class="pl-c1">0</span>)); <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4647"></td>
          <td id="LC4647" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_avg_first  : cur[k] = raw[k]; <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4648"></td>
          <td id="LC4648" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_paeth_first: cur[k] = raw[k]; <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4649"></td>
          <td id="LC4649" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4650"></td>
          <td id="LC4650" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4651"></td>
          <td id="LC4651" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4652"></td>
          <td id="LC4652" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (depth == <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L4653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4653"></td>
          <td id="LC4653" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (img_n != out_n)</td>
        </tr>
        <tr>
          <td id="L4654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4654"></td>
          <td id="LC4654" class="blob-code blob-code-inner js-file-line">            cur[img_n] = <span class="pl-c1">255</span>; <span class="pl-c"><span class="pl-c">//</span> first pixel</span></td>
        </tr>
        <tr>
          <td id="L4655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4655"></td>
          <td id="LC4655" class="blob-code blob-code-inner js-file-line">         raw += img_n;</td>
        </tr>
        <tr>
          <td id="L4656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4656"></td>
          <td id="LC4656" class="blob-code blob-code-inner js-file-line">         cur += out_n;</td>
        </tr>
        <tr>
          <td id="L4657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4657"></td>
          <td id="LC4657" class="blob-code blob-code-inner js-file-line">         prior += out_n;</td>
        </tr>
        <tr>
          <td id="L4658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4658"></td>
          <td id="LC4658" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (depth == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L4659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4659"></td>
          <td id="LC4659" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (img_n != out_n) {</td>
        </tr>
        <tr>
          <td id="L4660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4660"></td>
          <td id="LC4660" class="blob-code blob-code-inner js-file-line">            cur[filter_bytes]   = <span class="pl-c1">255</span>; <span class="pl-c"><span class="pl-c">//</span> first pixel top byte</span></td>
        </tr>
        <tr>
          <td id="L4661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4661"></td>
          <td id="LC4661" class="blob-code blob-code-inner js-file-line">            cur[filter_bytes+<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>; <span class="pl-c"><span class="pl-c">//</span> first pixel bottom byte</span></td>
        </tr>
        <tr>
          <td id="L4662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4662"></td>
          <td id="LC4662" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4663"></td>
          <td id="LC4663" class="blob-code blob-code-inner js-file-line">         raw += filter_bytes;</td>
        </tr>
        <tr>
          <td id="L4664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4664"></td>
          <td id="LC4664" class="blob-code blob-code-inner js-file-line">         cur += output_bytes;</td>
        </tr>
        <tr>
          <td id="L4665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4665"></td>
          <td id="LC4665" class="blob-code blob-code-inner js-file-line">         prior += output_bytes;</td>
        </tr>
        <tr>
          <td id="L4666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4666"></td>
          <td id="LC4666" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4667"></td>
          <td id="LC4667" class="blob-code blob-code-inner js-file-line">         raw += <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4668"></td>
          <td id="LC4668" class="blob-code blob-code-inner js-file-line">         cur += <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4669"></td>
          <td id="LC4669" class="blob-code blob-code-inner js-file-line">         prior += <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4670"></td>
          <td id="LC4670" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4671"></td>
          <td id="LC4671" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4672"></td>
          <td id="LC4672" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> this is a little gross, so that we don&#39;t switch per-pixel or per-component</span></td>
        </tr>
        <tr>
          <td id="L4673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4673"></td>
          <td id="LC4673" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (depth &lt; <span class="pl-c1">8</span> || img_n == out_n) {</td>
        </tr>
        <tr>
          <td id="L4674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4674"></td>
          <td id="LC4674" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> nk = (width - <span class="pl-c1">1</span>)*filter_bytes;</td>
        </tr>
        <tr>
          <td id="L4675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4675"></td>
          <td id="LC4675" class="blob-code blob-code-inner js-file-line">         #<span class="pl-k">define</span> <span class="pl-en">STBI__CASE</span>(<span class="pl-v">f</span>) \</td>
        </tr>
        <tr>
          <td id="L4676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4676"></td>
          <td id="LC4676" class="blob-code blob-code-inner js-file-line">             <span class="pl-k">case</span> f:     \</td>
        </tr>
        <tr>
          <td id="L4677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4677"></td>
          <td id="LC4677" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; nk; ++k)</td>
        </tr>
        <tr>
          <td id="L4678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4678"></td>
          <td id="LC4678" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">switch</span> (filter) {</td>
        </tr>
        <tr>
          <td id="L4679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4679"></td>
          <td id="LC4679" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> &quot;none&quot; filter turns into a memcpy here; make that explicit.</span></td>
        </tr>
        <tr>
          <td id="L4680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4680"></td>
          <td id="LC4680" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> STBI__F_none:         <span class="pl-c1">memcpy</span>(cur, raw, nk); <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4681"></td>
          <td id="LC4681" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_sub)          { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + cur[k-filter_bytes]); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4682"></td>
          <td id="LC4682" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_up)           { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + prior[k]); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4683"></td>
          <td id="LC4683" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_avg)          { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + ((prior[k] + cur[k-filter_bytes])&gt;&gt;<span class="pl-c1">1</span>)); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4684"></td>
          <td id="LC4684" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_paeth)        { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + <span class="pl-c1">stbi__paeth</span>(cur[k-filter_bytes],prior[k],prior[k-filter_bytes])); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4685"></td>
          <td id="LC4685" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_avg_first)    { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + (cur[k-filter_bytes] &gt;&gt; <span class="pl-c1">1</span>)); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4686"></td>
          <td id="LC4686" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_paeth_first)  { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + <span class="pl-c1">stbi__paeth</span>(cur[k-filter_bytes],<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4687"></td>
          <td id="LC4687" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4688"></td>
          <td id="LC4688" class="blob-code blob-code-inner js-file-line">         #<span class="pl-k">undef</span> STBI__CASE</td>
        </tr>
        <tr>
          <td id="L4689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4689"></td>
          <td id="LC4689" class="blob-code blob-code-inner js-file-line">         raw += nk;</td>
        </tr>
        <tr>
          <td id="L4690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4690"></td>
          <td id="LC4690" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4691"></td>
          <td id="LC4691" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_ASSERT</span>(img_n+<span class="pl-c1">1</span> == out_n);</td>
        </tr>
        <tr>
          <td id="L4692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4692"></td>
          <td id="LC4692" class="blob-code blob-code-inner js-file-line">         #<span class="pl-k">define</span> <span class="pl-en">STBI__CASE</span>(<span class="pl-v">f</span>) \</td>
        </tr>
        <tr>
          <td id="L4693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4693"></td>
          <td id="LC4693" class="blob-code blob-code-inner js-file-line">             <span class="pl-k">case</span> f:     \</td>
        </tr>
        <tr>
          <td id="L4694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4694"></td>
          <td id="LC4694" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span> (i=x-<span class="pl-c1">1</span>; i &gt;= <span class="pl-c1">1</span>; --i, cur[filter_bytes]=<span class="pl-c1">255</span>,raw+=filter_bytes,cur+=output_bytes,prior+=output_bytes) \</td>
        </tr>
        <tr>
          <td id="L4695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4695"></td>
          <td id="LC4695" class="blob-code blob-code-inner js-file-line">                   <span class="pl-k">for</span> (k=<span class="pl-c1">0</span>; k &lt; filter_bytes; ++k)</td>
        </tr>
        <tr>
          <td id="L4696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4696"></td>
          <td id="LC4696" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">switch</span> (filter) {</td>
        </tr>
        <tr>
          <td id="L4697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4697"></td>
          <td id="LC4697" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_none)         { cur[k] = raw[k]; } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4698"></td>
          <td id="LC4698" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_sub)          { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + cur[k- output_bytes]); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4699"></td>
          <td id="LC4699" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_up)           { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + prior[k]); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4700"></td>
          <td id="LC4700" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_avg)          { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + ((prior[k] + cur[k- output_bytes])&gt;&gt;<span class="pl-c1">1</span>)); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4701"></td>
          <td id="LC4701" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_paeth)        { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + <span class="pl-c1">stbi__paeth</span>(cur[k- output_bytes],prior[k],prior[k- output_bytes])); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4702"></td>
          <td id="LC4702" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_avg_first)    { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + (cur[k- output_bytes] &gt;&gt; <span class="pl-c1">1</span>)); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4703"></td>
          <td id="LC4703" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI__CASE</span>(STBI__F_paeth_first)  { cur[k] = <span class="pl-c1">STBI__BYTECAST</span>(raw[k] + <span class="pl-c1">stbi__paeth</span>(cur[k- output_bytes],<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)); } <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L4704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4704"></td>
          <td id="LC4704" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4705"></td>
          <td id="LC4705" class="blob-code blob-code-inner js-file-line">         #<span class="pl-k">undef</span> STBI__CASE</td>
        </tr>
        <tr>
          <td id="L4706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4706"></td>
          <td id="LC4706" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4707"></td>
          <td id="LC4707" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> the loop above sets the high byte of the pixels&#39; alpha, but for</span></td>
        </tr>
        <tr>
          <td id="L4708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4708"></td>
          <td id="LC4708" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> 16 bit png files we also need the low byte set. we&#39;ll do that here.</span></td>
        </tr>
        <tr>
          <td id="L4709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4709"></td>
          <td id="LC4709" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (depth == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L4710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4710"></td>
          <td id="LC4710" class="blob-code blob-code-inner js-file-line">            cur = a-&gt;<span class="pl-smi">out</span> + stride*j; <span class="pl-c"><span class="pl-c">//</span> start at the beginning of the row again</span></td>
        </tr>
        <tr>
          <td id="L4711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4711"></td>
          <td id="LC4711" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; x; ++i,cur+=output_bytes) {</td>
        </tr>
        <tr>
          <td id="L4712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4712"></td>
          <td id="LC4712" class="blob-code blob-code-inner js-file-line">               cur[filter_bytes+<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L4713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4713"></td>
          <td id="LC4713" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4714"></td>
          <td id="LC4714" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4715"></td>
          <td id="LC4715" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4716"></td>
          <td id="LC4716" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4717"></td>
          <td id="LC4717" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4718"></td>
          <td id="LC4718" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> we make a separate pass to expand bits to pixels; for performance,</span></td>
        </tr>
        <tr>
          <td id="L4719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4719"></td>
          <td id="LC4719" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> this could run two scanlines behind the above code, so it won&#39;t</span></td>
        </tr>
        <tr>
          <td id="L4720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4720"></td>
          <td id="LC4720" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> intefere with filtering but will still be in the cache.</span></td>
        </tr>
        <tr>
          <td id="L4721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4721"></td>
          <td id="LC4721" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (depth &lt; <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L4722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4722"></td>
          <td id="LC4722" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; y; ++j) {</td>
        </tr>
        <tr>
          <td id="L4723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4723"></td>
          <td id="LC4723" class="blob-code blob-code-inner js-file-line">         stbi_uc *cur = a-&gt;<span class="pl-smi">out</span> + stride*j;</td>
        </tr>
        <tr>
          <td id="L4724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4724"></td>
          <td id="LC4724" class="blob-code blob-code-inner js-file-line">         stbi_uc *in  = a-&gt;<span class="pl-smi">out</span> + stride*j + x*out_n - img_width_bytes;</td>
        </tr>
        <tr>
          <td id="L4725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4725"></td>
          <td id="LC4725" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> unpack 1/2/4-bit into a 8-bit buffer. allows us to keep the common 8-bit path optimal at minimal cost for 1/2/4-bit</span></td>
        </tr>
        <tr>
          <td id="L4726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4726"></td>
          <td id="LC4726" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> png guarante byte alignment, if width is not multiple of 8/4/2 we&#39;ll decode dummy trailing data that will be skipped in the later loop</span></td>
        </tr>
        <tr>
          <td id="L4727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4727"></td>
          <td id="LC4727" class="blob-code blob-code-inner js-file-line">         stbi_uc scale = (color == <span class="pl-c1">0</span>) ? stbi__depth_scale_table[depth] : <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> scale grayscale values to 0..255 range</span></td>
        </tr>
        <tr>
          <td id="L4728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4728"></td>
          <td id="LC4728" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4729"></td>
          <td id="LC4729" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> note that the final byte might overshoot and write more data than desired.</span></td>
        </tr>
        <tr>
          <td id="L4730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4730"></td>
          <td id="LC4730" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> we can allocate enough data that this never writes out of memory, but it</span></td>
        </tr>
        <tr>
          <td id="L4731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4731"></td>
          <td id="LC4731" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> could also overwrite the next scanline. can it overwrite non-empty data</span></td>
        </tr>
        <tr>
          <td id="L4732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4732"></td>
          <td id="LC4732" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> on the next scanline? yes, consider 1-pixel-wide scanlines with 1-bit-per-pixel.</span></td>
        </tr>
        <tr>
          <td id="L4733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4733"></td>
          <td id="LC4733" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> so we need to explicitly clamp the final ones</span></td>
        </tr>
        <tr>
          <td id="L4734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4734"></td>
          <td id="LC4734" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4735"></td>
          <td id="LC4735" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (depth == <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L4736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4736"></td>
          <td id="LC4736" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (k=x*img_n; k &gt;= <span class="pl-c1">2</span>; k-=<span class="pl-c1">2</span>, ++in) {</td>
        </tr>
        <tr>
          <td id="L4737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4737"></td>
          <td id="LC4737" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">4</span>)       );</td>
        </tr>
        <tr>
          <td id="L4738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4738"></td>
          <td id="LC4738" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in     ) &amp; <span class="pl-c1">0x0f</span>);</td>
        </tr>
        <tr>
          <td id="L4739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4739"></td>
          <td id="LC4739" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4740"></td>
          <td id="LC4740" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">0</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">4</span>)       );</td>
        </tr>
        <tr>
          <td id="L4741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4741"></td>
          <td id="LC4741" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (depth == <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L4742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4742"></td>
          <td id="LC4742" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (k=x*img_n; k &gt;= <span class="pl-c1">4</span>; k-=<span class="pl-c1">4</span>, ++in) {</td>
        </tr>
        <tr>
          <td id="L4743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4743"></td>
          <td id="LC4743" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">6</span>)       );</td>
        </tr>
        <tr>
          <td id="L4744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4744"></td>
          <td id="LC4744" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">0x03</span>);</td>
        </tr>
        <tr>
          <td id="L4745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4745"></td>
          <td id="LC4745" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">2</span>) &amp; <span class="pl-c1">0x03</span>);</td>
        </tr>
        <tr>
          <td id="L4746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4746"></td>
          <td id="LC4746" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in     ) &amp; <span class="pl-c1">0x03</span>);</td>
        </tr>
        <tr>
          <td id="L4747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4747"></td>
          <td id="LC4747" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4748"></td>
          <td id="LC4748" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">0</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">6</span>)       );</td>
        </tr>
        <tr>
          <td id="L4749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4749"></td>
          <td id="LC4749" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">1</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">0x03</span>);</td>
        </tr>
        <tr>
          <td id="L4750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4750"></td>
          <td id="LC4750" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">2</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">2</span>) &amp; <span class="pl-c1">0x03</span>);</td>
        </tr>
        <tr>
          <td id="L4751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4751"></td>
          <td id="LC4751" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (depth == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L4752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4752"></td>
          <td id="LC4752" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (k=x*img_n; k &gt;= <span class="pl-c1">8</span>; k-=<span class="pl-c1">8</span>, ++in) {</td>
        </tr>
        <tr>
          <td id="L4753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4753"></td>
          <td id="LC4753" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">7</span>)       );</td>
        </tr>
        <tr>
          <td id="L4754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4754"></td>
          <td id="LC4754" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">6</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4755"></td>
          <td id="LC4755" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">5</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4756"></td>
          <td id="LC4756" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4757"></td>
          <td id="LC4757" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">3</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4758"></td>
          <td id="LC4758" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">2</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4759"></td>
          <td id="LC4759" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">1</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4760"></td>
          <td id="LC4760" class="blob-code blob-code-inner js-file-line">               *cur++ = scale * ((*in     ) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4761"></td>
          <td id="LC4761" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4762"></td>
          <td id="LC4762" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">0</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">7</span>)       );</td>
        </tr>
        <tr>
          <td id="L4763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4763"></td>
          <td id="LC4763" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">1</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">6</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4764"></td>
          <td id="LC4764" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">2</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">5</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4765"></td>
          <td id="LC4765" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">3</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">4</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4766"></td>
          <td id="LC4766" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">4</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">3</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4767"></td>
          <td id="LC4767" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">5</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">2</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4768"></td>
          <td id="LC4768" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (k &gt; <span class="pl-c1">6</span>) *cur++ = scale * ((*in &gt;&gt; <span class="pl-c1">1</span>) &amp; <span class="pl-c1">0x01</span>);</td>
        </tr>
        <tr>
          <td id="L4769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4769"></td>
          <td id="LC4769" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4770"></td>
          <td id="LC4770" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (img_n != out_n) {</td>
        </tr>
        <tr>
          <td id="L4771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4771"></td>
          <td id="LC4771" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> q;</td>
        </tr>
        <tr>
          <td id="L4772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4772"></td>
          <td id="LC4772" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> insert alpha = 255</span></td>
        </tr>
        <tr>
          <td id="L4773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4773"></td>
          <td id="LC4773" class="blob-code blob-code-inner js-file-line">            cur = a-&gt;<span class="pl-smi">out</span> + stride*j;</td>
        </tr>
        <tr>
          <td id="L4774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4774"></td>
          <td id="LC4774" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (img_n == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L4775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4775"></td>
          <td id="LC4775" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (q=x-<span class="pl-c1">1</span>; q &gt;= <span class="pl-c1">0</span>; --q) {</td>
        </tr>
        <tr>
          <td id="L4776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4776"></td>
          <td id="LC4776" class="blob-code blob-code-inner js-file-line">                  cur[q*<span class="pl-c1">2</span>+<span class="pl-c1">1</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L4777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4777"></td>
          <td id="LC4777" class="blob-code blob-code-inner js-file-line">                  cur[q*<span class="pl-c1">2</span>+<span class="pl-c1">0</span>] = cur[q];</td>
        </tr>
        <tr>
          <td id="L4778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4778"></td>
          <td id="LC4778" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L4779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4779"></td>
          <td id="LC4779" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4780"></td>
          <td id="LC4780" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_ASSERT</span>(img_n == <span class="pl-c1">3</span>);</td>
        </tr>
        <tr>
          <td id="L4781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4781"></td>
          <td id="LC4781" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (q=x-<span class="pl-c1">1</span>; q &gt;= <span class="pl-c1">0</span>; --q) {</td>
        </tr>
        <tr>
          <td id="L4782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4782"></td>
          <td id="LC4782" class="blob-code blob-code-inner js-file-line">                  cur[q*<span class="pl-c1">4</span>+<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L4783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4783"></td>
          <td id="LC4783" class="blob-code blob-code-inner js-file-line">                  cur[q*<span class="pl-c1">4</span>+<span class="pl-c1">2</span>] = cur[q*<span class="pl-c1">3</span>+<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L4784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4784"></td>
          <td id="LC4784" class="blob-code blob-code-inner js-file-line">                  cur[q*<span class="pl-c1">4</span>+<span class="pl-c1">1</span>] = cur[q*<span class="pl-c1">3</span>+<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L4785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4785"></td>
          <td id="LC4785" class="blob-code blob-code-inner js-file-line">                  cur[q*<span class="pl-c1">4</span>+<span class="pl-c1">0</span>] = cur[q*<span class="pl-c1">3</span>+<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L4786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4786"></td>
          <td id="LC4786" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L4787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4787"></td>
          <td id="LC4787" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4788"></td>
          <td id="LC4788" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4789"></td>
          <td id="LC4789" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4790"></td>
          <td id="LC4790" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> <span class="pl-k">if</span> (depth == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L4791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4791"></td>
          <td id="LC4791" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> force the image data from big-endian to platform-native.</span></td>
        </tr>
        <tr>
          <td id="L4792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4792"></td>
          <td id="LC4792" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> this is done in a separate pass due to the decoding relying</span></td>
        </tr>
        <tr>
          <td id="L4793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4793"></td>
          <td id="LC4793" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> on the data being untouched, but could probably be done</span></td>
        </tr>
        <tr>
          <td id="L4794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4794"></td>
          <td id="LC4794" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> per-line during decode if care is taken.</span></td>
        </tr>
        <tr>
          <td id="L4795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4795"></td>
          <td id="LC4795" class="blob-code blob-code-inner js-file-line">      stbi_uc *cur = a-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L4796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4796"></td>
          <td id="LC4796" class="blob-code blob-code-inner js-file-line">      stbi__uint16 *cur16 = (stbi__uint16*)cur;</td>
        </tr>
        <tr>
          <td id="L4797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4797"></td>
          <td id="LC4797" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4798"></td>
          <td id="LC4798" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(i=<span class="pl-c1">0</span>; i &lt; x*y*out_n; ++i,cur16++,cur+=<span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L4799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4799"></td>
          <td id="LC4799" class="blob-code blob-code-inner js-file-line">         *cur16 = (cur[<span class="pl-c1">0</span>] &lt;&lt; <span class="pl-c1">8</span>) | cur[<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L4800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4800"></td>
          <td id="LC4800" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4801"></td>
          <td id="LC4801" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4802"></td>
          <td id="LC4802" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4803"></td>
          <td id="LC4803" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4804"></td>
          <td id="LC4804" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4805"></td>
          <td id="LC4805" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4806"></td>
          <td id="LC4806" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__create_png_image</span>(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, <span class="pl-k">int</span> out_n, <span class="pl-k">int</span> depth, <span class="pl-k">int</span> color, <span class="pl-k">int</span> interlaced)</td>
        </tr>
        <tr>
          <td id="L4807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4807"></td>
          <td id="LC4807" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4808"></td>
          <td id="LC4808" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> bytes = (depth == <span class="pl-c1">16</span> ? <span class="pl-c1">2</span> : <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L4809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4809"></td>
          <td id="LC4809" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> out_bytes = out_n * bytes;</td>
        </tr>
        <tr>
          <td id="L4810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4810"></td>
          <td id="LC4810" class="blob-code blob-code-inner js-file-line">   stbi_uc *final;</td>
        </tr>
        <tr>
          <td id="L4811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4811"></td>
          <td id="LC4811" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> p;</td>
        </tr>
        <tr>
          <td id="L4812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4812"></td>
          <td id="LC4812" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!interlaced)</td>
        </tr>
        <tr>
          <td id="L4813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4813"></td>
          <td id="LC4813" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__create_png_image_raw</span>(a, image_data, image_data_len, out_n, a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>, depth, color);</td>
        </tr>
        <tr>
          <td id="L4814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4814"></td>
          <td id="LC4814" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4815"></td>
          <td id="LC4815" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> de-interlacing</span></td>
        </tr>
        <tr>
          <td id="L4816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4816"></td>
          <td id="LC4816" class="blob-code blob-code-inner js-file-line">   final = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>, out_bytes, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L4817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4817"></td>
          <td id="LC4817" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!final) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4818"></td>
          <td id="LC4818" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (p=<span class="pl-c1">0</span>; p &lt; <span class="pl-c1">7</span>; ++p) {</td>
        </tr>
        <tr>
          <td id="L4819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4819"></td>
          <td id="LC4819" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> xorig[] = { <span class="pl-c1">0</span>,<span class="pl-c1">4</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span> };</td>
        </tr>
        <tr>
          <td id="L4820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4820"></td>
          <td id="LC4820" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> yorig[] = { <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">4</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span> };</td>
        </tr>
        <tr>
          <td id="L4821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4821"></td>
          <td id="LC4821" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> xspc[]  = { <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span> };</td>
        </tr>
        <tr>
          <td id="L4822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4822"></td>
          <td id="LC4822" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> yspc[]  = { <span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,<span class="pl-c1">4</span>,<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span> };</td>
        </tr>
        <tr>
          <td id="L4823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4823"></td>
          <td id="LC4823" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> i,j,x,y;</td>
        </tr>
        <tr>
          <td id="L4824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4824"></td>
          <td id="LC4824" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> pass1_x[4] = 0, pass1_x[5] = 1, pass1_x[12] = 1</span></td>
        </tr>
        <tr>
          <td id="L4825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4825"></td>
          <td id="LC4825" class="blob-code blob-code-inner js-file-line">      x = (a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span> - xorig[p] + xspc[p]-<span class="pl-c1">1</span>) / xspc[p];</td>
        </tr>
        <tr>
          <td id="L4826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4826"></td>
          <td id="LC4826" class="blob-code blob-code-inner js-file-line">      y = (a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span> - yorig[p] + yspc[p]-<span class="pl-c1">1</span>) / yspc[p];</td>
        </tr>
        <tr>
          <td id="L4827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4827"></td>
          <td id="LC4827" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (x &amp;&amp; y) {</td>
        </tr>
        <tr>
          <td id="L4828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4828"></td>
          <td id="LC4828" class="blob-code blob-code-inner js-file-line">         stbi__uint32 img_len = ((((a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span> * x * depth) + <span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>) + <span class="pl-c1">1</span>) * y;</td>
        </tr>
        <tr>
          <td id="L4829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4829"></td>
          <td id="LC4829" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!<span class="pl-c1">stbi__create_png_image_raw</span>(a, image_data, image_data_len, out_n, x, y, depth, color)) {</td>
        </tr>
        <tr>
          <td id="L4830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4830"></td>
          <td id="LC4830" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_FREE</span>(final);</td>
        </tr>
        <tr>
          <td id="L4831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4831"></td>
          <td id="LC4831" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4832"></td>
          <td id="LC4832" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4833"></td>
          <td id="LC4833" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; y; ++j) {</td>
        </tr>
        <tr>
          <td id="L4834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4834"></td>
          <td id="LC4834" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; x; ++i) {</td>
        </tr>
        <tr>
          <td id="L4835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4835"></td>
          <td id="LC4835" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> out_y = j*yspc[p]+yorig[p];</td>
        </tr>
        <tr>
          <td id="L4836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4836"></td>
          <td id="LC4836" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> out_x = i*xspc[p]+xorig[p];</td>
        </tr>
        <tr>
          <td id="L4837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4837"></td>
          <td id="LC4837" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">memcpy</span>(final + out_y*a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>*out_bytes + out_x*out_bytes,</td>
        </tr>
        <tr>
          <td id="L4838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4838"></td>
          <td id="LC4838" class="blob-code blob-code-inner js-file-line">                      a-&gt;<span class="pl-smi">out</span> + (j*x+i)*out_bytes, out_bytes);</td>
        </tr>
        <tr>
          <td id="L4839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4839"></td>
          <td id="LC4839" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L4840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4840"></td>
          <td id="LC4840" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L4841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4841"></td>
          <td id="LC4841" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_FREE</span>(a-&gt;<span class="pl-smi">out</span>);</td>
        </tr>
        <tr>
          <td id="L4842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4842"></td>
          <td id="LC4842" class="blob-code blob-code-inner js-file-line">         image_data += img_len;</td>
        </tr>
        <tr>
          <td id="L4843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4843"></td>
          <td id="LC4843" class="blob-code blob-code-inner js-file-line">         image_data_len -= img_len;</td>
        </tr>
        <tr>
          <td id="L4844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4844"></td>
          <td id="LC4844" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4845"></td>
          <td id="LC4845" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4846"></td>
          <td id="LC4846" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">out</span> = final;</td>
        </tr>
        <tr>
          <td id="L4847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4847"></td>
          <td id="LC4847" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4848"></td>
          <td id="LC4848" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4849"></td>
          <td id="LC4849" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4850"></td>
          <td id="LC4850" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4851"></td>
          <td id="LC4851" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__compute_transparency</span>(stbi__png *z, stbi_uc tc[<span class="pl-c1">3</span>], <span class="pl-k">int</span> out_n)</td>
        </tr>
        <tr>
          <td id="L4852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4852"></td>
          <td id="LC4852" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4853"></td>
          <td id="LC4853" class="blob-code blob-code-inner js-file-line">   stbi__context *s = z-&gt;<span class="pl-smi">s</span>;</td>
        </tr>
        <tr>
          <td id="L4854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4854"></td>
          <td id="LC4854" class="blob-code blob-code-inner js-file-line">   stbi__uint32 i, pixel_count = s-&gt;<span class="pl-smi">img_x</span> * s-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L4855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4855"></td>
          <td id="LC4855" class="blob-code blob-code-inner js-file-line">   stbi_uc *p = z-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L4856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4856"></td>
          <td id="LC4856" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4857"></td>
          <td id="LC4857" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> compute color-based transparency, assuming we&#39;ve</span></td>
        </tr>
        <tr>
          <td id="L4858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4858"></td>
          <td id="LC4858" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> already got 255 as the alpha value in the output</span></td>
        </tr>
        <tr>
          <td id="L4859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4859"></td>
          <td id="LC4859" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(out_n == <span class="pl-c1">2</span> || out_n == <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L4860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4860"></td>
          <td id="LC4860" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4861"></td>
          <td id="LC4861" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (out_n == <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L4862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4862"></td>
          <td id="LC4862" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4863"></td>
          <td id="LC4863" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">1</span>] = (p[<span class="pl-c1">0</span>] == tc[<span class="pl-c1">0</span>] ? <span class="pl-c1">0</span> : <span class="pl-c1">255</span>);</td>
        </tr>
        <tr>
          <td id="L4864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4864"></td>
          <td id="LC4864" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L4865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4865"></td>
          <td id="LC4865" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4866"></td>
          <td id="LC4866" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4867"></td>
          <td id="LC4867" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4868"></td>
          <td id="LC4868" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (p[<span class="pl-c1">0</span>] == tc[<span class="pl-c1">0</span>] &amp;&amp; p[<span class="pl-c1">1</span>] == tc[<span class="pl-c1">1</span>] &amp;&amp; p[<span class="pl-c1">2</span>] == tc[<span class="pl-c1">2</span>])</td>
        </tr>
        <tr>
          <td id="L4869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4869"></td>
          <td id="LC4869" class="blob-code blob-code-inner js-file-line">            p[<span class="pl-c1">3</span>] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4870"></td>
          <td id="LC4870" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L4871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4871"></td>
          <td id="LC4871" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4872"></td>
          <td id="LC4872" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4873"></td>
          <td id="LC4873" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4874"></td>
          <td id="LC4874" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4875"></td>
          <td id="LC4875" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4876"></td>
          <td id="LC4876" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__compute_transparency16</span>(stbi__png *z, stbi__uint16 tc[<span class="pl-c1">3</span>], <span class="pl-k">int</span> out_n)</td>
        </tr>
        <tr>
          <td id="L4877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4877"></td>
          <td id="LC4877" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4878"></td>
          <td id="LC4878" class="blob-code blob-code-inner js-file-line">   stbi__context *s = z-&gt;<span class="pl-smi">s</span>;</td>
        </tr>
        <tr>
          <td id="L4879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4879"></td>
          <td id="LC4879" class="blob-code blob-code-inner js-file-line">   stbi__uint32 i, pixel_count = s-&gt;<span class="pl-smi">img_x</span> * s-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L4880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4880"></td>
          <td id="LC4880" class="blob-code blob-code-inner js-file-line">   stbi__uint16 *p = (stbi__uint16*) z-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L4881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4881"></td>
          <td id="LC4881" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4882"></td>
          <td id="LC4882" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> compute color-based transparency, assuming we&#39;ve</span></td>
        </tr>
        <tr>
          <td id="L4883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4883"></td>
          <td id="LC4883" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> already got 65535 as the alpha value in the output</span></td>
        </tr>
        <tr>
          <td id="L4884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4884"></td>
          <td id="LC4884" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(out_n == <span class="pl-c1">2</span> || out_n == <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L4885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4885"></td>
          <td id="LC4885" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4886"></td>
          <td id="LC4886" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (out_n == <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L4887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4887"></td>
          <td id="LC4887" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4888"></td>
          <td id="LC4888" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">1</span>] = (p[<span class="pl-c1">0</span>] == tc[<span class="pl-c1">0</span>] ? <span class="pl-c1">0</span> : <span class="pl-c1">65535</span>);</td>
        </tr>
        <tr>
          <td id="L4889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4889"></td>
          <td id="LC4889" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L4890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4890"></td>
          <td id="LC4890" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4891"></td>
          <td id="LC4891" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4892"></td>
          <td id="LC4892" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4893"></td>
          <td id="LC4893" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (p[<span class="pl-c1">0</span>] == tc[<span class="pl-c1">0</span>] &amp;&amp; p[<span class="pl-c1">1</span>] == tc[<span class="pl-c1">1</span>] &amp;&amp; p[<span class="pl-c1">2</span>] == tc[<span class="pl-c1">2</span>])</td>
        </tr>
        <tr>
          <td id="L4894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4894"></td>
          <td id="LC4894" class="blob-code blob-code-inner js-file-line">            p[<span class="pl-c1">3</span>] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4895"></td>
          <td id="LC4895" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L4896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4896"></td>
          <td id="LC4896" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4897"></td>
          <td id="LC4897" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4898"></td>
          <td id="LC4898" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4899"></td>
          <td id="LC4899" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4900"></td>
          <td id="LC4900" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4901"></td>
          <td id="LC4901" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__expand_png_palette</span>(stbi__png *a, stbi_uc *palette, <span class="pl-k">int</span> len, <span class="pl-k">int</span> pal_img_n)</td>
        </tr>
        <tr>
          <td id="L4902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4902"></td>
          <td id="LC4902" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4903"></td>
          <td id="LC4903" class="blob-code blob-code-inner js-file-line">   stbi__uint32 i, pixel_count = a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span> * a-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L4904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4904"></td>
          <td id="LC4904" class="blob-code blob-code-inner js-file-line">   stbi_uc *p, *temp_out, *orig = a-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L4905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4905"></td>
          <td id="LC4905" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4906"></td>
          <td id="LC4906" class="blob-code blob-code-inner js-file-line">   p = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad2</span>(pixel_count, pal_img_n, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L4907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4907"></td>
          <td id="LC4907" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L4908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4908"></td>
          <td id="LC4908" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4909"></td>
          <td id="LC4909" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> between here and free(out) below, exitting would leak</span></td>
        </tr>
        <tr>
          <td id="L4910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4910"></td>
          <td id="LC4910" class="blob-code blob-code-inner js-file-line">   temp_out = p;</td>
        </tr>
        <tr>
          <td id="L4911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4911"></td>
          <td id="LC4911" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4912"></td>
          <td id="LC4912" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (pal_img_n == <span class="pl-c1">3</span>) {</td>
        </tr>
        <tr>
          <td id="L4913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4913"></td>
          <td id="LC4913" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4914"></td>
          <td id="LC4914" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> n = orig[i]*<span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L4915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4915"></td>
          <td id="LC4915" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">0</span>] = palette[n  ];</td>
        </tr>
        <tr>
          <td id="L4916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4916"></td>
          <td id="LC4916" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">1</span>] = palette[n+<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L4917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4917"></td>
          <td id="LC4917" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">2</span>] = palette[n+<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L4918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4918"></td>
          <td id="LC4918" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L4919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4919"></td>
          <td id="LC4919" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4920"></td>
          <td id="LC4920" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4921"></td>
          <td id="LC4921" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4922"></td>
          <td id="LC4922" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> n = orig[i]*<span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L4923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4923"></td>
          <td id="LC4923" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">0</span>] = palette[n  ];</td>
        </tr>
        <tr>
          <td id="L4924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4924"></td>
          <td id="LC4924" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">1</span>] = palette[n+<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L4925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4925"></td>
          <td id="LC4925" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">2</span>] = palette[n+<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L4926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4926"></td>
          <td id="LC4926" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">3</span>] = palette[n+<span class="pl-c1">3</span>];</td>
        </tr>
        <tr>
          <td id="L4927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4927"></td>
          <td id="LC4927" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L4928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4928"></td>
          <td id="LC4928" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4929"></td>
          <td id="LC4929" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L4930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4930"></td>
          <td id="LC4930" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(a-&gt;<span class="pl-smi">out</span>);</td>
        </tr>
        <tr>
          <td id="L4931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4931"></td>
          <td id="LC4931" class="blob-code blob-code-inner js-file-line">   a-&gt;<span class="pl-smi">out</span> = temp_out;</td>
        </tr>
        <tr>
          <td id="L4932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4932"></td>
          <td id="LC4932" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4933"></td>
          <td id="LC4933" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(len);</td>
        </tr>
        <tr>
          <td id="L4934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4934"></td>
          <td id="LC4934" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4935"></td>
          <td id="LC4935" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4936"></td>
          <td id="LC4936" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4937"></td>
          <td id="LC4937" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4938"></td>
          <td id="LC4938" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> stbi__unpremultiply_on_load_global = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4939"></td>
          <td id="LC4939" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> stbi__de_iphone_flag_global = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L4940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4940"></td>
          <td id="LC4940" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4941"></td>
          <td id="LC4941" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_set_unpremultiply_on_load</span>(<span class="pl-k">int</span> flag_true_if_should_unpremultiply)</td>
        </tr>
        <tr>
          <td id="L4942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4942"></td>
          <td id="LC4942" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4943"></td>
          <td id="LC4943" class="blob-code blob-code-inner js-file-line">   stbi__unpremultiply_on_load_global = flag_true_if_should_unpremultiply;</td>
        </tr>
        <tr>
          <td id="L4944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4944"></td>
          <td id="LC4944" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4945"></td>
          <td id="LC4945" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4946"></td>
          <td id="LC4946" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_convert_iphone_png_to_rgb</span>(<span class="pl-k">int</span> flag_true_if_should_convert)</td>
        </tr>
        <tr>
          <td id="L4947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4947"></td>
          <td id="LC4947" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4948"></td>
          <td id="LC4948" class="blob-code blob-code-inner js-file-line">   stbi__de_iphone_flag_global = flag_true_if_should_convert;</td>
        </tr>
        <tr>
          <td id="L4949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4949"></td>
          <td id="LC4949" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4950"></td>
          <td id="LC4950" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4951"></td>
          <td id="LC4951" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_THREAD_LOCAL</td>
        </tr>
        <tr>
          <td id="L4952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4952"></td>
          <td id="LC4952" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__unpremultiply_on_load</span>  stbi__unpremultiply_on_load_global</td>
        </tr>
        <tr>
          <td id="L4953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4953"></td>
          <td id="LC4953" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__de_iphone_flag</span>  stbi__de_iphone_flag_global</td>
        </tr>
        <tr>
          <td id="L4954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4954"></td>
          <td id="LC4954" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4955"></td>
          <td id="LC4955" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> STBI_THREAD_LOCAL <span class="pl-k">int</span> stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;</td>
        </tr>
        <tr>
          <td id="L4956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4956"></td>
          <td id="LC4956" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> STBI_THREAD_LOCAL <span class="pl-k">int</span> stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;</td>
        </tr>
        <tr>
          <td id="L4957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4957"></td>
          <td id="LC4957" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4958"></td>
          <td id="LC4958" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi__unpremultiply_on_load_thread</span>(<span class="pl-k">int</span> flag_true_if_should_unpremultiply)</td>
        </tr>
        <tr>
          <td id="L4959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4959"></td>
          <td id="LC4959" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4960"></td>
          <td id="LC4960" class="blob-code blob-code-inner js-file-line">   stbi__unpremultiply_on_load_local = flag_true_if_should_unpremultiply;</td>
        </tr>
        <tr>
          <td id="L4961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4961"></td>
          <td id="LC4961" class="blob-code blob-code-inner js-file-line">   stbi__unpremultiply_on_load_set = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4962"></td>
          <td id="LC4962" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4963"></td>
          <td id="LC4963" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4964"></td>
          <td id="LC4964" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">void</span> <span class="pl-smi">stbi_convert_iphone_png_to_rgb_thread</span>(<span class="pl-k">int</span> flag_true_if_should_convert)</td>
        </tr>
        <tr>
          <td id="L4965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4965"></td>
          <td id="LC4965" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4966"></td>
          <td id="LC4966" class="blob-code blob-code-inner js-file-line">   stbi__de_iphone_flag_local = flag_true_if_should_convert;</td>
        </tr>
        <tr>
          <td id="L4967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4967"></td>
          <td id="LC4967" class="blob-code blob-code-inner js-file-line">   stbi__de_iphone_flag_set = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L4968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4968"></td>
          <td id="LC4968" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4969"></td>
          <td id="LC4969" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4970"></td>
          <td id="LC4970" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__unpremultiply_on_load</span>  (stbi__unpremultiply_on_load_set           \</td>
        </tr>
        <tr>
          <td id="L4971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4971"></td>
          <td id="LC4971" class="blob-code blob-code-inner js-file-line">                                       ? stbi__unpremultiply_on_load_local      \</td>
        </tr>
        <tr>
          <td id="L4972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4972"></td>
          <td id="LC4972" class="blob-code blob-code-inner js-file-line">                                       : stbi__unpremultiply_on_load_global)</td>
        </tr>
        <tr>
          <td id="L4973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4973"></td>
          <td id="LC4973" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">stbi__de_iphone_flag</span>  (stbi__de_iphone_flag_set                         \</td>
        </tr>
        <tr>
          <td id="L4974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4974"></td>
          <td id="LC4974" class="blob-code blob-code-inner js-file-line">                                ? stbi__de_iphone_flag_local                    \</td>
        </tr>
        <tr>
          <td id="L4975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4975"></td>
          <td id="LC4975" class="blob-code blob-code-inner js-file-line">                                : stbi__de_iphone_flag_global)</td>
        </tr>
        <tr>
          <td id="L4976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4976"></td>
          <td id="LC4976" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_THREAD_LOCAL</span></td>
        </tr>
        <tr>
          <td id="L4977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4977"></td>
          <td id="LC4977" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4978"></td>
          <td id="LC4978" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__de_iphone</span>(stbi__png *z)</td>
        </tr>
        <tr>
          <td id="L4979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4979"></td>
          <td id="LC4979" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L4980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4980"></td>
          <td id="LC4980" class="blob-code blob-code-inner js-file-line">   stbi__context *s = z-&gt;<span class="pl-smi">s</span>;</td>
        </tr>
        <tr>
          <td id="L4981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4981"></td>
          <td id="LC4981" class="blob-code blob-code-inner js-file-line">   stbi__uint32 i, pixel_count = s-&gt;<span class="pl-smi">img_x</span> * s-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L4982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4982"></td>
          <td id="LC4982" class="blob-code blob-code-inner js-file-line">   stbi_uc *p = z-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L4983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4983"></td>
          <td id="LC4983" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4984"></td>
          <td id="LC4984" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_out_n</span> == <span class="pl-c1">3</span>) {  <span class="pl-c"><span class="pl-c">//</span> convert bgr to rgb</span></td>
        </tr>
        <tr>
          <td id="L4985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4985"></td>
          <td id="LC4985" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4986"></td>
          <td id="LC4986" class="blob-code blob-code-inner js-file-line">         stbi_uc t = p[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L4987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4987"></td>
          <td id="LC4987" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">0</span>] = p[<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L4988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4988"></td>
          <td id="LC4988" class="blob-code blob-code-inner js-file-line">         p[<span class="pl-c1">2</span>] = t;</td>
        </tr>
        <tr>
          <td id="L4989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4989"></td>
          <td id="LC4989" class="blob-code blob-code-inner js-file-line">         p += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L4990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4990"></td>
          <td id="LC4990" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L4991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4991"></td>
          <td id="LC4991" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L4992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4992"></td>
          <td id="LC4992" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_ASSERT</span>(s-&gt;<span class="pl-smi">img_out_n</span> == <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L4993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4993"></td>
          <td id="LC4993" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (stbi__unpremultiply_on_load) {</td>
        </tr>
        <tr>
          <td id="L4994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4994"></td>
          <td id="LC4994" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> convert bgr to rgb and unpremultiply</span></td>
        </tr>
        <tr>
          <td id="L4995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4995"></td>
          <td id="LC4995" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L4996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4996"></td>
          <td id="LC4996" class="blob-code blob-code-inner js-file-line">            stbi_uc a = p[<span class="pl-c1">3</span>];</td>
        </tr>
        <tr>
          <td id="L4997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4997"></td>
          <td id="LC4997" class="blob-code blob-code-inner js-file-line">            stbi_uc t = p[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L4998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4998"></td>
          <td id="LC4998" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (a) {</td>
        </tr>
        <tr>
          <td id="L4999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="4999"></td>
          <td id="LC4999" class="blob-code blob-code-inner js-file-line">               stbi_uc half = a / <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L5000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5000"></td>
          <td id="LC5000" class="blob-code blob-code-inner js-file-line">               p[<span class="pl-c1">0</span>] = (p[<span class="pl-c1">2</span>] * <span class="pl-c1">255</span> + half) / a;</td>
        </tr>
        <tr>
          <td id="L5001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5001"></td>
          <td id="LC5001" class="blob-code blob-code-inner js-file-line">               p[<span class="pl-c1">1</span>] = (p[<span class="pl-c1">1</span>] * <span class="pl-c1">255</span> + half) / a;</td>
        </tr>
        <tr>
          <td id="L5002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5002"></td>
          <td id="LC5002" class="blob-code blob-code-inner js-file-line">               p[<span class="pl-c1">2</span>] = ( t   * <span class="pl-c1">255</span> + half) / a;</td>
        </tr>
        <tr>
          <td id="L5003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5003"></td>
          <td id="LC5003" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5004"></td>
          <td id="LC5004" class="blob-code blob-code-inner js-file-line">               p[<span class="pl-c1">0</span>] = p[<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L5005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5005"></td>
          <td id="LC5005" class="blob-code blob-code-inner js-file-line">               p[<span class="pl-c1">2</span>] = t;</td>
        </tr>
        <tr>
          <td id="L5006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5006"></td>
          <td id="LC5006" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5007"></td>
          <td id="LC5007" class="blob-code blob-code-inner js-file-line">            p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L5008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5008"></td>
          <td id="LC5008" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5009"></td>
          <td id="LC5009" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5010"></td>
          <td id="LC5010" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> convert bgr to rgb</span></td>
        </tr>
        <tr>
          <td id="L5011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5011"></td>
          <td id="LC5011" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pixel_count; ++i) {</td>
        </tr>
        <tr>
          <td id="L5012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5012"></td>
          <td id="LC5012" class="blob-code blob-code-inner js-file-line">            stbi_uc t = p[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L5013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5013"></td>
          <td id="LC5013" class="blob-code blob-code-inner js-file-line">            p[<span class="pl-c1">0</span>] = p[<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L5014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5014"></td>
          <td id="LC5014" class="blob-code blob-code-inner js-file-line">            p[<span class="pl-c1">2</span>] = t;</td>
        </tr>
        <tr>
          <td id="L5015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5015"></td>
          <td id="LC5015" class="blob-code blob-code-inner js-file-line">            p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L5016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5016"></td>
          <td id="LC5016" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5017"></td>
          <td id="LC5017" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5018"></td>
          <td id="LC5018" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5019"></td>
          <td id="LC5019" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5020"></td>
          <td id="LC5020" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5021"></td>
          <td id="LC5021" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__PNG_TYPE</span>(<span class="pl-v">a,b,c,d</span>)  (((<span class="pl-k">unsigned</span>) (a) &lt;&lt; <span class="pl-c1">24</span>) + ((<span class="pl-k">unsigned</span>) (b) &lt;&lt; <span class="pl-c1">16</span>) + ((<span class="pl-k">unsigned</span>) (c) &lt;&lt; <span class="pl-c1">8</span>) + (<span class="pl-k">unsigned</span>) (d))</td>
        </tr>
        <tr>
          <td id="L5022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5022"></td>
          <td id="LC5022" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5023"></td>
          <td id="LC5023" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__parse_png_file</span>(stbi__png *z, <span class="pl-k">int</span> scan, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L5024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5024"></td>
          <td id="LC5024" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5025"></td>
          <td id="LC5025" class="blob-code blob-code-inner js-file-line">   stbi_uc palette[<span class="pl-c1">1024</span>], pal_img_n=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5026"></td>
          <td id="LC5026" class="blob-code blob-code-inner js-file-line">   stbi_uc has_trans=<span class="pl-c1">0</span>, tc[<span class="pl-c1">3</span>]={<span class="pl-c1">0</span>};</td>
        </tr>
        <tr>
          <td id="L5027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5027"></td>
          <td id="LC5027" class="blob-code blob-code-inner js-file-line">   stbi__uint16 tc16[<span class="pl-c1">3</span>];</td>
        </tr>
        <tr>
          <td id="L5028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5028"></td>
          <td id="LC5028" class="blob-code blob-code-inner js-file-line">   stbi__uint32 ioff=<span class="pl-c1">0</span>, idata_limit=<span class="pl-c1">0</span>, i, pal_len=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5029"></td>
          <td id="LC5029" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> first=<span class="pl-c1">1</span>,k,interlace=<span class="pl-c1">0</span>, color=<span class="pl-c1">0</span>, is_iphone=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5030"></td>
          <td id="LC5030" class="blob-code blob-code-inner js-file-line">   stbi__context *s = z-&gt;<span class="pl-smi">s</span>;</td>
        </tr>
        <tr>
          <td id="L5031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5031"></td>
          <td id="LC5031" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5032"></td>
          <td id="LC5032" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">expanded</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5033"></td>
          <td id="LC5033" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">idata</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5034"></td>
          <td id="LC5034" class="blob-code blob-code-inner js-file-line">   z-&gt;<span class="pl-smi">out</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5035"></td>
          <td id="LC5035" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5036"></td>
          <td id="LC5036" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__check_png_header</span>(s)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5037"></td>
          <td id="LC5037" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5038"></td>
          <td id="LC5038" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (scan == STBI__SCAN_type) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5039"></td>
          <td id="LC5039" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5040"></td>
          <td id="LC5040" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (;;) {</td>
        </tr>
        <tr>
          <td id="L5041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5041"></td>
          <td id="LC5041" class="blob-code blob-code-inner js-file-line">      stbi__pngchunk c = <span class="pl-c1">stbi__get_chunk_header</span>(s);</td>
        </tr>
        <tr>
          <td id="L5042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5042"></td>
          <td id="LC5042" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (c.<span class="pl-smi">type</span>) {</td>
        </tr>
        <tr>
          <td id="L5043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5043"></td>
          <td id="LC5043" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-smi">STBI__PNG_TYPE</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>C<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>g<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span>):</td>
        </tr>
        <tr>
          <td id="L5044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5044"></td>
          <td id="LC5044" class="blob-code blob-code-inner js-file-line">            is_iphone = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5045"></td>
          <td id="LC5045" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__skip</span>(s, c.<span class="pl-smi">length</span>);</td>
        </tr>
        <tr>
          <td id="L5046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5046"></td>
          <td id="LC5046" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5047"></td>
          <td id="LC5047" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-smi">STBI__PNG_TYPE</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>H<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>D<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>R<span class="pl-pds">&#39;</span></span>): {</td>
        </tr>
        <tr>
          <td id="L5048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5048"></td>
          <td id="LC5048" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> comp,filter;</td>
        </tr>
        <tr>
          <td id="L5049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5049"></td>
          <td id="LC5049" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!first) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>multiple IHDR<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5050"></td>
          <td id="LC5050" class="blob-code blob-code-inner js-file-line">            first = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5051"></td>
          <td id="LC5051" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (c.<span class="pl-smi">length</span> != <span class="pl-c1">13</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad IHDR len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5052"></td>
          <td id="LC5052" class="blob-code blob-code-inner js-file-line">            s-&gt;<span class="pl-smi">img_x</span> = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L5053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5053"></td>
          <td id="LC5053" class="blob-code blob-code-inner js-file-line">            s-&gt;<span class="pl-smi">img_y</span> = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L5054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5054"></td>
          <td id="LC5054" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_y</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5055"></td>
          <td id="LC5055" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_x</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5056"></td>
          <td id="LC5056" class="blob-code blob-code-inner js-file-line">            z-&gt;<span class="pl-smi">depth</span> = <span class="pl-c1">stbi__get8</span>(s);  <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">depth</span> != <span class="pl-c1">1</span> &amp;&amp; z-&gt;<span class="pl-smi">depth</span> != <span class="pl-c1">2</span> &amp;&amp; z-&gt;<span class="pl-smi">depth</span> != <span class="pl-c1">4</span> &amp;&amp; z-&gt;<span class="pl-smi">depth</span> != <span class="pl-c1">8</span> &amp;&amp; z-&gt;<span class="pl-smi">depth</span> != <span class="pl-c1">16</span>)  <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>1/2/4/8/16-bit only<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>PNG not supported: 1/2/4/8/16-bit only<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5057"></td>
          <td id="LC5057" class="blob-code blob-code-inner js-file-line">            color = <span class="pl-c1">stbi__get8</span>(s);  <span class="pl-k">if</span> (color &gt; <span class="pl-c1">6</span>)         <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad ctype<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5058"></td>
          <td id="LC5058" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (color == <span class="pl-c1">3</span> &amp;&amp; z-&gt;<span class="pl-smi">depth</span> == <span class="pl-c1">16</span>)                  <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad ctype<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5059"></td>
          <td id="LC5059" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (color == <span class="pl-c1">3</span>) pal_img_n = <span class="pl-c1">3</span>; <span class="pl-k">else</span> <span class="pl-k">if</span> (color &amp; <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad ctype<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5060"></td>
          <td id="LC5060" class="blob-code blob-code-inner js-file-line">            comp  = <span class="pl-c1">stbi__get8</span>(s);  <span class="pl-k">if</span> (comp) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad comp method<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5061"></td>
          <td id="LC5061" class="blob-code blob-code-inner js-file-line">            filter= <span class="pl-c1">stbi__get8</span>(s);  <span class="pl-k">if</span> (filter) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad filter method<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5062"></td>
          <td id="LC5062" class="blob-code blob-code-inner js-file-line">            interlace = <span class="pl-c1">stbi__get8</span>(s); <span class="pl-k">if</span> (interlace&gt;<span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad interlace method<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5063"></td>
          <td id="LC5063" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!s-&gt;<span class="pl-smi">img_x</span> || !s-&gt;<span class="pl-smi">img_y</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>0-pixel image<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5064"></td>
          <td id="LC5064" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!pal_img_n) {</td>
        </tr>
        <tr>
          <td id="L5065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5065"></td>
          <td id="LC5065" class="blob-code blob-code-inner js-file-line">               s-&gt;<span class="pl-smi">img_n</span> = (color &amp; <span class="pl-c1">2</span> ? <span class="pl-c1">3</span> : <span class="pl-c1">1</span>) + (color &amp; <span class="pl-c1">4</span> ? <span class="pl-c1">1</span> : <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L5066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5066"></td>
          <td id="LC5066" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> ((<span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">30</span>) / s-&gt;<span class="pl-smi">img_x</span> / s-&gt;<span class="pl-smi">img_n</span> &lt; s-&gt;<span class="pl-smi">img_y</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Image too large to decode<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5067"></td>
          <td id="LC5067" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (scan == STBI__SCAN_header) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5068"></td>
          <td id="LC5068" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5069"></td>
          <td id="LC5069" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> if paletted, then pal_n is our final components, and</span></td>
        </tr>
        <tr>
          <td id="L5070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5070"></td>
          <td id="LC5070" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> img_n is # components to decompress/filter.</span></td>
        </tr>
        <tr>
          <td id="L5071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5071"></td>
          <td id="LC5071" class="blob-code blob-code-inner js-file-line">               s-&gt;<span class="pl-smi">img_n</span> = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5072"></td>
          <td id="LC5072" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> ((<span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">30</span>) / s-&gt;<span class="pl-smi">img_x</span> / <span class="pl-c1">4</span> &lt; s-&gt;<span class="pl-smi">img_y</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5073"></td>
          <td id="LC5073" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> if SCAN_header, have to scan to see if we have a tRNS</span></td>
        </tr>
        <tr>
          <td id="L5074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5074"></td>
          <td id="LC5074" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5075"></td>
          <td id="LC5075" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5076"></td>
          <td id="LC5076" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5077"></td>
          <td id="LC5077" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5078"></td>
          <td id="LC5078" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-smi">STBI__PNG_TYPE</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>P<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>L<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>T<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>):  {</td>
        </tr>
        <tr>
          <td id="L5079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5079"></td>
          <td id="LC5079" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>first not IHDR<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5080"></td>
          <td id="LC5080" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (c.<span class="pl-smi">length</span> &gt; <span class="pl-c1">256</span>*<span class="pl-c1">3</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid PLTE<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5081"></td>
          <td id="LC5081" class="blob-code blob-code-inner js-file-line">            pal_len = c.<span class="pl-smi">length</span> / <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5082"></td>
          <td id="LC5082" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pal_len * <span class="pl-c1">3</span> != c.<span class="pl-smi">length</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid PLTE<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5083"></td>
          <td id="LC5083" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; pal_len; ++i) {</td>
        </tr>
        <tr>
          <td id="L5084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5084"></td>
          <td id="LC5084" class="blob-code blob-code-inner js-file-line">               palette[i*<span class="pl-c1">4</span>+<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5085"></td>
          <td id="LC5085" class="blob-code blob-code-inner js-file-line">               palette[i*<span class="pl-c1">4</span>+<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5086"></td>
          <td id="LC5086" class="blob-code blob-code-inner js-file-line">               palette[i*<span class="pl-c1">4</span>+<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5087"></td>
          <td id="LC5087" class="blob-code blob-code-inner js-file-line">               palette[i*<span class="pl-c1">4</span>+<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5088"></td>
          <td id="LC5088" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5089"></td>
          <td id="LC5089" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5090"></td>
          <td id="LC5090" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5091"></td>
          <td id="LC5091" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5092"></td>
          <td id="LC5092" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-smi">STBI__PNG_TYPE</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>t<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>R<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>N<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>S<span class="pl-pds">&#39;</span></span>): {</td>
        </tr>
        <tr>
          <td id="L5093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5093"></td>
          <td id="LC5093" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>first not IHDR<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5094"></td>
          <td id="LC5094" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">idata</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tRNS after IDAT<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5095"></td>
          <td id="LC5095" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pal_img_n) {</td>
        </tr>
        <tr>
          <td id="L5096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5096"></td>
          <td id="LC5096" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (scan == STBI__SCAN_header) { s-&gt;<span class="pl-smi">img_n</span> = <span class="pl-c1">4</span>; <span class="pl-k">return</span> <span class="pl-c1">1</span>; }</td>
        </tr>
        <tr>
          <td id="L5097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5097"></td>
          <td id="LC5097" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (pal_len == <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tRNS before PLTE<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5098"></td>
          <td id="LC5098" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (c.<span class="pl-smi">length</span> &gt; pal_len) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad tRNS len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5099"></td>
          <td id="LC5099" class="blob-code blob-code-inner js-file-line">               pal_img_n = <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L5100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5100"></td>
          <td id="LC5100" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; c.<span class="pl-smi">length</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L5101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5101"></td>
          <td id="LC5101" class="blob-code blob-code-inner js-file-line">                  palette[i*<span class="pl-c1">4</span>+<span class="pl-c1">3</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5102"></td>
          <td id="LC5102" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5103"></td>
          <td id="LC5103" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!(s-&gt;<span class="pl-smi">img_n</span> &amp; <span class="pl-c1">1</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tRNS with alpha<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5104"></td>
          <td id="LC5104" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (c.<span class="pl-smi">length</span> != (stbi__uint32) s-&gt;<span class="pl-smi">img_n</span>*<span class="pl-c1">2</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad tRNS len<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5105"></td>
          <td id="LC5105" class="blob-code blob-code-inner js-file-line">               has_trans = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5106"></td>
          <td id="LC5106" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">depth</span> == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L5107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5107"></td>
          <td id="LC5107" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (k = <span class="pl-c1">0</span>; k &lt; s-&gt;<span class="pl-smi">img_n</span>; ++k) tc16[k] = (stbi__uint16)<span class="pl-c1">stbi__get16be</span>(s); <span class="pl-c"><span class="pl-c">//</span> copy the values as-is</span></td>
        </tr>
        <tr>
          <td id="L5108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5108"></td>
          <td id="LC5108" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5109"></td>
          <td id="LC5109" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (k = <span class="pl-c1">0</span>; k &lt; s-&gt;<span class="pl-smi">img_n</span>; ++k) tc[k] = (stbi_uc)(<span class="pl-c1">stbi__get16be</span>(s) &amp; <span class="pl-c1">255</span>) * stbi__depth_scale_table[z-&gt;<span class="pl-smi">depth</span>]; <span class="pl-c"><span class="pl-c">//</span> non 8-bit images will be larger</span></td>
        </tr>
        <tr>
          <td id="L5110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5110"></td>
          <td id="LC5110" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5111"></td>
          <td id="LC5111" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5112"></td>
          <td id="LC5112" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5113"></td>
          <td id="LC5113" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5114"></td>
          <td id="LC5114" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5115"></td>
          <td id="LC5115" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-smi">STBI__PNG_TYPE</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>D<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>T<span class="pl-pds">&#39;</span></span>): {</td>
        </tr>
        <tr>
          <td id="L5116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5116"></td>
          <td id="LC5116" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>first not IHDR<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5117"></td>
          <td id="LC5117" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pal_img_n &amp;&amp; !pal_len) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no PLTE<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5118"></td>
          <td id="LC5118" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (scan == STBI__SCAN_header) { s-&gt;<span class="pl-smi">img_n</span> = pal_img_n; <span class="pl-k">return</span> <span class="pl-c1">1</span>; }</td>
        </tr>
        <tr>
          <td id="L5119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5119"></td>
          <td id="LC5119" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((<span class="pl-k">int</span>)(ioff + c.<span class="pl-smi">length</span>) &lt; (<span class="pl-k">int</span>)ioff) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5120"></td>
          <td id="LC5120" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (ioff + c.<span class="pl-smi">length</span> &gt; idata_limit) {</td>
        </tr>
        <tr>
          <td id="L5121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5121"></td>
          <td id="LC5121" class="blob-code blob-code-inner js-file-line">               stbi__uint32 idata_limit_old = idata_limit;</td>
        </tr>
        <tr>
          <td id="L5122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5122"></td>
          <td id="LC5122" class="blob-code blob-code-inner js-file-line">               stbi_uc *p;</td>
        </tr>
        <tr>
          <td id="L5123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5123"></td>
          <td id="LC5123" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (idata_limit == <span class="pl-c1">0</span>) idata_limit = c.<span class="pl-smi">length</span> &gt; <span class="pl-c1">4096</span> ? c.<span class="pl-smi">length</span> : <span class="pl-c1">4096</span>;</td>
        </tr>
        <tr>
          <td id="L5124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5124"></td>
          <td id="LC5124" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">while</span> (ioff + c.<span class="pl-smi">length</span> &gt; idata_limit)</td>
        </tr>
        <tr>
          <td id="L5125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5125"></td>
          <td id="LC5125" class="blob-code blob-code-inner js-file-line">                  idata_limit *= <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L5126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5126"></td>
          <td id="LC5126" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_NOTUSED</span>(idata_limit_old);</td>
        </tr>
        <tr>
          <td id="L5127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5127"></td>
          <td id="LC5127" class="blob-code blob-code-inner js-file-line">               p = (stbi_uc *) <span class="pl-c1">STBI_REALLOC_SIZED</span>(z-&gt;<span class="pl-smi">idata</span>, idata_limit_old, idata_limit); <span class="pl-k">if</span> (p == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5128"></td>
          <td id="LC5128" class="blob-code blob-code-inner js-file-line">               z-&gt;<span class="pl-smi">idata</span> = p;</td>
        </tr>
        <tr>
          <td id="L5129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5129"></td>
          <td id="LC5129" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5130"></td>
          <td id="LC5130" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__getn</span>(s, z-&gt;<span class="pl-smi">idata</span>+ioff,c.<span class="pl-smi">length</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofdata<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5131"></td>
          <td id="LC5131" class="blob-code blob-code-inner js-file-line">            ioff += c.<span class="pl-smi">length</span>;</td>
        </tr>
        <tr>
          <td id="L5132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5132"></td>
          <td id="LC5132" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5133"></td>
          <td id="LC5133" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5134"></td>
          <td id="LC5134" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5135"></td>
          <td id="LC5135" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-smi">STBI__PNG_TYPE</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>N<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>D<span class="pl-pds">&#39;</span></span>): {</td>
        </tr>
        <tr>
          <td id="L5136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5136"></td>
          <td id="LC5136" class="blob-code blob-code-inner js-file-line">            stbi__uint32 raw_len, bpl;</td>
        </tr>
        <tr>
          <td id="L5137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5137"></td>
          <td id="LC5137" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>first not IHDR<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5138"></td>
          <td id="LC5138" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (scan != STBI__SCAN_load) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5139"></td>
          <td id="LC5139" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">idata</span> == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no IDAT<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5140"></td>
          <td id="LC5140" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> initial guess for decoded data size to avoid unnecessary reallocs</span></td>
        </tr>
        <tr>
          <td id="L5141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5141"></td>
          <td id="LC5141" class="blob-code blob-code-inner js-file-line">            bpl = (s-&gt;<span class="pl-smi">img_x</span> * z-&gt;<span class="pl-smi">depth</span> + <span class="pl-c1">7</span>) / <span class="pl-c1">8</span>; <span class="pl-c"><span class="pl-c">//</span> bytes per line, per component</span></td>
        </tr>
        <tr>
          <td id="L5142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5142"></td>
          <td id="LC5142" class="blob-code blob-code-inner js-file-line">            raw_len = bpl * s-&gt;<span class="pl-smi">img_y</span> * s-&gt;<span class="pl-smi">img_n</span> <span class="pl-c"><span class="pl-c">/*</span> pixels <span class="pl-c">*/</span></span> + s-&gt;<span class="pl-smi">img_y</span> <span class="pl-c"><span class="pl-c">/*</span> filter mode per row <span class="pl-c">*/</span></span>;</td>
        </tr>
        <tr>
          <td id="L5143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5143"></td>
          <td id="LC5143" class="blob-code blob-code-inner js-file-line">            z-&gt;<span class="pl-smi">expanded</span> = (stbi_uc *) <span class="pl-c1">stbi_zlib_decode_malloc_guesssize_headerflag</span>((<span class="pl-k">char</span> *) z-&gt;<span class="pl-smi">idata</span>, ioff, raw_len, (<span class="pl-k">int</span> *) &amp;raw_len, !is_iphone);</td>
        </tr>
        <tr>
          <td id="L5144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5144"></td>
          <td id="LC5144" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">expanded</span> == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> zlib should set error</span></td>
        </tr>
        <tr>
          <td id="L5145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5145"></td>
          <td id="LC5145" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_FREE</span>(z-&gt;<span class="pl-smi">idata</span>); z-&gt;<span class="pl-smi">idata</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5146"></td>
          <td id="LC5146" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((req_comp == s-&gt;<span class="pl-smi">img_n</span>+<span class="pl-c1">1</span> &amp;&amp; req_comp != <span class="pl-c1">3</span> &amp;&amp; !pal_img_n) || has_trans)</td>
        </tr>
        <tr>
          <td id="L5147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5147"></td>
          <td id="LC5147" class="blob-code blob-code-inner js-file-line">               s-&gt;<span class="pl-smi">img_out_n</span> = s-&gt;<span class="pl-smi">img_n</span>+<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5148"></td>
          <td id="LC5148" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5149"></td>
          <td id="LC5149" class="blob-code blob-code-inner js-file-line">               s-&gt;<span class="pl-smi">img_out_n</span> = s-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L5150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5150"></td>
          <td id="LC5150" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__create_png_image</span>(z, z-&gt;<span class="pl-smi">expanded</span>, raw_len, s-&gt;<span class="pl-smi">img_out_n</span>, z-&gt;<span class="pl-smi">depth</span>, color, interlace)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5151"></td>
          <td id="LC5151" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (has_trans) {</td>
        </tr>
        <tr>
          <td id="L5152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5152"></td>
          <td id="LC5152" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (z-&gt;<span class="pl-smi">depth</span> == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L5153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5153"></td>
          <td id="LC5153" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">stbi__compute_transparency16</span>(z, tc16, s-&gt;<span class="pl-smi">img_out_n</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5154"></td>
          <td id="LC5154" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5155"></td>
          <td id="LC5155" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">stbi__compute_transparency</span>(z, tc, s-&gt;<span class="pl-smi">img_out_n</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5156"></td>
          <td id="LC5156" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5157"></td>
          <td id="LC5157" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5158"></td>
          <td id="LC5158" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (is_iphone &amp;&amp; stbi__de_iphone_flag &amp;&amp; s-&gt;<span class="pl-smi">img_out_n</span> &gt; <span class="pl-c1">2</span>)</td>
        </tr>
        <tr>
          <td id="L5159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5159"></td>
          <td id="LC5159" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__de_iphone</span>(z);</td>
        </tr>
        <tr>
          <td id="L5160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5160"></td>
          <td id="LC5160" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pal_img_n) {</td>
        </tr>
        <tr>
          <td id="L5161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5161"></td>
          <td id="LC5161" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> pal_img_n == 3 or 4</span></td>
        </tr>
        <tr>
          <td id="L5162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5162"></td>
          <td id="LC5162" class="blob-code blob-code-inner js-file-line">               s-&gt;<span class="pl-smi">img_n</span> = pal_img_n; <span class="pl-c"><span class="pl-c">//</span> record the actual colors we had</span></td>
        </tr>
        <tr>
          <td id="L5163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5163"></td>
          <td id="LC5163" class="blob-code blob-code-inner js-file-line">               s-&gt;<span class="pl-smi">img_out_n</span> = pal_img_n;</td>
        </tr>
        <tr>
          <td id="L5164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5164"></td>
          <td id="LC5164" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (req_comp &gt;= <span class="pl-c1">3</span>) s-&gt;<span class="pl-smi">img_out_n</span> = req_comp;</td>
        </tr>
        <tr>
          <td id="L5165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5165"></td>
          <td id="LC5165" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!<span class="pl-c1">stbi__expand_png_palette</span>(z, palette, pal_len, s-&gt;<span class="pl-smi">img_out_n</span>))</td>
        </tr>
        <tr>
          <td id="L5166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5166"></td>
          <td id="LC5166" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5167"></td>
          <td id="LC5167" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (has_trans) {</td>
        </tr>
        <tr>
          <td id="L5168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5168"></td>
          <td id="LC5168" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> non-paletted image with tRNS -&gt; source image has (constant) alpha</span></td>
        </tr>
        <tr>
          <td id="L5169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5169"></td>
          <td id="LC5169" class="blob-code blob-code-inner js-file-line">               ++s-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L5170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5170"></td>
          <td id="LC5170" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5171"></td>
          <td id="LC5171" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_FREE</span>(z-&gt;<span class="pl-smi">expanded</span>); z-&gt;<span class="pl-smi">expanded</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5172"></td>
          <td id="LC5172" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> end of PNG chunk, read and skip CRC</span></td>
        </tr>
        <tr>
          <td id="L5173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5173"></td>
          <td id="LC5173" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L5174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5174"></td>
          <td id="LC5174" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5175"></td>
          <td id="LC5175" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5176"></td>
          <td id="LC5176" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5177"></td>
          <td id="LC5177" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">default</span>:</td>
        </tr>
        <tr>
          <td id="L5178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5178"></td>
          <td id="LC5178" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> if critical, fail</span></td>
        </tr>
        <tr>
          <td id="L5179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5179"></td>
          <td id="LC5179" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>first not IHDR<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PNG<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5180"></td>
          <td id="LC5180" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((c.<span class="pl-smi">type</span> &amp; (<span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">29</span>)) == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L5181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5181"></td>
          <td id="LC5181" class="blob-code blob-code-inner js-file-line">               #<span class="pl-k">ifndef</span> STBI_NO_FAILURE_STRINGS</td>
        </tr>
        <tr>
          <td id="L5182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5182"></td>
          <td id="LC5182" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> not threadsafe</span></td>
        </tr>
        <tr>
          <td id="L5183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5183"></td>
          <td id="LC5183" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">static</span> <span class="pl-k">char</span> invalid_chunk[] = <span class="pl-s"><span class="pl-pds">&quot;</span>XXXX PNG chunk not known<span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L5184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5184"></td>
          <td id="LC5184" class="blob-code blob-code-inner js-file-line">               invalid_chunk[<span class="pl-c1">0</span>] = <span class="pl-c1">STBI__BYTECAST</span>(c.<span class="pl-smi">type</span> &gt;&gt; <span class="pl-c1">24</span>);</td>
        </tr>
        <tr>
          <td id="L5185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5185"></td>
          <td id="LC5185" class="blob-code blob-code-inner js-file-line">               invalid_chunk[<span class="pl-c1">1</span>] = <span class="pl-c1">STBI__BYTECAST</span>(c.<span class="pl-smi">type</span> &gt;&gt; <span class="pl-c1">16</span>);</td>
        </tr>
        <tr>
          <td id="L5186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5186"></td>
          <td id="LC5186" class="blob-code blob-code-inner js-file-line">               invalid_chunk[<span class="pl-c1">2</span>] = <span class="pl-c1">STBI__BYTECAST</span>(c.<span class="pl-smi">type</span> &gt;&gt;  <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L5187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5187"></td>
          <td id="LC5187" class="blob-code blob-code-inner js-file-line">               invalid_chunk[<span class="pl-c1">3</span>] = <span class="pl-c1">STBI__BYTECAST</span>(c.<span class="pl-smi">type</span> &gt;&gt;  <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L5188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5188"></td>
          <td id="LC5188" class="blob-code blob-code-inner js-file-line">               #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L5189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5189"></td>
          <td id="LC5189" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(invalid_chunk, <span class="pl-s"><span class="pl-pds">&quot;</span>PNG not supported: unknown PNG chunk type<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5190"></td>
          <td id="LC5190" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5191"></td>
          <td id="LC5191" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__skip</span>(s, c.<span class="pl-smi">length</span>);</td>
        </tr>
        <tr>
          <td id="L5192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5192"></td>
          <td id="LC5192" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5193"></td>
          <td id="LC5193" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5194"></td>
          <td id="LC5194" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> end of PNG chunk, read and skip CRC</span></td>
        </tr>
        <tr>
          <td id="L5195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5195"></td>
          <td id="LC5195" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L5196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5196"></td>
          <td id="LC5196" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5197"></td>
          <td id="LC5197" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5198"></td>
          <td id="LC5198" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5199"></td>
          <td id="LC5199" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__do_png</span>(stbi__png *p, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *n, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L5200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5200"></td>
          <td id="LC5200" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5201"></td>
          <td id="LC5201" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">void</span> *result=<span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5202"></td>
          <td id="LC5202" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &lt; <span class="pl-c1">0</span> || req_comp &gt; <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad req_comp<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Internal error<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5203"></td>
          <td id="LC5203" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__parse_png_file</span>(p, STBI__SCAN_load, req_comp)) {</td>
        </tr>
        <tr>
          <td id="L5204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5204"></td>
          <td id="LC5204" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (p-&gt;<span class="pl-smi">depth</span> &lt;= <span class="pl-c1">8</span>)</td>
        </tr>
        <tr>
          <td id="L5205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5205"></td>
          <td id="LC5205" class="blob-code blob-code-inner js-file-line">         ri-&gt;<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L5206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5206"></td>
          <td id="LC5206" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> (p-&gt;<span class="pl-smi">depth</span> == <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L5207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5207"></td>
          <td id="LC5207" class="blob-code blob-code-inner js-file-line">         ri-&gt;<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L5208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5208"></td>
          <td id="LC5208" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5209"></td>
          <td id="LC5209" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad bits_per_channel<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PNG not supported: unsupported color depth<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5210"></td>
          <td id="LC5210" class="blob-code blob-code-inner js-file-line">      result = p-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L5211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5211"></td>
          <td id="LC5211" class="blob-code blob-code-inner js-file-line">      p-&gt;<span class="pl-smi">out</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5212"></td>
          <td id="LC5212" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_out_n</span>) {</td>
        </tr>
        <tr>
          <td id="L5213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5213"></td>
          <td id="LC5213" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (ri-&gt;<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">8</span>)</td>
        </tr>
        <tr>
          <td id="L5214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5214"></td>
          <td id="LC5214" class="blob-code blob-code-inner js-file-line">            result = <span class="pl-c1">stbi__convert_format</span>((<span class="pl-k">unsigned</span> <span class="pl-k">char</span> *) result, p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_out_n</span>, req_comp, p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>);</td>
        </tr>
        <tr>
          <td id="L5215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5215"></td>
          <td id="LC5215" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5216"></td>
          <td id="LC5216" class="blob-code blob-code-inner js-file-line">            result = <span class="pl-c1">stbi__convert_format16</span>((stbi__uint16 *) result, p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_out_n</span>, req_comp, p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>, p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>);</td>
        </tr>
        <tr>
          <td id="L5217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5217"></td>
          <td id="LC5217" class="blob-code blob-code-inner js-file-line">         p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_out_n</span> = req_comp;</td>
        </tr>
        <tr>
          <td id="L5218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5218"></td>
          <td id="LC5218" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (result == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L5219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5219"></td>
          <td id="LC5219" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5220"></td>
          <td id="LC5220" class="blob-code blob-code-inner js-file-line">      *x = p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L5221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5221"></td>
          <td id="LC5221" class="blob-code blob-code-inner js-file-line">      *y = p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L5222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5222"></td>
          <td id="LC5222" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (n) *n = p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L5223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5223"></td>
          <td id="LC5223" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5224"></td>
          <td id="LC5224" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(p-&gt;<span class="pl-smi">out</span>);      p-&gt;<span class="pl-smi">out</span>      = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5225"></td>
          <td id="LC5225" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(p-&gt;<span class="pl-smi">expanded</span>); p-&gt;<span class="pl-smi">expanded</span> = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5226"></td>
          <td id="LC5226" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(p-&gt;<span class="pl-smi">idata</span>);    p-&gt;<span class="pl-smi">idata</span>    = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5227"></td>
          <td id="LC5227" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5228"></td>
          <td id="LC5228" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L5229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5229"></td>
          <td id="LC5229" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5230"></td>
          <td id="LC5230" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5231"></td>
          <td id="LC5231" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__png_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L5232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5232"></td>
          <td id="LC5232" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5233"></td>
          <td id="LC5233" class="blob-code blob-code-inner js-file-line">   stbi__png p;</td>
        </tr>
        <tr>
          <td id="L5234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5234"></td>
          <td id="LC5234" class="blob-code blob-code-inner js-file-line">   p.<span class="pl-smi">s</span> = s;</td>
        </tr>
        <tr>
          <td id="L5235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5235"></td>
          <td id="LC5235" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__do_png</span>(&amp;p, x,y,comp,req_comp, ri);</td>
        </tr>
        <tr>
          <td id="L5236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5236"></td>
          <td id="LC5236" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5237"></td>
          <td id="LC5237" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5238"></td>
          <td id="LC5238" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__png_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L5239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5239"></td>
          <td id="LC5239" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5240"></td>
          <td id="LC5240" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r;</td>
        </tr>
        <tr>
          <td id="L5241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5241"></td>
          <td id="LC5241" class="blob-code blob-code-inner js-file-line">   r = <span class="pl-c1">stbi__check_png_header</span>(s);</td>
        </tr>
        <tr>
          <td id="L5242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5242"></td>
          <td id="LC5242" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5243"></td>
          <td id="LC5243" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L5244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5244"></td>
          <td id="LC5244" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5245"></td>
          <td id="LC5245" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5246"></td>
          <td id="LC5246" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__png_info_raw</span>(stbi__png *p, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L5247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5247"></td>
          <td id="LC5247" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5248"></td>
          <td id="LC5248" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__parse_png_file</span>(p, STBI__SCAN_header, <span class="pl-c1">0</span>)) {</td>
        </tr>
        <tr>
          <td id="L5249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5249"></td>
          <td id="LC5249" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>( p-&gt;<span class="pl-smi">s</span> );</td>
        </tr>
        <tr>
          <td id="L5250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5250"></td>
          <td id="LC5250" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5251"></td>
          <td id="LC5251" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5252"></td>
          <td id="LC5252" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (x) *x = p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L5253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5253"></td>
          <td id="LC5253" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (y) *y = p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L5254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5254"></td>
          <td id="LC5254" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = p-&gt;<span class="pl-smi">s</span>-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L5255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5255"></td>
          <td id="LC5255" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5256"></td>
          <td id="LC5256" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5257"></td>
          <td id="LC5257" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5258"></td>
          <td id="LC5258" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__png_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L5259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5259"></td>
          <td id="LC5259" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5260"></td>
          <td id="LC5260" class="blob-code blob-code-inner js-file-line">   stbi__png p;</td>
        </tr>
        <tr>
          <td id="L5261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5261"></td>
          <td id="LC5261" class="blob-code blob-code-inner js-file-line">   p.<span class="pl-smi">s</span> = s;</td>
        </tr>
        <tr>
          <td id="L5262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5262"></td>
          <td id="LC5262" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__png_info_raw</span>(&amp;p, x, y, comp);</td>
        </tr>
        <tr>
          <td id="L5263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5263"></td>
          <td id="LC5263" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5264"></td>
          <td id="LC5264" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5265"></td>
          <td id="LC5265" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__png_is16</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L5266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5266"></td>
          <td id="LC5266" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5267"></td>
          <td id="LC5267" class="blob-code blob-code-inner js-file-line">   stbi__png p;</td>
        </tr>
        <tr>
          <td id="L5268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5268"></td>
          <td id="LC5268" class="blob-code blob-code-inner js-file-line">   p.<span class="pl-smi">s</span> = s;</td>
        </tr>
        <tr>
          <td id="L5269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5269"></td>
          <td id="LC5269" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__png_info_raw</span>(&amp;p, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>))</td>
        </tr>
        <tr>
          <td id="L5270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5270"></td>
          <td id="LC5270" class="blob-code blob-code-inner js-file-line">	   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5271"></td>
          <td id="LC5271" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p.<span class="pl-smi">depth</span> != <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L5272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5272"></td>
          <td id="LC5272" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>(p.<span class="pl-smi">s</span>);</td>
        </tr>
        <tr>
          <td id="L5273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5273"></td>
          <td id="LC5273" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5274"></td>
          <td id="LC5274" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5275"></td>
          <td id="LC5275" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5276"></td>
          <td id="LC5276" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5277"></td>
          <td id="LC5277" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L5278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5278"></td>
          <td id="LC5278" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5279"></td>
          <td id="LC5279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Microsoft/Windows BMP image</span></td>
        </tr>
        <tr>
          <td id="L5280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5280"></td>
          <td id="LC5280" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5281"></td>
          <td id="LC5281" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_BMP</td>
        </tr>
        <tr>
          <td id="L5282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5282"></td>
          <td id="LC5282" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bmp_test_raw</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L5283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5283"></td>
          <td id="LC5283" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5284"></td>
          <td id="LC5284" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r;</td>
        </tr>
        <tr>
          <td id="L5285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5285"></td>
          <td id="LC5285" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> sz;</td>
        </tr>
        <tr>
          <td id="L5286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5286"></td>
          <td id="LC5286" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5287"></td>
          <td id="LC5287" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>M<span class="pl-pds">&#39;</span></span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5288"></td>
          <td id="LC5288" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard filesize</span></td>
        </tr>
        <tr>
          <td id="L5289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5289"></td>
          <td id="LC5289" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get16le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard reserved</span></td>
        </tr>
        <tr>
          <td id="L5290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5290"></td>
          <td id="LC5290" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get16le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard reserved</span></td>
        </tr>
        <tr>
          <td id="L5291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5291"></td>
          <td id="LC5291" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard data offset</span></td>
        </tr>
        <tr>
          <td id="L5292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5292"></td>
          <td id="LC5292" class="blob-code blob-code-inner js-file-line">   sz = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5293"></td>
          <td id="LC5293" class="blob-code blob-code-inner js-file-line">   r = (sz == <span class="pl-c1">12</span> || sz == <span class="pl-c1">40</span> || sz == <span class="pl-c1">56</span> || sz == <span class="pl-c1">108</span> || sz == <span class="pl-c1">124</span>);</td>
        </tr>
        <tr>
          <td id="L5294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5294"></td>
          <td id="LC5294" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L5295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5295"></td>
          <td id="LC5295" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5296"></td>
          <td id="LC5296" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5297"></td>
          <td id="LC5297" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bmp_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L5298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5298"></td>
          <td id="LC5298" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5299"></td>
          <td id="LC5299" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r = <span class="pl-c1">stbi__bmp_test_raw</span>(s);</td>
        </tr>
        <tr>
          <td id="L5300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5300"></td>
          <td id="LC5300" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5301"></td>
          <td id="LC5301" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L5302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5302"></td>
          <td id="LC5302" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5303"></td>
          <td id="LC5303" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5304"></td>
          <td id="LC5304" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5305"></td>
          <td id="LC5305" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> returns 0..31 for the highest set bit</span></td>
        </tr>
        <tr>
          <td id="L5306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5306"></td>
          <td id="LC5306" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__high_bit</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> z)</td>
        </tr>
        <tr>
          <td id="L5307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5307"></td>
          <td id="LC5307" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5308"></td>
          <td id="LC5308" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> n=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5309"></td>
          <td id="LC5309" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z == <span class="pl-c1">0</span>) <span class="pl-k">return</span> -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5310"></td>
          <td id="LC5310" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z &gt;= <span class="pl-c1">0x10000</span>) { n += <span class="pl-c1">16</span>; z &gt;&gt;= <span class="pl-c1">16</span>; }</td>
        </tr>
        <tr>
          <td id="L5311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5311"></td>
          <td id="LC5311" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z &gt;= <span class="pl-c1">0x00100</span>) { n +=  <span class="pl-c1">8</span>; z &gt;&gt;=  <span class="pl-c1">8</span>; }</td>
        </tr>
        <tr>
          <td id="L5312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5312"></td>
          <td id="LC5312" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z &gt;= <span class="pl-c1">0x00010</span>) { n +=  <span class="pl-c1">4</span>; z &gt;&gt;=  <span class="pl-c1">4</span>; }</td>
        </tr>
        <tr>
          <td id="L5313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5313"></td>
          <td id="LC5313" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z &gt;= <span class="pl-c1">0x00004</span>) { n +=  <span class="pl-c1">2</span>; z &gt;&gt;=  <span class="pl-c1">2</span>; }</td>
        </tr>
        <tr>
          <td id="L5314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5314"></td>
          <td id="LC5314" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (z &gt;= <span class="pl-c1">0x00002</span>) { n +=  <span class="pl-c1">1</span>;<span class="pl-c"><span class="pl-c">/*</span> &gt;&gt;=  1;<span class="pl-c">*/</span></span> }</td>
        </tr>
        <tr>
          <td id="L5315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5315"></td>
          <td id="LC5315" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> n;</td>
        </tr>
        <tr>
          <td id="L5316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5316"></td>
          <td id="LC5316" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5317"></td>
          <td id="LC5317" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5318"></td>
          <td id="LC5318" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bitcount</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> a)</td>
        </tr>
        <tr>
          <td id="L5319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5319"></td>
          <td id="LC5319" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5320"></td>
          <td id="LC5320" class="blob-code blob-code-inner js-file-line">   a = (a &amp; <span class="pl-c1">0x55555555</span>) + ((a &gt;&gt;  <span class="pl-c1">1</span>) &amp; <span class="pl-c1">0x55555555</span>); <span class="pl-c"><span class="pl-c">//</span> max 2</span></td>
        </tr>
        <tr>
          <td id="L5321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5321"></td>
          <td id="LC5321" class="blob-code blob-code-inner js-file-line">   a = (a &amp; <span class="pl-c1">0x33333333</span>) + ((a &gt;&gt;  <span class="pl-c1">2</span>) &amp; <span class="pl-c1">0x33333333</span>); <span class="pl-c"><span class="pl-c">//</span> max 4</span></td>
        </tr>
        <tr>
          <td id="L5322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5322"></td>
          <td id="LC5322" class="blob-code blob-code-inner js-file-line">   a = (a + (a &gt;&gt; <span class="pl-c1">4</span>)) &amp; <span class="pl-c1">0x0f0f0f0f</span>; <span class="pl-c"><span class="pl-c">//</span> max 8 per 4, now 8 bits</span></td>
        </tr>
        <tr>
          <td id="L5323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5323"></td>
          <td id="LC5323" class="blob-code blob-code-inner js-file-line">   a = (a + (a &gt;&gt; <span class="pl-c1">8</span>)); <span class="pl-c"><span class="pl-c">//</span> max 16 per 8 bits</span></td>
        </tr>
        <tr>
          <td id="L5324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5324"></td>
          <td id="LC5324" class="blob-code blob-code-inner js-file-line">   a = (a + (a &gt;&gt; <span class="pl-c1">16</span>)); <span class="pl-c"><span class="pl-c">//</span> max 32 per 8 bits</span></td>
        </tr>
        <tr>
          <td id="L5325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5325"></td>
          <td id="LC5325" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> a &amp; <span class="pl-c1">0xff</span>;</td>
        </tr>
        <tr>
          <td id="L5326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5326"></td>
          <td id="LC5326" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5327"></td>
          <td id="LC5327" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5328"></td>
          <td id="LC5328" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> extract an arbitrarily-aligned N-bit value (N=bits)</span></td>
        </tr>
        <tr>
          <td id="L5329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5329"></td>
          <td id="LC5329" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> from v, and then make it 8-bits long and fractionally</span></td>
        </tr>
        <tr>
          <td id="L5330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5330"></td>
          <td id="LC5330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> extend it to full full range.</span></td>
        </tr>
        <tr>
          <td id="L5331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5331"></td>
          <td id="LC5331" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__shiftsigned</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span> v, <span class="pl-k">int</span> shift, <span class="pl-k">int</span> bits)</td>
        </tr>
        <tr>
          <td id="L5332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5332"></td>
          <td id="LC5332" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5333"></td>
          <td id="LC5333" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">static</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> mul_table[<span class="pl-c1">9</span>] = {</td>
        </tr>
        <tr>
          <td id="L5334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5334"></td>
          <td id="LC5334" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">0</span>,</td>
        </tr>
        <tr>
          <td id="L5335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5335"></td>
          <td id="LC5335" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">0xff</span><span class="pl-c"><span class="pl-c">/*</span>0b11111111<span class="pl-c">*/</span></span>, <span class="pl-c1">0x55</span><span class="pl-c"><span class="pl-c">/*</span>0b01010101<span class="pl-c">*/</span></span>, <span class="pl-c1">0x49</span><span class="pl-c"><span class="pl-c">/*</span>0b01001001<span class="pl-c">*/</span></span>, <span class="pl-c1">0x11</span><span class="pl-c"><span class="pl-c">/*</span>0b00010001<span class="pl-c">*/</span></span>,</td>
        </tr>
        <tr>
          <td id="L5336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5336"></td>
          <td id="LC5336" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">0x21</span><span class="pl-c"><span class="pl-c">/*</span>0b00100001<span class="pl-c">*/</span></span>, <span class="pl-c1">0x41</span><span class="pl-c"><span class="pl-c">/*</span>0b01000001<span class="pl-c">*/</span></span>, <span class="pl-c1">0x81</span><span class="pl-c"><span class="pl-c">/*</span>0b10000001<span class="pl-c">*/</span></span>, <span class="pl-c1">0x01</span><span class="pl-c"><span class="pl-c">/*</span>0b00000001<span class="pl-c">*/</span></span>,</td>
        </tr>
        <tr>
          <td id="L5337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5337"></td>
          <td id="LC5337" class="blob-code blob-code-inner js-file-line">   };</td>
        </tr>
        <tr>
          <td id="L5338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5338"></td>
          <td id="LC5338" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">static</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> shift_table[<span class="pl-c1">9</span>] = {</td>
        </tr>
        <tr>
          <td id="L5339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5339"></td>
          <td id="LC5339" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">0</span>, <span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">0</span>,</td>
        </tr>
        <tr>
          <td id="L5340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5340"></td>
          <td id="LC5340" class="blob-code blob-code-inner js-file-line">   };</td>
        </tr>
        <tr>
          <td id="L5341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5341"></td>
          <td id="LC5341" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (shift &lt; <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L5342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5342"></td>
          <td id="LC5342" class="blob-code blob-code-inner js-file-line">      v &lt;&lt;= -shift;</td>
        </tr>
        <tr>
          <td id="L5343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5343"></td>
          <td id="LC5343" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5344"></td>
          <td id="LC5344" class="blob-code blob-code-inner js-file-line">      v &gt;&gt;= shift;</td>
        </tr>
        <tr>
          <td id="L5345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5345"></td>
          <td id="LC5345" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(v &lt; <span class="pl-c1">256</span>);</td>
        </tr>
        <tr>
          <td id="L5346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5346"></td>
          <td id="LC5346" class="blob-code blob-code-inner js-file-line">   v &gt;&gt;= (<span class="pl-c1">8</span>-bits);</td>
        </tr>
        <tr>
          <td id="L5347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5347"></td>
          <td id="LC5347" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_ASSERT</span>(bits &gt;= <span class="pl-c1">0</span> &amp;&amp; bits &lt;= <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L5348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5348"></td>
          <td id="LC5348" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (<span class="pl-k">int</span>) ((<span class="pl-k">unsigned</span>) v * mul_table[bits]) &gt;&gt; shift_table[bits];</td>
        </tr>
        <tr>
          <td id="L5349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5349"></td>
          <td id="LC5349" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5350"></td>
          <td id="LC5350" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5351"></td>
          <td id="LC5351" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L5352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5352"></td>
          <td id="LC5352" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5353"></td>
          <td id="LC5353" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> bpp, offset, hsz;</td>
        </tr>
        <tr>
          <td id="L5354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5354"></td>
          <td id="LC5354" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> mr,mg,mb,ma, all_a;</td>
        </tr>
        <tr>
          <td id="L5355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5355"></td>
          <td id="LC5355" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> extra_read;</td>
        </tr>
        <tr>
          <td id="L5356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5356"></td>
          <td id="LC5356" class="blob-code blob-code-inner js-file-line">} stbi__bmp_data;</td>
        </tr>
        <tr>
          <td id="L5357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5357"></td>
          <td id="LC5357" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5358"></td>
          <td id="LC5358" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bmp_set_mask_defaults</span>(stbi__bmp_data *info, <span class="pl-k">int</span> compress)</td>
        </tr>
        <tr>
          <td id="L5359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5359"></td>
          <td id="LC5359" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5360"></td>
          <td id="LC5360" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> BI_BITFIELDS specifies masks explicitly, don&#39;t override</span></td>
        </tr>
        <tr>
          <td id="L5361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5361"></td>
          <td id="LC5361" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (compress == <span class="pl-c1">3</span>)</td>
        </tr>
        <tr>
          <td id="L5362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5362"></td>
          <td id="LC5362" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5363"></td>
          <td id="LC5363" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5364"></td>
          <td id="LC5364" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (compress == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L5365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5365"></td>
          <td id="LC5365" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info-&gt;<span class="pl-smi">bpp</span> == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L5366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5366"></td>
          <td id="LC5366" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mr</span> = <span class="pl-c1">31u</span> &lt;&lt; <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L5367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5367"></td>
          <td id="LC5367" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mg</span> = <span class="pl-c1">31u</span> &lt;&lt;  <span class="pl-c1">5</span>;</td>
        </tr>
        <tr>
          <td id="L5368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5368"></td>
          <td id="LC5368" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mb</span> = <span class="pl-c1">31u</span> &lt;&lt;  <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5369"></td>
          <td id="LC5369" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (info-&gt;<span class="pl-smi">bpp</span> == <span class="pl-c1">32</span>) {</td>
        </tr>
        <tr>
          <td id="L5370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5370"></td>
          <td id="LC5370" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mr</span> = <span class="pl-c1">0xffu</span> &lt;&lt; <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L5371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5371"></td>
          <td id="LC5371" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mg</span> = <span class="pl-c1">0xffu</span> &lt;&lt;  <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L5372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5372"></td>
          <td id="LC5372" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mb</span> = <span class="pl-c1">0xffu</span> &lt;&lt;  <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5373"></td>
          <td id="LC5373" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">ma</span> = <span class="pl-c1">0xffu</span> &lt;&lt; <span class="pl-c1">24</span>;</td>
        </tr>
        <tr>
          <td id="L5374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5374"></td>
          <td id="LC5374" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">all_a</span> = <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> if all_a is 0 at end, then we loaded alpha channel but it was all 0</span></td>
        </tr>
        <tr>
          <td id="L5375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5375"></td>
          <td id="LC5375" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5376"></td>
          <td id="LC5376" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> otherwise, use defaults, which is all-0</span></td>
        </tr>
        <tr>
          <td id="L5377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5377"></td>
          <td id="LC5377" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mr</span> = info-&gt;<span class="pl-smi">mg</span> = info-&gt;<span class="pl-smi">mb</span> = info-&gt;<span class="pl-smi">ma</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5378"></td>
          <td id="LC5378" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5379"></td>
          <td id="LC5379" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5380"></td>
          <td id="LC5380" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5381"></td>
          <td id="LC5381" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> error</span></td>
        </tr>
        <tr>
          <td id="L5382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5382"></td>
          <td id="LC5382" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5383"></td>
          <td id="LC5383" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5384"></td>
          <td id="LC5384" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__bmp_parse_header</span>(stbi__context *s, stbi__bmp_data *info)</td>
        </tr>
        <tr>
          <td id="L5385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5385"></td>
          <td id="LC5385" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5386"></td>
          <td id="LC5386" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> hsz;</td>
        </tr>
        <tr>
          <td id="L5387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5387"></td>
          <td id="LC5387" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>B<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>M<span class="pl-pds">&#39;</span></span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5388"></td>
          <td id="LC5388" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard filesize</span></td>
        </tr>
        <tr>
          <td id="L5389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5389"></td>
          <td id="LC5389" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get16le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard reserved</span></td>
        </tr>
        <tr>
          <td id="L5390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5390"></td>
          <td id="LC5390" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get16le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard reserved</span></td>
        </tr>
        <tr>
          <td id="L5391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5391"></td>
          <td id="LC5391" class="blob-code blob-code-inner js-file-line">   info-&gt;<span class="pl-smi">offset</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5392"></td>
          <td id="LC5392" class="blob-code blob-code-inner js-file-line">   info-&gt;<span class="pl-smi">hsz</span> = hsz = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5393"></td>
          <td id="LC5393" class="blob-code blob-code-inner js-file-line">   info-&gt;<span class="pl-smi">mr</span> = info-&gt;<span class="pl-smi">mg</span> = info-&gt;<span class="pl-smi">mb</span> = info-&gt;<span class="pl-smi">ma</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5394"></td>
          <td id="LC5394" class="blob-code blob-code-inner js-file-line">   info-&gt;<span class="pl-smi">extra_read</span> = <span class="pl-c1">14</span>;</td>
        </tr>
        <tr>
          <td id="L5395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5395"></td>
          <td id="LC5395" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5396"></td>
          <td id="LC5396" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (info-&gt;<span class="pl-smi">offset</span> &lt; <span class="pl-c1">0</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5397"></td>
          <td id="LC5397" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5398"></td>
          <td id="LC5398" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (hsz != <span class="pl-c1">12</span> &amp;&amp; hsz != <span class="pl-c1">40</span> &amp;&amp; hsz != <span class="pl-c1">56</span> &amp;&amp; hsz != <span class="pl-c1">108</span> &amp;&amp; hsz != <span class="pl-c1">124</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unknown BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>BMP type not supported: unknown<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5399"></td>
          <td id="LC5399" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (hsz == <span class="pl-c1">12</span>) {</td>
        </tr>
        <tr>
          <td id="L5400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5400"></td>
          <td id="LC5400" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_x</span> = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5401"></td>
          <td id="LC5401" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_y</span> = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5402"></td>
          <td id="LC5402" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5403"></td>
          <td id="LC5403" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_x</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5404"></td>
          <td id="LC5404" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_y</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5405"></td>
          <td id="LC5405" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5406"></td>
          <td id="LC5406" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16le</span>(s) != <span class="pl-c1">1</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5407"></td>
          <td id="LC5407" class="blob-code blob-code-inner js-file-line">   info-&gt;<span class="pl-smi">bpp</span> = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5408"></td>
          <td id="LC5408" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (hsz != <span class="pl-c1">12</span>) {</td>
        </tr>
        <tr>
          <td id="L5409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5409"></td>
          <td id="LC5409" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> compress = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5410"></td>
          <td id="LC5410" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (compress == <span class="pl-c1">1</span> || compress == <span class="pl-c1">2</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>BMP RLE<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>BMP type not supported: RLE<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5411"></td>
          <td id="LC5411" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (compress &gt;= <span class="pl-c1">4</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>BMP JPEG/PNG<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>BMP type not supported: unsupported compression<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> this includes PNG/JPEG modes</span></td>
        </tr>
        <tr>
          <td id="L5412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5412"></td>
          <td id="LC5412" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (compress == <span class="pl-c1">3</span> &amp;&amp; info-&gt;<span class="pl-smi">bpp</span> != <span class="pl-c1">16</span> &amp;&amp; info-&gt;<span class="pl-smi">bpp</span> != <span class="pl-c1">32</span>) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>); <span class="pl-c"><span class="pl-c">//</span> bitfields requires 16 or 32 bits/pixel</span></td>
        </tr>
        <tr>
          <td id="L5413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5413"></td>
          <td id="LC5413" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard sizeof</span></td>
        </tr>
        <tr>
          <td id="L5414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5414"></td>
          <td id="LC5414" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard hres</span></td>
        </tr>
        <tr>
          <td id="L5415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5415"></td>
          <td id="LC5415" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard vres</span></td>
        </tr>
        <tr>
          <td id="L5416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5416"></td>
          <td id="LC5416" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard colorsused</span></td>
        </tr>
        <tr>
          <td id="L5417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5417"></td>
          <td id="LC5417" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard max important</span></td>
        </tr>
        <tr>
          <td id="L5418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5418"></td>
          <td id="LC5418" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (hsz == <span class="pl-c1">40</span> || hsz == <span class="pl-c1">56</span>) {</td>
        </tr>
        <tr>
          <td id="L5419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5419"></td>
          <td id="LC5419" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (hsz == <span class="pl-c1">56</span>) {</td>
        </tr>
        <tr>
          <td id="L5420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5420"></td>
          <td id="LC5420" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5421"></td>
          <td id="LC5421" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5422"></td>
          <td id="LC5422" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5423"></td>
          <td id="LC5423" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5424"></td>
          <td id="LC5424" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5425"></td>
          <td id="LC5425" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (info-&gt;<span class="pl-smi">bpp</span> == <span class="pl-c1">16</span> || info-&gt;<span class="pl-smi">bpp</span> == <span class="pl-c1">32</span>) {</td>
        </tr>
        <tr>
          <td id="L5426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5426"></td>
          <td id="LC5426" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (compress == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L5427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5427"></td>
          <td id="LC5427" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__bmp_set_mask_defaults</span>(info, compress);</td>
        </tr>
        <tr>
          <td id="L5428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5428"></td>
          <td id="LC5428" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (compress == <span class="pl-c1">3</span>) {</td>
        </tr>
        <tr>
          <td id="L5429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5429"></td>
          <td id="LC5429" class="blob-code blob-code-inner js-file-line">               info-&gt;<span class="pl-smi">mr</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5430"></td>
          <td id="LC5430" class="blob-code blob-code-inner js-file-line">               info-&gt;<span class="pl-smi">mg</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5431"></td>
          <td id="LC5431" class="blob-code blob-code-inner js-file-line">               info-&gt;<span class="pl-smi">mb</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5432"></td>
          <td id="LC5432" class="blob-code blob-code-inner js-file-line">               info-&gt;<span class="pl-smi">extra_read</span> += <span class="pl-c1">12</span>;</td>
        </tr>
        <tr>
          <td id="L5433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5433"></td>
          <td id="LC5433" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> not documented, but generated by photoshop and handled by mspaint</span></td>
        </tr>
        <tr>
          <td id="L5434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5434"></td>
          <td id="LC5434" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (info-&gt;<span class="pl-smi">mr</span> == info-&gt;<span class="pl-smi">mg</span> &amp;&amp; info-&gt;<span class="pl-smi">mg</span> == info-&gt;<span class="pl-smi">mb</span>) {</td>
        </tr>
        <tr>
          <td id="L5435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5435"></td>
          <td id="LC5435" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> ?!?!?</span></td>
        </tr>
        <tr>
          <td id="L5436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5436"></td>
          <td id="LC5436" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5437"></td>
          <td id="LC5437" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5438"></td>
          <td id="LC5438" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5439"></td>
          <td id="LC5439" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5440"></td>
          <td id="LC5440" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5441"></td>
          <td id="LC5441" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5442"></td>
          <td id="LC5442" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> V4/V5 header</span></td>
        </tr>
        <tr>
          <td id="L5443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5443"></td>
          <td id="LC5443" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L5444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5444"></td>
          <td id="LC5444" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (hsz != <span class="pl-c1">108</span> &amp;&amp; hsz != <span class="pl-c1">124</span>)</td>
        </tr>
        <tr>
          <td id="L5445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5445"></td>
          <td id="LC5445" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5446"></td>
          <td id="LC5446" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mr</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5447"></td>
          <td id="LC5447" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mg</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5448"></td>
          <td id="LC5448" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">mb</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5449"></td>
          <td id="LC5449" class="blob-code blob-code-inner js-file-line">         info-&gt;<span class="pl-smi">ma</span> = <span class="pl-c1">stbi__get32le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5450"></td>
          <td id="LC5450" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (compress != <span class="pl-c1">3</span>) <span class="pl-c"><span class="pl-c">//</span> override mr/mg/mb unless in BI_BITFIELDS mode, as per docs</span></td>
        </tr>
        <tr>
          <td id="L5451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5451"></td>
          <td id="LC5451" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__bmp_set_mask_defaults</span>(info, compress);</td>
        </tr>
        <tr>
          <td id="L5452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5452"></td>
          <td id="LC5452" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard color space</span></td>
        </tr>
        <tr>
          <td id="L5453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5453"></td>
          <td id="LC5453" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; <span class="pl-c1">12</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L5454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5454"></td>
          <td id="LC5454" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard color space parameters</span></td>
        </tr>
        <tr>
          <td id="L5455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5455"></td>
          <td id="LC5455" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (hsz == <span class="pl-c1">124</span>) {</td>
        </tr>
        <tr>
          <td id="L5456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5456"></td>
          <td id="LC5456" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard rendering intent</span></td>
        </tr>
        <tr>
          <td id="L5457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5457"></td>
          <td id="LC5457" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard offset of profile data</span></td>
        </tr>
        <tr>
          <td id="L5458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5458"></td>
          <td id="LC5458" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard size of profile data</span></td>
        </tr>
        <tr>
          <td id="L5459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5459"></td>
          <td id="LC5459" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__get32le</span>(s); <span class="pl-c"><span class="pl-c">//</span> discard reserved</span></td>
        </tr>
        <tr>
          <td id="L5460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5460"></td>
          <td id="LC5460" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5461"></td>
          <td id="LC5461" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5462"></td>
          <td id="LC5462" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5463"></td>
          <td id="LC5463" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> (<span class="pl-k">void</span> *) <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5464"></td>
          <td id="LC5464" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5465"></td>
          <td id="LC5465" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5466"></td>
          <td id="LC5466" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5467"></td>
          <td id="LC5467" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__bmp_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L5468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5468"></td>
          <td id="LC5468" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5469"></td>
          <td id="LC5469" class="blob-code blob-code-inner js-file-line">   stbi_uc *out;</td>
        </tr>
        <tr>
          <td id="L5470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5470"></td>
          <td id="LC5470" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">int</span> mr=<span class="pl-c1">0</span>,mg=<span class="pl-c1">0</span>,mb=<span class="pl-c1">0</span>,ma=<span class="pl-c1">0</span>, all_a;</td>
        </tr>
        <tr>
          <td id="L5471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5471"></td>
          <td id="LC5471" class="blob-code blob-code-inner js-file-line">   stbi_uc pal[<span class="pl-c1">256</span>][<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L5472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5472"></td>
          <td id="LC5472" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> psize=<span class="pl-c1">0</span>,i,j,width;</td>
        </tr>
        <tr>
          <td id="L5473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5473"></td>
          <td id="LC5473" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> flip_vertically, pad, target;</td>
        </tr>
        <tr>
          <td id="L5474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5474"></td>
          <td id="LC5474" class="blob-code blob-code-inner js-file-line">   stbi__bmp_data info;</td>
        </tr>
        <tr>
          <td id="L5475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5475"></td>
          <td id="LC5475" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L5476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5476"></td>
          <td id="LC5476" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5477"></td>
          <td id="LC5477" class="blob-code blob-code-inner js-file-line">   info.<span class="pl-smi">all_a</span> = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5478"></td>
          <td id="LC5478" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__bmp_parse_header</span>(s, &amp;info) == <span class="pl-c1">NULL</span>)</td>
        </tr>
        <tr>
          <td id="L5479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5479"></td>
          <td id="LC5479" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">NULL</span>; <span class="pl-c"><span class="pl-c">//</span> error code already set</span></td>
        </tr>
        <tr>
          <td id="L5480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5480"></td>
          <td id="LC5480" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5481"></td>
          <td id="LC5481" class="blob-code blob-code-inner js-file-line">   flip_vertically = ((<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_y</span>) &gt; <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5482"></td>
          <td id="LC5482" class="blob-code blob-code-inner js-file-line">   s-&gt;<span class="pl-smi">img_y</span> = <span class="pl-c1">abs</span>((<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_y</span>);</td>
        </tr>
        <tr>
          <td id="L5483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5483"></td>
          <td id="LC5483" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5484"></td>
          <td id="LC5484" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_y</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5485"></td>
          <td id="LC5485" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_x</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5486"></td>
          <td id="LC5486" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5487"></td>
          <td id="LC5487" class="blob-code blob-code-inner js-file-line">   mr = info.<span class="pl-smi">mr</span>;</td>
        </tr>
        <tr>
          <td id="L5488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5488"></td>
          <td id="LC5488" class="blob-code blob-code-inner js-file-line">   mg = info.<span class="pl-smi">mg</span>;</td>
        </tr>
        <tr>
          <td id="L5489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5489"></td>
          <td id="LC5489" class="blob-code blob-code-inner js-file-line">   mb = info.<span class="pl-smi">mb</span>;</td>
        </tr>
        <tr>
          <td id="L5490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5490"></td>
          <td id="LC5490" class="blob-code blob-code-inner js-file-line">   ma = info.<span class="pl-smi">ma</span>;</td>
        </tr>
        <tr>
          <td id="L5491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5491"></td>
          <td id="LC5491" class="blob-code blob-code-inner js-file-line">   all_a = info.<span class="pl-smi">all_a</span>;</td>
        </tr>
        <tr>
          <td id="L5492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5492"></td>
          <td id="LC5492" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5493"></td>
          <td id="LC5493" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (info.<span class="pl-smi">hsz</span> == <span class="pl-c1">12</span>) {</td>
        </tr>
        <tr>
          <td id="L5494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5494"></td>
          <td id="LC5494" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> &lt; <span class="pl-c1">24</span>)</td>
        </tr>
        <tr>
          <td id="L5495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5495"></td>
          <td id="LC5495" class="blob-code blob-code-inner js-file-line">         psize = (info.<span class="pl-smi">offset</span> - info.<span class="pl-smi">extra_read</span> - <span class="pl-c1">24</span>) / <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5496"></td>
          <td id="LC5496" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5497"></td>
          <td id="LC5497" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> &lt; <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L5498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5498"></td>
          <td id="LC5498" class="blob-code blob-code-inner js-file-line">         psize = (info.<span class="pl-smi">offset</span> - info.<span class="pl-smi">extra_read</span> - info.<span class="pl-smi">hsz</span>) &gt;&gt; <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L5499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5499"></td>
          <td id="LC5499" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5500"></td>
          <td id="LC5500" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (psize == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L5501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5501"></td>
          <td id="LC5501" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">offset</span> != s-&gt;<span class="pl-smi">callback_already_read</span> + (s-&gt;<span class="pl-smi">img_buffer</span> - s-&gt;<span class="pl-smi">img_buffer_original</span>)) {</td>
        </tr>
        <tr>
          <td id="L5502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5502"></td>
          <td id="LC5502" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad offset<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5503"></td>
          <td id="LC5503" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5504"></td>
          <td id="LC5504" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5505"></td>
          <td id="LC5505" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5506"></td>
          <td id="LC5506" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">24</span> &amp;&amp; ma == <span class="pl-c1">0xff000000</span>)</td>
        </tr>
        <tr>
          <td id="L5507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5507"></td>
          <td id="LC5507" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_n</span> = <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5508"></td>
          <td id="LC5508" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5509"></td>
          <td id="LC5509" class="blob-code blob-code-inner js-file-line">      s-&gt;<span class="pl-smi">img_n</span> = ma ? <span class="pl-c1">4</span> : <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5510"></td>
          <td id="LC5510" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp &gt;= <span class="pl-c1">3</span>) <span class="pl-c"><span class="pl-c">//</span> we can directly decode 3 or 4</span></td>
        </tr>
        <tr>
          <td id="L5511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5511"></td>
          <td id="LC5511" class="blob-code blob-code-inner js-file-line">      target = req_comp;</td>
        </tr>
        <tr>
          <td id="L5512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5512"></td>
          <td id="LC5512" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5513"></td>
          <td id="LC5513" class="blob-code blob-code-inner js-file-line">      target = s-&gt;<span class="pl-smi">img_n</span>; <span class="pl-c"><span class="pl-c">//</span> if they want monochrome, we&#39;ll post-convert</span></td>
        </tr>
        <tr>
          <td id="L5514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5514"></td>
          <td id="LC5514" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5515"></td>
          <td id="LC5515" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> sanity-check size</span></td>
        </tr>
        <tr>
          <td id="L5516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5516"></td>
          <td id="LC5516" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(target, s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>, <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L5517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5517"></td>
          <td id="LC5517" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5518"></td>
          <td id="LC5518" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5519"></td>
          <td id="LC5519" class="blob-code blob-code-inner js-file-line">   out = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(target, s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L5520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5520"></td>
          <td id="LC5520" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!out) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5521"></td>
          <td id="LC5521" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> &lt; <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L5522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5522"></td>
          <td id="LC5522" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> z=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5523"></td>
          <td id="LC5523" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (psize == <span class="pl-c1">0</span> || psize &gt; <span class="pl-c1">256</span>) { <span class="pl-c1">STBI_FREE</span>(out); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L5524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5524"></td>
          <td id="LC5524" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; psize; ++i) {</td>
        </tr>
        <tr>
          <td id="L5525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5525"></td>
          <td id="LC5525" class="blob-code blob-code-inner js-file-line">         pal[i][<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5526"></td>
          <td id="LC5526" class="blob-code blob-code-inner js-file-line">         pal[i][<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5527"></td>
          <td id="LC5527" class="blob-code blob-code-inner js-file-line">         pal[i][<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5528"></td>
          <td id="LC5528" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (info.<span class="pl-smi">hsz</span> != <span class="pl-c1">12</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5529"></td>
          <td id="LC5529" class="blob-code blob-code-inner js-file-line">         pal[i][<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5530"></td>
          <td id="LC5530" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5531"></td>
          <td id="LC5531" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(s, info.<span class="pl-smi">offset</span> - info.<span class="pl-smi">extra_read</span> - info.<span class="pl-smi">hsz</span> - psize * (info.<span class="pl-smi">hsz</span> == <span class="pl-c1">12</span> ? <span class="pl-c1">3</span> : <span class="pl-c1">4</span>));</td>
        </tr>
        <tr>
          <td id="L5532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5532"></td>
          <td id="LC5532" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">1</span>) width = (s-&gt;<span class="pl-smi">img_x</span> + <span class="pl-c1">7</span>) &gt;&gt; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5533"></td>
          <td id="LC5533" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">4</span>) width = (s-&gt;<span class="pl-smi">img_x</span> + <span class="pl-c1">1</span>) &gt;&gt; <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5534"></td>
          <td id="LC5534" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">8</span>) width = s-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L5535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5535"></td>
          <td id="LC5535" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> { <span class="pl-c1">STBI_FREE</span>(out); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad bpp<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L5536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5536"></td>
          <td id="LC5536" class="blob-code blob-code-inner js-file-line">      pad = (-width)&amp;<span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5537"></td>
          <td id="LC5537" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L5538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5538"></td>
          <td id="LC5538" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_y</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L5539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5539"></td>
          <td id="LC5539" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> bit_offset = <span class="pl-c1">7</span>, v = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5540"></td>
          <td id="LC5540" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L5541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5541"></td>
          <td id="LC5541" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> color = (v&gt;&gt;bit_offset)&amp;<span class="pl-c1">0x1</span>;</td>
        </tr>
        <tr>
          <td id="L5542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5542"></td>
          <td id="LC5542" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[color][<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L5543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5543"></td>
          <td id="LC5543" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[color][<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L5544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5544"></td>
          <td id="LC5544" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[color][<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L5545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5545"></td>
          <td id="LC5545" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (target == <span class="pl-c1">4</span>) out[z++] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5546"></td>
          <td id="LC5546" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (i+<span class="pl-c1">1</span> == (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>) <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5547"></td>
          <td id="LC5547" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span>((--bit_offset) &lt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L5548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5548"></td>
          <td id="LC5548" class="blob-code blob-code-inner js-file-line">                  bit_offset = <span class="pl-c1">7</span>;</td>
        </tr>
        <tr>
          <td id="L5549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5549"></td>
          <td id="LC5549" class="blob-code blob-code-inner js-file-line">                  v = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5550"></td>
          <td id="LC5550" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5551"></td>
          <td id="LC5551" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5552"></td>
          <td id="LC5552" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__skip</span>(s, pad);</td>
        </tr>
        <tr>
          <td id="L5553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5553"></td>
          <td id="LC5553" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5554"></td>
          <td id="LC5554" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5555"></td>
          <td id="LC5555" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_y</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L5556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5556"></td>
          <td id="LC5556" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>; i += <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L5557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5557"></td>
          <td id="LC5557" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> v=<span class="pl-c1">stbi__get8</span>(s),v2=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5558"></td>
          <td id="LC5558" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L5559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5559"></td>
          <td id="LC5559" class="blob-code blob-code-inner js-file-line">                  v2 = v &amp; <span class="pl-c1">15</span>;</td>
        </tr>
        <tr>
          <td id="L5560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5560"></td>
          <td id="LC5560" class="blob-code blob-code-inner js-file-line">                  v &gt;&gt;= <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L5561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5561"></td>
          <td id="LC5561" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5562"></td>
          <td id="LC5562" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[v][<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L5563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5563"></td>
          <td id="LC5563" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[v][<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L5564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5564"></td>
          <td id="LC5564" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[v][<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L5565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5565"></td>
          <td id="LC5565" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (target == <span class="pl-c1">4</span>) out[z++] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5566"></td>
          <td id="LC5566" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (i+<span class="pl-c1">1</span> == (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>) <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L5567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5567"></td>
          <td id="LC5567" class="blob-code blob-code-inner js-file-line">               v = (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">8</span>) ? <span class="pl-c1">stbi__get8</span>(s) : v2;</td>
        </tr>
        <tr>
          <td id="L5568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5568"></td>
          <td id="LC5568" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[v][<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L5569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5569"></td>
          <td id="LC5569" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[v][<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L5570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5570"></td>
          <td id="LC5570" class="blob-code blob-code-inner js-file-line">               out[z++] = pal[v][<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L5571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5571"></td>
          <td id="LC5571" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (target == <span class="pl-c1">4</span>) out[z++] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5572"></td>
          <td id="LC5572" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5573"></td>
          <td id="LC5573" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__skip</span>(s, pad);</td>
        </tr>
        <tr>
          <td id="L5574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5574"></td>
          <td id="LC5574" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5575"></td>
          <td id="LC5575" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5576"></td>
          <td id="LC5576" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5577"></td>
          <td id="LC5577" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> rshift=<span class="pl-c1">0</span>,gshift=<span class="pl-c1">0</span>,bshift=<span class="pl-c1">0</span>,ashift=<span class="pl-c1">0</span>,rcount=<span class="pl-c1">0</span>,gcount=<span class="pl-c1">0</span>,bcount=<span class="pl-c1">0</span>,acount=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5578"></td>
          <td id="LC5578" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> z = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5579"></td>
          <td id="LC5579" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> easy=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5580"></td>
          <td id="LC5580" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(s, info.<span class="pl-smi">offset</span> - info.<span class="pl-smi">extra_read</span> - info.<span class="pl-smi">hsz</span>);</td>
        </tr>
        <tr>
          <td id="L5581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5581"></td>
          <td id="LC5581" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">24</span>) width = <span class="pl-c1">3</span> * s-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L5582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5582"></td>
          <td id="LC5582" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">16</span>) width = <span class="pl-c1">2</span>*s-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L5583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5583"></td>
          <td id="LC5583" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-c"><span class="pl-c">/*</span> bpp = 32 and pad = 0 <span class="pl-c">*/</span></span> width=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5584"></td>
          <td id="LC5584" class="blob-code blob-code-inner js-file-line">      pad = (-width) &amp; <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5585"></td>
          <td id="LC5585" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">24</span>) {</td>
        </tr>
        <tr>
          <td id="L5586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5586"></td>
          <td id="LC5586" class="blob-code blob-code-inner js-file-line">         easy = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5587"></td>
          <td id="LC5587" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">32</span>) {</td>
        </tr>
        <tr>
          <td id="L5588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5588"></td>
          <td id="LC5588" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (mb == <span class="pl-c1">0xff</span> &amp;&amp; mg == <span class="pl-c1">0xff00</span> &amp;&amp; mr == <span class="pl-c1">0x00ff0000</span> &amp;&amp; ma == <span class="pl-c1">0xff000000</span>)</td>
        </tr>
        <tr>
          <td id="L5589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5589"></td>
          <td id="LC5589" class="blob-code blob-code-inner js-file-line">            easy = <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L5590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5590"></td>
          <td id="LC5590" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5591"></td>
          <td id="LC5591" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!easy) {</td>
        </tr>
        <tr>
          <td id="L5592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5592"></td>
          <td id="LC5592" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!mr || !mg || !mb) { <span class="pl-c1">STBI_FREE</span>(out); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad masks<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L5593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5593"></td>
          <td id="LC5593" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> right shift amt to put high bit in position #7</span></td>
        </tr>
        <tr>
          <td id="L5594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5594"></td>
          <td id="LC5594" class="blob-code blob-code-inner js-file-line">         rshift = <span class="pl-c1">stbi__high_bit</span>(mr)-<span class="pl-c1">7</span>; rcount = <span class="pl-c1">stbi__bitcount</span>(mr);</td>
        </tr>
        <tr>
          <td id="L5595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5595"></td>
          <td id="LC5595" class="blob-code blob-code-inner js-file-line">         gshift = <span class="pl-c1">stbi__high_bit</span>(mg)-<span class="pl-c1">7</span>; gcount = <span class="pl-c1">stbi__bitcount</span>(mg);</td>
        </tr>
        <tr>
          <td id="L5596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5596"></td>
          <td id="LC5596" class="blob-code blob-code-inner js-file-line">         bshift = <span class="pl-c1">stbi__high_bit</span>(mb)-<span class="pl-c1">7</span>; bcount = <span class="pl-c1">stbi__bitcount</span>(mb);</td>
        </tr>
        <tr>
          <td id="L5597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5597"></td>
          <td id="LC5597" class="blob-code blob-code-inner js-file-line">         ashift = <span class="pl-c1">stbi__high_bit</span>(ma)-<span class="pl-c1">7</span>; acount = <span class="pl-c1">stbi__bitcount</span>(ma);</td>
        </tr>
        <tr>
          <td id="L5598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5598"></td>
          <td id="LC5598" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (rcount &gt; <span class="pl-c1">8</span> || gcount &gt; <span class="pl-c1">8</span> || bcount &gt; <span class="pl-c1">8</span> || acount &gt; <span class="pl-c1">8</span>) { <span class="pl-c1">STBI_FREE</span>(out); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad masks<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt BMP<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L5599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5599"></td>
          <td id="LC5599" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5600"></td>
          <td id="LC5600" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_y</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L5601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5601"></td>
          <td id="LC5601" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (easy) {</td>
        </tr>
        <tr>
          <td id="L5602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5602"></td>
          <td id="LC5602" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L5603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5603"></td>
          <td id="LC5603" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">unsigned</span> <span class="pl-k">char</span> a;</td>
        </tr>
        <tr>
          <td id="L5604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5604"></td>
          <td id="LC5604" class="blob-code blob-code-inner js-file-line">               out[z+<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5605"></td>
          <td id="LC5605" class="blob-code blob-code-inner js-file-line">               out[z+<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5606"></td>
          <td id="LC5606" class="blob-code blob-code-inner js-file-line">               out[z+<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5607"></td>
          <td id="LC5607" class="blob-code blob-code-inner js-file-line">               z += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L5608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5608"></td>
          <td id="LC5608" class="blob-code blob-code-inner js-file-line">               a = (easy == <span class="pl-c1">2</span> ? <span class="pl-c1">stbi__get8</span>(s) : <span class="pl-c1">255</span>);</td>
        </tr>
        <tr>
          <td id="L5609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5609"></td>
          <td id="LC5609" class="blob-code blob-code-inner js-file-line">               all_a |= a;</td>
        </tr>
        <tr>
          <td id="L5610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5610"></td>
          <td id="LC5610" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (target == <span class="pl-c1">4</span>) out[z++] = a;</td>
        </tr>
        <tr>
          <td id="L5611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5611"></td>
          <td id="LC5611" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5612"></td>
          <td id="LC5612" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5613"></td>
          <td id="LC5613" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> bpp = info.<span class="pl-smi">bpp</span>;</td>
        </tr>
        <tr>
          <td id="L5614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5614"></td>
          <td id="LC5614" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>; ++i) {</td>
        </tr>
        <tr>
          <td id="L5615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5615"></td>
          <td id="LC5615" class="blob-code blob-code-inner js-file-line">               stbi__uint32 v = (bpp == <span class="pl-c1">16</span> ? (stbi__uint32) <span class="pl-c1">stbi__get16le</span>(s) : <span class="pl-c1">stbi__get32le</span>(s));</td>
        </tr>
        <tr>
          <td id="L5616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5616"></td>
          <td id="LC5616" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">unsigned</span> <span class="pl-k">int</span> a;</td>
        </tr>
        <tr>
          <td id="L5617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5617"></td>
          <td id="LC5617" class="blob-code blob-code-inner js-file-line">               out[z++] = <span class="pl-c1">STBI__BYTECAST</span>(<span class="pl-c1">stbi__shiftsigned</span>(v &amp; mr, rshift, rcount));</td>
        </tr>
        <tr>
          <td id="L5618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5618"></td>
          <td id="LC5618" class="blob-code blob-code-inner js-file-line">               out[z++] = <span class="pl-c1">STBI__BYTECAST</span>(<span class="pl-c1">stbi__shiftsigned</span>(v &amp; mg, gshift, gcount));</td>
        </tr>
        <tr>
          <td id="L5619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5619"></td>
          <td id="LC5619" class="blob-code blob-code-inner js-file-line">               out[z++] = <span class="pl-c1">STBI__BYTECAST</span>(<span class="pl-c1">stbi__shiftsigned</span>(v &amp; mb, bshift, bcount));</td>
        </tr>
        <tr>
          <td id="L5620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5620"></td>
          <td id="LC5620" class="blob-code blob-code-inner js-file-line">               a = (ma ? <span class="pl-c1">stbi__shiftsigned</span>(v &amp; ma, ashift, acount) : <span class="pl-c1">255</span>);</td>
        </tr>
        <tr>
          <td id="L5621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5621"></td>
          <td id="LC5621" class="blob-code blob-code-inner js-file-line">               all_a |= a;</td>
        </tr>
        <tr>
          <td id="L5622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5622"></td>
          <td id="LC5622" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (target == <span class="pl-c1">4</span>) out[z++] = <span class="pl-c1">STBI__BYTECAST</span>(a);</td>
        </tr>
        <tr>
          <td id="L5623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5623"></td>
          <td id="LC5623" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5624"></td>
          <td id="LC5624" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5625"></td>
          <td id="LC5625" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">stbi__skip</span>(s, pad);</td>
        </tr>
        <tr>
          <td id="L5626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5626"></td>
          <td id="LC5626" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5627"></td>
          <td id="LC5627" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5628"></td>
          <td id="LC5628" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5629"></td>
          <td id="LC5629" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> if alpha channel is all 0s, replace with all 255s</span></td>
        </tr>
        <tr>
          <td id="L5630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5630"></td>
          <td id="LC5630" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (target == <span class="pl-c1">4</span> &amp;&amp; all_a == <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L5631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5631"></td>
          <td id="LC5631" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">4</span>*s-&gt;<span class="pl-smi">img_x</span>*s-&gt;<span class="pl-smi">img_y</span>-<span class="pl-c1">1</span>; i &gt;= <span class="pl-c1">0</span>; i -= <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L5632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5632"></td>
          <td id="LC5632" class="blob-code blob-code-inner js-file-line">         out[i] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L5633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5633"></td>
          <td id="LC5633" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5634"></td>
          <td id="LC5634" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (flip_vertically) {</td>
        </tr>
        <tr>
          <td id="L5635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5635"></td>
          <td id="LC5635" class="blob-code blob-code-inner js-file-line">      stbi_uc t;</td>
        </tr>
        <tr>
          <td id="L5636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5636"></td>
          <td id="LC5636" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_y</span>&gt;&gt;<span class="pl-c1">1</span>; ++j) {</td>
        </tr>
        <tr>
          <td id="L5637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5637"></td>
          <td id="LC5637" class="blob-code blob-code-inner js-file-line">         stbi_uc *p1 = out +      j     *s-&gt;<span class="pl-smi">img_x</span>*target;</td>
        </tr>
        <tr>
          <td id="L5638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5638"></td>
          <td id="LC5638" class="blob-code blob-code-inner js-file-line">         stbi_uc *p2 = out + (s-&gt;<span class="pl-smi">img_y</span>-<span class="pl-c1">1</span>-j)*s-&gt;<span class="pl-smi">img_x</span>*target;</td>
        </tr>
        <tr>
          <td id="L5639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5639"></td>
          <td id="LC5639" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; (<span class="pl-k">int</span>) s-&gt;<span class="pl-smi">img_x</span>*target; ++i) {</td>
        </tr>
        <tr>
          <td id="L5640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5640"></td>
          <td id="LC5640" class="blob-code blob-code-inner js-file-line">            t = p1[i]; p1[i] = p2[i]; p2[i] = t;</td>
        </tr>
        <tr>
          <td id="L5641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5641"></td>
          <td id="LC5641" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5642"></td>
          <td id="LC5642" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5643"></td>
          <td id="LC5643" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5644"></td>
          <td id="LC5644" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5645"></td>
          <td id="LC5645" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != target) {</td>
        </tr>
        <tr>
          <td id="L5646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5646"></td>
          <td id="LC5646" class="blob-code blob-code-inner js-file-line">      out = <span class="pl-c1">stbi__convert_format</span>(out, target, req_comp, s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>);</td>
        </tr>
        <tr>
          <td id="L5647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5647"></td>
          <td id="LC5647" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (out == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> out; <span class="pl-c"><span class="pl-c">//</span> stbi__convert_format frees input on failure</span></td>
        </tr>
        <tr>
          <td id="L5648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5648"></td>
          <td id="LC5648" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5649"></td>
          <td id="LC5649" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5650"></td>
          <td id="LC5650" class="blob-code blob-code-inner js-file-line">   *x = s-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L5651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5651"></td>
          <td id="LC5651" class="blob-code blob-code-inner js-file-line">   *y = s-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L5652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5652"></td>
          <td id="LC5652" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = s-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L5653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5653"></td>
          <td id="LC5653" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L5654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5654"></td>
          <td id="LC5654" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5655"></td>
          <td id="LC5655" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L5656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5656"></td>
          <td id="LC5656" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5657"></td>
          <td id="LC5657" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Targa Truevision - TGA</span></td>
        </tr>
        <tr>
          <td id="L5658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5658"></td>
          <td id="LC5658" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> by Jonathan Dummer</span></td>
        </tr>
        <tr>
          <td id="L5659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5659"></td>
          <td id="LC5659" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_TGA</td>
        </tr>
        <tr>
          <td id="L5660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5660"></td>
          <td id="LC5660" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> returns STBI_rgb or whatever, 0 on error</span></td>
        </tr>
        <tr>
          <td id="L5661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5661"></td>
          <td id="LC5661" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__tga_get_comp</span>(<span class="pl-k">int</span> bits_per_pixel, <span class="pl-k">int</span> is_grey, <span class="pl-k">int</span>* is_rgb16)</td>
        </tr>
        <tr>
          <td id="L5662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5662"></td>
          <td id="LC5662" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5663"></td>
          <td id="LC5663" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> only RGB or RGBA (incl. 16bit) or grey allowed</span></td>
        </tr>
        <tr>
          <td id="L5664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5664"></td>
          <td id="LC5664" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (is_rgb16) *is_rgb16 = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5665"></td>
          <td id="LC5665" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">switch</span>(bits_per_pixel) {</td>
        </tr>
        <tr>
          <td id="L5666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5666"></td>
          <td id="LC5666" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">8</span>:  <span class="pl-k">return</span> STBI_grey;</td>
        </tr>
        <tr>
          <td id="L5667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5667"></td>
          <td id="LC5667" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">16</span>: <span class="pl-k">if</span>(is_grey) <span class="pl-k">return</span> STBI_grey_alpha;</td>
        </tr>
        <tr>
          <td id="L5668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5668"></td>
          <td id="LC5668" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> fallthrough</span></td>
        </tr>
        <tr>
          <td id="L5669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5669"></td>
          <td id="LC5669" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">15</span>: <span class="pl-k">if</span>(is_rgb16) *is_rgb16 = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5670"></td>
          <td id="LC5670" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> STBI_rgb;</td>
        </tr>
        <tr>
          <td id="L5671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5671"></td>
          <td id="LC5671" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">24</span>: <span class="pl-c"><span class="pl-c">//</span> fallthrough</span></td>
        </tr>
        <tr>
          <td id="L5672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5672"></td>
          <td id="LC5672" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-c1">32</span>: <span class="pl-k">return</span> bits_per_pixel/<span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L5673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5673"></td>
          <td id="LC5673" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">default</span>: <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5674"></td>
          <td id="LC5674" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5675"></td>
          <td id="LC5675" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5676"></td>
          <td id="LC5676" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5677"></td>
          <td id="LC5677" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__tga_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L5678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5678"></td>
          <td id="LC5678" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5679"></td>
          <td id="LC5679" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> tga_w, tga_h, tga_comp, tga_image_type, tga_bits_per_pixel, tga_colormap_bpp;</td>
        </tr>
        <tr>
          <td id="L5680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5680"></td>
          <td id="LC5680" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> sz, tga_colormap_type;</td>
        </tr>
        <tr>
          <td id="L5681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5681"></td>
          <td id="LC5681" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stbi__get8</span>(s);                   <span class="pl-c"><span class="pl-c">//</span> discard Offset</span></td>
        </tr>
        <tr>
          <td id="L5682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5682"></td>
          <td id="LC5682" class="blob-code blob-code-inner js-file-line">    tga_colormap_type = <span class="pl-c1">stbi__get8</span>(s); <span class="pl-c"><span class="pl-c">//</span> colormap type</span></td>
        </tr>
        <tr>
          <td id="L5683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5683"></td>
          <td id="LC5683" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>( tga_colormap_type &gt; <span class="pl-c1">1</span> ) {</td>
        </tr>
        <tr>
          <td id="L5684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5684"></td>
          <td id="LC5684" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5685"></td>
          <td id="LC5685" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;      <span class="pl-c"><span class="pl-c">//</span> only RGB or indexed allowed</span></td>
        </tr>
        <tr>
          <td id="L5686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5686"></td>
          <td id="LC5686" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L5687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5687"></td>
          <td id="LC5687" class="blob-code blob-code-inner js-file-line">    tga_image_type = <span class="pl-c1">stbi__get8</span>(s); <span class="pl-c"><span class="pl-c">//</span> image type</span></td>
        </tr>
        <tr>
          <td id="L5688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5688"></td>
          <td id="LC5688" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ( tga_colormap_type == <span class="pl-c1">1</span> ) { <span class="pl-c"><span class="pl-c">//</span> colormapped (paletted) image</span></td>
        </tr>
        <tr>
          <td id="L5689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5689"></td>
          <td id="LC5689" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (tga_image_type != <span class="pl-c1">1</span> &amp;&amp; tga_image_type != <span class="pl-c1">9</span>) {</td>
        </tr>
        <tr>
          <td id="L5690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5690"></td>
          <td id="LC5690" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5691"></td>
          <td id="LC5691" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5692"></td>
          <td id="LC5692" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L5693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5693"></td>
          <td id="LC5693" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">4</span>);       <span class="pl-c"><span class="pl-c">//</span> skip index of first colormap entry and number of entries</span></td>
        </tr>
        <tr>
          <td id="L5694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5694"></td>
          <td id="LC5694" class="blob-code blob-code-inner js-file-line">        sz = <span class="pl-c1">stbi__get8</span>(s);    <span class="pl-c"><span class="pl-c">//</span>   check bits per palette color entry</span></td>
        </tr>
        <tr>
          <td id="L5695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5695"></td>
          <td id="LC5695" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( (sz != <span class="pl-c1">8</span>) &amp;&amp; (sz != <span class="pl-c1">15</span>) &amp;&amp; (sz != <span class="pl-c1">16</span>) &amp;&amp; (sz != <span class="pl-c1">24</span>) &amp;&amp; (sz != <span class="pl-c1">32</span>) ) {</td>
        </tr>
        <tr>
          <td id="L5696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5696"></td>
          <td id="LC5696" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5697"></td>
          <td id="LC5697" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5698"></td>
          <td id="LC5698" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L5699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5699"></td>
          <td id="LC5699" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">4</span>);       <span class="pl-c"><span class="pl-c">//</span> skip image x and y origin</span></td>
        </tr>
        <tr>
          <td id="L5700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5700"></td>
          <td id="LC5700" class="blob-code blob-code-inner js-file-line">        tga_colormap_bpp = sz;</td>
        </tr>
        <tr>
          <td id="L5701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5701"></td>
          <td id="LC5701" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> &quot;normal&quot; image w/o colormap - only RGB or grey allowed, +/- RLE</span></td>
        </tr>
        <tr>
          <td id="L5702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5702"></td>
          <td id="LC5702" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( (tga_image_type != <span class="pl-c1">2</span>) &amp;&amp; (tga_image_type != <span class="pl-c1">3</span>) &amp;&amp; (tga_image_type != <span class="pl-c1">10</span>) &amp;&amp; (tga_image_type != <span class="pl-c1">11</span>) ) {</td>
        </tr>
        <tr>
          <td id="L5703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5703"></td>
          <td id="LC5703" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5704"></td>
          <td id="LC5704" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> only RGB or grey allowed, +/- RLE</span></td>
        </tr>
        <tr>
          <td id="L5705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5705"></td>
          <td id="LC5705" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L5706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5706"></td>
          <td id="LC5706" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">9</span>); <span class="pl-c"><span class="pl-c">//</span> skip colormap specification and image x/y origin</span></td>
        </tr>
        <tr>
          <td id="L5707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5707"></td>
          <td id="LC5707" class="blob-code blob-code-inner js-file-line">        tga_colormap_bpp = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5708"></td>
          <td id="LC5708" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L5709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5709"></td>
          <td id="LC5709" class="blob-code blob-code-inner js-file-line">    tga_w = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5710"></td>
          <td id="LC5710" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>( tga_w &lt; <span class="pl-c1">1</span> ) {</td>
        </tr>
        <tr>
          <td id="L5711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5711"></td>
          <td id="LC5711" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5712"></td>
          <td id="LC5712" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;   <span class="pl-c"><span class="pl-c">//</span> test width</span></td>
        </tr>
        <tr>
          <td id="L5713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5713"></td>
          <td id="LC5713" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L5714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5714"></td>
          <td id="LC5714" class="blob-code blob-code-inner js-file-line">    tga_h = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5715"></td>
          <td id="LC5715" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>( tga_h &lt; <span class="pl-c1">1</span> ) {</td>
        </tr>
        <tr>
          <td id="L5716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5716"></td>
          <td id="LC5716" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5717"></td>
          <td id="LC5717" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">0</span>;   <span class="pl-c"><span class="pl-c">//</span> test height</span></td>
        </tr>
        <tr>
          <td id="L5718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5718"></td>
          <td id="LC5718" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L5719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5719"></td>
          <td id="LC5719" class="blob-code blob-code-inner js-file-line">    tga_bits_per_pixel = <span class="pl-c1">stbi__get8</span>(s); <span class="pl-c"><span class="pl-c">//</span> bits per pixel</span></td>
        </tr>
        <tr>
          <td id="L5720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5720"></td>
          <td id="LC5720" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">stbi__get8</span>(s); <span class="pl-c"><span class="pl-c">//</span> ignore alpha bits</span></td>
        </tr>
        <tr>
          <td id="L5721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5721"></td>
          <td id="LC5721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (tga_colormap_bpp != <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L5722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5722"></td>
          <td id="LC5722" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>((tga_bits_per_pixel != <span class="pl-c1">8</span>) &amp;&amp; (tga_bits_per_pixel != <span class="pl-c1">16</span>)) {</td>
        </tr>
        <tr>
          <td id="L5723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5723"></td>
          <td id="LC5723" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> when using a colormap, tga_bits_per_pixel is the size of the indexes</span></td>
        </tr>
        <tr>
          <td id="L5724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5724"></td>
          <td id="LC5724" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> I don&#39;t think anything but 8 or 16bit indexes makes sense</span></td>
        </tr>
        <tr>
          <td id="L5725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5725"></td>
          <td id="LC5725" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5726"></td>
          <td id="LC5726" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5727"></td>
          <td id="LC5727" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L5728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5728"></td>
          <td id="LC5728" class="blob-code blob-code-inner js-file-line">        tga_comp = <span class="pl-c1">stbi__tga_get_comp</span>(tga_colormap_bpp, <span class="pl-c1">0</span>, <span class="pl-c1">NULL</span>);</td>
        </tr>
        <tr>
          <td id="L5729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5729"></td>
          <td id="LC5729" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5730"></td>
          <td id="LC5730" class="blob-code blob-code-inner js-file-line">        tga_comp = <span class="pl-c1">stbi__tga_get_comp</span>(tga_bits_per_pixel, (tga_image_type == <span class="pl-c1">3</span>) || (tga_image_type == <span class="pl-c1">11</span>), <span class="pl-c1">NULL</span>);</td>
        </tr>
        <tr>
          <td id="L5731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5731"></td>
          <td id="LC5731" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L5732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5732"></td>
          <td id="LC5732" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span>(!tga_comp) {</td>
        </tr>
        <tr>
          <td id="L5733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5733"></td>
          <td id="LC5733" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5734"></td>
          <td id="LC5734" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5735"></td>
          <td id="LC5735" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L5736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5736"></td>
          <td id="LC5736" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (x) *x = tga_w;</td>
        </tr>
        <tr>
          <td id="L5737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5737"></td>
          <td id="LC5737" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (y) *y = tga_h;</td>
        </tr>
        <tr>
          <td id="L5738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5738"></td>
          <td id="LC5738" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (comp) *comp = tga_comp;</td>
        </tr>
        <tr>
          <td id="L5739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5739"></td>
          <td id="LC5739" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">1</span>;                   <span class="pl-c"><span class="pl-c">//</span> seems to have passed everything</span></td>
        </tr>
        <tr>
          <td id="L5740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5740"></td>
          <td id="LC5740" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5741"></td>
          <td id="LC5741" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5742"></td>
          <td id="LC5742" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__tga_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L5743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5743"></td>
          <td id="LC5743" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5744"></td>
          <td id="LC5744" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> res = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5745"></td>
          <td id="LC5745" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> sz, tga_color_type;</td>
        </tr>
        <tr>
          <td id="L5746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5746"></td>
          <td id="LC5746" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get8</span>(s);      <span class="pl-c"><span class="pl-c">//</span>   discard Offset</span></td>
        </tr>
        <tr>
          <td id="L5747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5747"></td>
          <td id="LC5747" class="blob-code blob-code-inner js-file-line">   tga_color_type = <span class="pl-c1">stbi__get8</span>(s);   <span class="pl-c"><span class="pl-c">//</span>   color type</span></td>
        </tr>
        <tr>
          <td id="L5748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5748"></td>
          <td id="LC5748" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( tga_color_type &gt; <span class="pl-c1">1</span> ) <span class="pl-k">goto</span> errorEnd;   <span class="pl-c"><span class="pl-c">//</span>   only RGB or indexed allowed</span></td>
        </tr>
        <tr>
          <td id="L5749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5749"></td>
          <td id="LC5749" class="blob-code blob-code-inner js-file-line">   sz = <span class="pl-c1">stbi__get8</span>(s);   <span class="pl-c"><span class="pl-c">//</span>   image type</span></td>
        </tr>
        <tr>
          <td id="L5750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5750"></td>
          <td id="LC5750" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( tga_color_type == <span class="pl-c1">1</span> ) { <span class="pl-c"><span class="pl-c">//</span> colormapped (paletted) image</span></td>
        </tr>
        <tr>
          <td id="L5751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5751"></td>
          <td id="LC5751" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (sz != <span class="pl-c1">1</span> &amp;&amp; sz != <span class="pl-c1">9</span>) <span class="pl-k">goto</span> errorEnd; <span class="pl-c"><span class="pl-c">//</span> colortype 1 demands image type 1 or 9</span></td>
        </tr>
        <tr>
          <td id="L5752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5752"></td>
          <td id="LC5752" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">4</span>);       <span class="pl-c"><span class="pl-c">//</span> skip index of first colormap entry and number of entries</span></td>
        </tr>
        <tr>
          <td id="L5753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5753"></td>
          <td id="LC5753" class="blob-code blob-code-inner js-file-line">      sz = <span class="pl-c1">stbi__get8</span>(s);    <span class="pl-c"><span class="pl-c">//</span>   check bits per palette color entry</span></td>
        </tr>
        <tr>
          <td id="L5754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5754"></td>
          <td id="LC5754" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ( (sz != <span class="pl-c1">8</span>) &amp;&amp; (sz != <span class="pl-c1">15</span>) &amp;&amp; (sz != <span class="pl-c1">16</span>) &amp;&amp; (sz != <span class="pl-c1">24</span>) &amp;&amp; (sz != <span class="pl-c1">32</span>) ) <span class="pl-k">goto</span> errorEnd;</td>
        </tr>
        <tr>
          <td id="L5755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5755"></td>
          <td id="LC5755" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">4</span>);       <span class="pl-c"><span class="pl-c">//</span> skip image x and y origin</span></td>
        </tr>
        <tr>
          <td id="L5756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5756"></td>
          <td id="LC5756" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> &quot;normal&quot; image w/o colormap</span></td>
        </tr>
        <tr>
          <td id="L5757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5757"></td>
          <td id="LC5757" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ( (sz != <span class="pl-c1">2</span>) &amp;&amp; (sz != <span class="pl-c1">3</span>) &amp;&amp; (sz != <span class="pl-c1">10</span>) &amp;&amp; (sz != <span class="pl-c1">11</span>) ) <span class="pl-k">goto</span> errorEnd; <span class="pl-c"><span class="pl-c">//</span> only RGB or grey allowed, +/- RLE</span></td>
        </tr>
        <tr>
          <td id="L5758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5758"></td>
          <td id="LC5758" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">9</span>); <span class="pl-c"><span class="pl-c">//</span> skip colormap specification and image x/y origin</span></td>
        </tr>
        <tr>
          <td id="L5759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5759"></td>
          <td id="LC5759" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5760"></td>
          <td id="LC5760" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( <span class="pl-c1">stbi__get16le</span>(s) &lt; <span class="pl-c1">1</span> ) <span class="pl-k">goto</span> errorEnd;      <span class="pl-c"><span class="pl-c">//</span>   test width</span></td>
        </tr>
        <tr>
          <td id="L5761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5761"></td>
          <td id="LC5761" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( <span class="pl-c1">stbi__get16le</span>(s) &lt; <span class="pl-c1">1</span> ) <span class="pl-k">goto</span> errorEnd;      <span class="pl-c"><span class="pl-c">//</span>   test height</span></td>
        </tr>
        <tr>
          <td id="L5762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5762"></td>
          <td id="LC5762" class="blob-code blob-code-inner js-file-line">   sz = <span class="pl-c1">stbi__get8</span>(s);   <span class="pl-c"><span class="pl-c">//</span>   bits per pixel</span></td>
        </tr>
        <tr>
          <td id="L5763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5763"></td>
          <td id="LC5763" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( (tga_color_type == <span class="pl-c1">1</span>) &amp;&amp; (sz != <span class="pl-c1">8</span>) &amp;&amp; (sz != <span class="pl-c1">16</span>) ) <span class="pl-k">goto</span> errorEnd; <span class="pl-c"><span class="pl-c">//</span> for colormapped images, bpp is size of an index</span></td>
        </tr>
        <tr>
          <td id="L5764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5764"></td>
          <td id="LC5764" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( (sz != <span class="pl-c1">8</span>) &amp;&amp; (sz != <span class="pl-c1">15</span>) &amp;&amp; (sz != <span class="pl-c1">16</span>) &amp;&amp; (sz != <span class="pl-c1">24</span>) &amp;&amp; (sz != <span class="pl-c1">32</span>) ) <span class="pl-k">goto</span> errorEnd;</td>
        </tr>
        <tr>
          <td id="L5765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5765"></td>
          <td id="LC5765" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5766"></td>
          <td id="LC5766" class="blob-code blob-code-inner js-file-line">   res = <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">//</span> if we got this far, everything&#39;s good and we can return 1 instead of 0</span></td>
        </tr>
        <tr>
          <td id="L5767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5767"></td>
          <td id="LC5767" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5768"></td>
          <td id="LC5768" class="blob-code blob-code-inner js-file-line">errorEnd:</td>
        </tr>
        <tr>
          <td id="L5769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5769"></td>
          <td id="LC5769" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L5770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5770"></td>
          <td id="LC5770" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> res;</td>
        </tr>
        <tr>
          <td id="L5771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5771"></td>
          <td id="LC5771" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5772"></td>
          <td id="LC5772" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5773"></td>
          <td id="LC5773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> read 16bit value and convert to 24bit RGB</span></td>
        </tr>
        <tr>
          <td id="L5774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5774"></td>
          <td id="LC5774" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__tga_read_rgb16</span>(stbi__context *s, stbi_uc* out)</td>
        </tr>
        <tr>
          <td id="L5775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5775"></td>
          <td id="LC5775" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5776"></td>
          <td id="LC5776" class="blob-code blob-code-inner js-file-line">   stbi__uint16 px = (stbi__uint16)<span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5777"></td>
          <td id="LC5777" class="blob-code blob-code-inner js-file-line">   stbi__uint16 fiveBitMask = <span class="pl-c1">31</span>;</td>
        </tr>
        <tr>
          <td id="L5778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5778"></td>
          <td id="LC5778" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> we have 3 channels with 5bits each</span></td>
        </tr>
        <tr>
          <td id="L5779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5779"></td>
          <td id="LC5779" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r = (px &gt;&gt; <span class="pl-c1">10</span>) &amp; fiveBitMask;</td>
        </tr>
        <tr>
          <td id="L5780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5780"></td>
          <td id="LC5780" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> g = (px &gt;&gt; <span class="pl-c1">5</span>) &amp; fiveBitMask;</td>
        </tr>
        <tr>
          <td id="L5781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5781"></td>
          <td id="LC5781" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> b = px &amp; fiveBitMask;</td>
        </tr>
        <tr>
          <td id="L5782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5782"></td>
          <td id="LC5782" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Note that this saves the data in RGB(A) order, so it doesn&#39;t need to be swapped later</span></td>
        </tr>
        <tr>
          <td id="L5783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5783"></td>
          <td id="LC5783" class="blob-code blob-code-inner js-file-line">   out[<span class="pl-c1">0</span>] = (stbi_uc)((r * <span class="pl-c1">255</span>)/<span class="pl-c1">31</span>);</td>
        </tr>
        <tr>
          <td id="L5784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5784"></td>
          <td id="LC5784" class="blob-code blob-code-inner js-file-line">   out[<span class="pl-c1">1</span>] = (stbi_uc)((g * <span class="pl-c1">255</span>)/<span class="pl-c1">31</span>);</td>
        </tr>
        <tr>
          <td id="L5785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5785"></td>
          <td id="LC5785" class="blob-code blob-code-inner js-file-line">   out[<span class="pl-c1">2</span>] = (stbi_uc)((b * <span class="pl-c1">255</span>)/<span class="pl-c1">31</span>);</td>
        </tr>
        <tr>
          <td id="L5786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5786"></td>
          <td id="LC5786" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5787"></td>
          <td id="LC5787" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> some people claim that the most significant bit might be used for alpha</span></td>
        </tr>
        <tr>
          <td id="L5788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5788"></td>
          <td id="LC5788" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> (possibly if an alpha-bit is set in the &quot;image descriptor byte&quot;)</span></td>
        </tr>
        <tr>
          <td id="L5789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5789"></td>
          <td id="LC5789" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> but that only made 16bit test images completely translucent..</span></td>
        </tr>
        <tr>
          <td id="L5790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5790"></td>
          <td id="LC5790" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> so let&#39;s treat all 15 and 16bit TGAs as RGB with no alpha.</span></td>
        </tr>
        <tr>
          <td id="L5791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5791"></td>
          <td id="LC5791" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5792"></td>
          <td id="LC5792" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5793"></td>
          <td id="LC5793" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__tga_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L5794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5794"></td>
          <td id="LC5794" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L5795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5795"></td>
          <td id="LC5795" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   read in the TGA header stuff</span></td>
        </tr>
        <tr>
          <td id="L5796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5796"></td>
          <td id="LC5796" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_offset = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5797"></td>
          <td id="LC5797" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_indexed = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5798"></td>
          <td id="LC5798" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_image_type = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5799"></td>
          <td id="LC5799" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_is_RLE = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5800"></td>
          <td id="LC5800" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_palette_start = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5801"></td>
          <td id="LC5801" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_palette_len = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5802"></td>
          <td id="LC5802" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_palette_bits = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5803"></td>
          <td id="LC5803" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_x_origin = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5804"></td>
          <td id="LC5804" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_y_origin = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5805"></td>
          <td id="LC5805" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_width = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5806"></td>
          <td id="LC5806" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_height = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5807"></td>
          <td id="LC5807" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_bits_per_pixel = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5808"></td>
          <td id="LC5808" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_comp, tga_rgb16=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5809"></td>
          <td id="LC5809" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> tga_inverted = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5810"></td>
          <td id="LC5810" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> int tga_alpha_bits = tga_inverted &amp; 15; // the 4 lowest bits - unused (useless?)</span></td>
        </tr>
        <tr>
          <td id="L5811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5811"></td>
          <td id="LC5811" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   image data</span></td>
        </tr>
        <tr>
          <td id="L5812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5812"></td>
          <td id="LC5812" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *tga_data;</td>
        </tr>
        <tr>
          <td id="L5813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5813"></td>
          <td id="LC5813" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *tga_palette = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L5814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5814"></td>
          <td id="LC5814" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i, j;</td>
        </tr>
        <tr>
          <td id="L5815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5815"></td>
          <td id="LC5815" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> raw_data[<span class="pl-c1">4</span>] = {<span class="pl-c1">0</span>};</td>
        </tr>
        <tr>
          <td id="L5816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5816"></td>
          <td id="LC5816" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> RLE_count = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5817"></td>
          <td id="LC5817" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> RLE_repeating = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5818"></td>
          <td id="LC5818" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> read_next_pixel = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5819"></td>
          <td id="LC5819" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L5820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5820"></td>
          <td id="LC5820" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(tga_x_origin); <span class="pl-c"><span class="pl-c">//</span> @TODO</span></td>
        </tr>
        <tr>
          <td id="L5821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5821"></td>
          <td id="LC5821" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(tga_y_origin); <span class="pl-c"><span class="pl-c">//</span> @TODO</span></td>
        </tr>
        <tr>
          <td id="L5822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5822"></td>
          <td id="LC5822" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5823"></td>
          <td id="LC5823" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (tga_height &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5824"></td>
          <td id="LC5824" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (tga_width &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5825"></td>
          <td id="LC5825" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5826"></td>
          <td id="LC5826" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   do a tiny bit of precessing</span></td>
        </tr>
        <tr>
          <td id="L5827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5827"></td>
          <td id="LC5827" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( tga_image_type &gt;= <span class="pl-c1">8</span> )</td>
        </tr>
        <tr>
          <td id="L5828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5828"></td>
          <td id="LC5828" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L5829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5829"></td>
          <td id="LC5829" class="blob-code blob-code-inner js-file-line">      tga_image_type -= <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L5830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5830"></td>
          <td id="LC5830" class="blob-code blob-code-inner js-file-line">      tga_is_RLE = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5831"></td>
          <td id="LC5831" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5832"></td>
          <td id="LC5832" class="blob-code blob-code-inner js-file-line">   tga_inverted = <span class="pl-c1">1</span> - ((tga_inverted &gt;&gt; <span class="pl-c1">5</span>) &amp; <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L5833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5833"></td>
          <td id="LC5833" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5834"></td>
          <td id="LC5834" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   If I&#39;m paletted, then I&#39;ll use the number of bits from the palette</span></td>
        </tr>
        <tr>
          <td id="L5835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5835"></td>
          <td id="LC5835" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( tga_indexed ) tga_comp = <span class="pl-c1">stbi__tga_get_comp</span>(tga_palette_bits, <span class="pl-c1">0</span>, &amp;tga_rgb16);</td>
        </tr>
        <tr>
          <td id="L5836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5836"></td>
          <td id="LC5836" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span> tga_comp = <span class="pl-c1">stbi__tga_get_comp</span>(tga_bits_per_pixel, (tga_image_type == <span class="pl-c1">3</span>), &amp;tga_rgb16);</td>
        </tr>
        <tr>
          <td id="L5837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5837"></td>
          <td id="LC5837" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5838"></td>
          <td id="LC5838" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span>(!tga_comp) <span class="pl-c"><span class="pl-c">//</span> shouldn&#39;t really happen, stbi__tga_test() should have ensured basic consistency</span></td>
        </tr>
        <tr>
          <td id="L5839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5839"></td>
          <td id="LC5839" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad format<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t find out TGA pixelformat<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5840"></td>
          <td id="LC5840" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5841"></td>
          <td id="LC5841" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   tga info</span></td>
        </tr>
        <tr>
          <td id="L5842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5842"></td>
          <td id="LC5842" class="blob-code blob-code-inner js-file-line">   *x = tga_width;</td>
        </tr>
        <tr>
          <td id="L5843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5843"></td>
          <td id="LC5843" class="blob-code blob-code-inner js-file-line">   *y = tga_height;</td>
        </tr>
        <tr>
          <td id="L5844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5844"></td>
          <td id="LC5844" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = tga_comp;</td>
        </tr>
        <tr>
          <td id="L5845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5845"></td>
          <td id="LC5845" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5846"></td>
          <td id="LC5846" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(tga_width, tga_height, tga_comp, <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L5847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5847"></td>
          <td id="LC5847" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt TGA<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5848"></td>
          <td id="LC5848" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5849"></td>
          <td id="LC5849" class="blob-code blob-code-inner js-file-line">   tga_data = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>*)<span class="pl-c1">stbi__malloc_mad3</span>(tga_width, tga_height, tga_comp, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L5850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5850"></td>
          <td id="LC5850" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!tga_data) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5851"></td>
          <td id="LC5851" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5852"></td>
          <td id="LC5852" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> skip to the data&#39;s starting position (offset usually = 0)</span></td>
        </tr>
        <tr>
          <td id="L5853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5853"></td>
          <td id="LC5853" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, tga_offset );</td>
        </tr>
        <tr>
          <td id="L5854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5854"></td>
          <td id="LC5854" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5855"></td>
          <td id="LC5855" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( !tga_indexed &amp;&amp; !tga_is_RLE &amp;&amp; !tga_rgb16 ) {</td>
        </tr>
        <tr>
          <td id="L5856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5856"></td>
          <td id="LC5856" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; tga_height; ++i) {</td>
        </tr>
        <tr>
          <td id="L5857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5857"></td>
          <td id="LC5857" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">int</span> row = tga_inverted ? tga_height -i - <span class="pl-c1">1</span> : i;</td>
        </tr>
        <tr>
          <td id="L5858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5858"></td>
          <td id="LC5858" class="blob-code blob-code-inner js-file-line">         stbi_uc *tga_row = tga_data + row*tga_width*tga_comp;</td>
        </tr>
        <tr>
          <td id="L5859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5859"></td>
          <td id="LC5859" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">stbi__getn</span>(s, tga_row, tga_width * tga_comp);</td>
        </tr>
        <tr>
          <td id="L5860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5860"></td>
          <td id="LC5860" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5861"></td>
          <td id="LC5861" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span>  {</td>
        </tr>
        <tr>
          <td id="L5862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5862"></td>
          <td id="LC5862" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>   do I need to load a palette?</span></td>
        </tr>
        <tr>
          <td id="L5863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5863"></td>
          <td id="LC5863" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ( tga_indexed)</td>
        </tr>
        <tr>
          <td id="L5864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5864"></td>
          <td id="LC5864" class="blob-code blob-code-inner js-file-line">      {</td>
        </tr>
        <tr>
          <td id="L5865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5865"></td>
          <td id="LC5865" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (tga_palette_len == <span class="pl-c1">0</span>) {  <span class="pl-c"><span class="pl-c">/*</span> you have to have at least one entry! <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L5866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5866"></td>
          <td id="LC5866" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_FREE</span>(tga_data);</td>
        </tr>
        <tr>
          <td id="L5867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5867"></td>
          <td id="LC5867" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad palette<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt TGA<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5868"></td>
          <td id="LC5868" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5869"></td>
          <td id="LC5869" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5870"></td>
          <td id="LC5870" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>   any data to skip? (offset usually = 0)</span></td>
        </tr>
        <tr>
          <td id="L5871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5871"></td>
          <td id="LC5871" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">stbi__skip</span>(s, tga_palette_start );</td>
        </tr>
        <tr>
          <td id="L5872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5872"></td>
          <td id="LC5872" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>   load the palette</span></td>
        </tr>
        <tr>
          <td id="L5873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5873"></td>
          <td id="LC5873" class="blob-code blob-code-inner js-file-line">         tga_palette = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>*)<span class="pl-c1">stbi__malloc_mad2</span>(tga_palette_len, tga_comp, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L5874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5874"></td>
          <td id="LC5874" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (!tga_palette) {</td>
        </tr>
        <tr>
          <td id="L5875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5875"></td>
          <td id="LC5875" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_FREE</span>(tga_data);</td>
        </tr>
        <tr>
          <td id="L5876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5876"></td>
          <td id="LC5876" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5877"></td>
          <td id="LC5877" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5878"></td>
          <td id="LC5878" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (tga_rgb16) {</td>
        </tr>
        <tr>
          <td id="L5879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5879"></td>
          <td id="LC5879" class="blob-code blob-code-inner js-file-line">            stbi_uc *pal_entry = tga_palette;</td>
        </tr>
        <tr>
          <td id="L5880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5880"></td>
          <td id="LC5880" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_ASSERT</span>(tga_comp == STBI_rgb);</td>
        </tr>
        <tr>
          <td id="L5881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5881"></td>
          <td id="LC5881" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; tga_palette_len; ++i) {</td>
        </tr>
        <tr>
          <td id="L5882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5882"></td>
          <td id="LC5882" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__tga_read_rgb16</span>(s, pal_entry);</td>
        </tr>
        <tr>
          <td id="L5883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5883"></td>
          <td id="LC5883" class="blob-code blob-code-inner js-file-line">               pal_entry += tga_comp;</td>
        </tr>
        <tr>
          <td id="L5884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5884"></td>
          <td id="LC5884" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5885"></td>
          <td id="LC5885" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (!<span class="pl-c1">stbi__getn</span>(s, tga_palette, tga_palette_len * tga_comp)) {</td>
        </tr>
        <tr>
          <td id="L5886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5886"></td>
          <td id="LC5886" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_FREE</span>(tga_data);</td>
        </tr>
        <tr>
          <td id="L5887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5887"></td>
          <td id="LC5887" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_FREE</span>(tga_palette);</td>
        </tr>
        <tr>
          <td id="L5888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5888"></td>
          <td id="LC5888" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad palette<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt TGA<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L5889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5889"></td>
          <td id="LC5889" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5890"></td>
          <td id="LC5890" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5891"></td>
          <td id="LC5891" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>   load the data</span></td>
        </tr>
        <tr>
          <td id="L5892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5892"></td>
          <td id="LC5892" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; tga_width * tga_height; ++i)</td>
        </tr>
        <tr>
          <td id="L5893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5893"></td>
          <td id="LC5893" class="blob-code blob-code-inner js-file-line">      {</td>
        </tr>
        <tr>
          <td id="L5894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5894"></td>
          <td id="LC5894" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>   if I&#39;m in RLE mode, do I need to get a RLE stbi__pngchunk?</span></td>
        </tr>
        <tr>
          <td id="L5895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5895"></td>
          <td id="LC5895" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> ( tga_is_RLE )</td>
        </tr>
        <tr>
          <td id="L5896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5896"></td>
          <td id="LC5896" class="blob-code blob-code-inner js-file-line">         {</td>
        </tr>
        <tr>
          <td id="L5897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5897"></td>
          <td id="LC5897" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( RLE_count == <span class="pl-c1">0</span> )</td>
        </tr>
        <tr>
          <td id="L5898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5898"></td>
          <td id="LC5898" class="blob-code blob-code-inner js-file-line">            {</td>
        </tr>
        <tr>
          <td id="L5899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5899"></td>
          <td id="LC5899" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span>   yep, get the next byte as a RLE command</span></td>
        </tr>
        <tr>
          <td id="L5900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5900"></td>
          <td id="LC5900" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> RLE_cmd = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5901"></td>
          <td id="LC5901" class="blob-code blob-code-inner js-file-line">               RLE_count = <span class="pl-c1">1</span> + (RLE_cmd &amp; <span class="pl-c1">127</span>);</td>
        </tr>
        <tr>
          <td id="L5902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5902"></td>
          <td id="LC5902" class="blob-code blob-code-inner js-file-line">               RLE_repeating = RLE_cmd &gt;&gt; <span class="pl-c1">7</span>;</td>
        </tr>
        <tr>
          <td id="L5903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5903"></td>
          <td id="LC5903" class="blob-code blob-code-inner js-file-line">               read_next_pixel = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5904"></td>
          <td id="LC5904" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> ( !RLE_repeating )</td>
        </tr>
        <tr>
          <td id="L5905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5905"></td>
          <td id="LC5905" class="blob-code blob-code-inner js-file-line">            {</td>
        </tr>
        <tr>
          <td id="L5906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5906"></td>
          <td id="LC5906" class="blob-code blob-code-inner js-file-line">               read_next_pixel = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5907"></td>
          <td id="LC5907" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5908"></td>
          <td id="LC5908" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L5909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5909"></td>
          <td id="LC5909" class="blob-code blob-code-inner js-file-line">         {</td>
        </tr>
        <tr>
          <td id="L5910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5910"></td>
          <td id="LC5910" class="blob-code blob-code-inner js-file-line">            read_next_pixel = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L5911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5911"></td>
          <td id="LC5911" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5912"></td>
          <td id="LC5912" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>   OK, if I need to read a pixel, do it now</span></td>
        </tr>
        <tr>
          <td id="L5913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5913"></td>
          <td id="LC5913" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> ( read_next_pixel )</td>
        </tr>
        <tr>
          <td id="L5914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5914"></td>
          <td id="LC5914" class="blob-code blob-code-inner js-file-line">         {</td>
        </tr>
        <tr>
          <td id="L5915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5915"></td>
          <td id="LC5915" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>   load however much data we did have</span></td>
        </tr>
        <tr>
          <td id="L5916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5916"></td>
          <td id="LC5916" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( tga_indexed )</td>
        </tr>
        <tr>
          <td id="L5917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5917"></td>
          <td id="LC5917" class="blob-code blob-code-inner js-file-line">            {</td>
        </tr>
        <tr>
          <td id="L5918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5918"></td>
          <td id="LC5918" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> read in index, then perform the lookup</span></td>
        </tr>
        <tr>
          <td id="L5919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5919"></td>
          <td id="LC5919" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> pal_idx = (tga_bits_per_pixel == <span class="pl-c1">8</span>) ? <span class="pl-c1">stbi__get8</span>(s) : <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L5920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5920"></td>
          <td id="LC5920" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> ( pal_idx &gt;= tga_palette_len ) {</td>
        </tr>
        <tr>
          <td id="L5921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5921"></td>
          <td id="LC5921" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> invalid index</span></td>
        </tr>
        <tr>
          <td id="L5922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5922"></td>
          <td id="LC5922" class="blob-code blob-code-inner js-file-line">                  pal_idx = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5923"></td>
          <td id="LC5923" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5924"></td>
          <td id="LC5924" class="blob-code blob-code-inner js-file-line">               pal_idx *= tga_comp;</td>
        </tr>
        <tr>
          <td id="L5925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5925"></td>
          <td id="LC5925" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (j = <span class="pl-c1">0</span>; j &lt; tga_comp; ++j) {</td>
        </tr>
        <tr>
          <td id="L5926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5926"></td>
          <td id="LC5926" class="blob-code blob-code-inner js-file-line">                  raw_data[j] = tga_palette[pal_idx+j];</td>
        </tr>
        <tr>
          <td id="L5927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5927"></td>
          <td id="LC5927" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5928"></td>
          <td id="LC5928" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span>(tga_rgb16) {</td>
        </tr>
        <tr>
          <td id="L5929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5929"></td>
          <td id="LC5929" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_ASSERT</span>(tga_comp == STBI_rgb);</td>
        </tr>
        <tr>
          <td id="L5930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5930"></td>
          <td id="LC5930" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__tga_read_rgb16</span>(s, raw_data);</td>
        </tr>
        <tr>
          <td id="L5931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5931"></td>
          <td id="LC5931" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L5932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5932"></td>
          <td id="LC5932" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span>   read in the data raw</span></td>
        </tr>
        <tr>
          <td id="L5933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5933"></td>
          <td id="LC5933" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (j = <span class="pl-c1">0</span>; j &lt; tga_comp; ++j) {</td>
        </tr>
        <tr>
          <td id="L5934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5934"></td>
          <td id="LC5934" class="blob-code blob-code-inner js-file-line">                  raw_data[j] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L5935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5935"></td>
          <td id="LC5935" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L5936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5936"></td>
          <td id="LC5936" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5937"></td>
          <td id="LC5937" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span>   clear the reading flag for the next pixel</span></td>
        </tr>
        <tr>
          <td id="L5938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5938"></td>
          <td id="LC5938" class="blob-code blob-code-inner js-file-line">            read_next_pixel = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5939"></td>
          <td id="LC5939" class="blob-code blob-code-inner js-file-line">         } <span class="pl-c"><span class="pl-c">//</span> end of reading a pixel</span></td>
        </tr>
        <tr>
          <td id="L5940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5940"></td>
          <td id="LC5940" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5941"></td>
          <td id="LC5941" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> copy data</span></td>
        </tr>
        <tr>
          <td id="L5942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5942"></td>
          <td id="LC5942" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j = <span class="pl-c1">0</span>; j &lt; tga_comp; ++j)</td>
        </tr>
        <tr>
          <td id="L5943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5943"></td>
          <td id="LC5943" class="blob-code blob-code-inner js-file-line">           tga_data[i*tga_comp+j] = raw_data[j];</td>
        </tr>
        <tr>
          <td id="L5944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5944"></td>
          <td id="LC5944" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5945"></td>
          <td id="LC5945" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span>   in case we&#39;re in RLE mode, keep counting down</span></td>
        </tr>
        <tr>
          <td id="L5946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5946"></td>
          <td id="LC5946" class="blob-code blob-code-inner js-file-line">         --RLE_count;</td>
        </tr>
        <tr>
          <td id="L5947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5947"></td>
          <td id="LC5947" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5948"></td>
          <td id="LC5948" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>   do I need to invert the image?</span></td>
        </tr>
        <tr>
          <td id="L5949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5949"></td>
          <td id="LC5949" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ( tga_inverted )</td>
        </tr>
        <tr>
          <td id="L5950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5950"></td>
          <td id="LC5950" class="blob-code blob-code-inner js-file-line">      {</td>
        </tr>
        <tr>
          <td id="L5951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5951"></td>
          <td id="LC5951" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (j = <span class="pl-c1">0</span>; j*<span class="pl-c1">2</span> &lt; tga_height; ++j)</td>
        </tr>
        <tr>
          <td id="L5952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5952"></td>
          <td id="LC5952" class="blob-code blob-code-inner js-file-line">         {</td>
        </tr>
        <tr>
          <td id="L5953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5953"></td>
          <td id="LC5953" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> index1 = j * tga_width * tga_comp;</td>
        </tr>
        <tr>
          <td id="L5954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5954"></td>
          <td id="LC5954" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> index2 = (tga_height - <span class="pl-c1">1</span> - j) * tga_width * tga_comp;</td>
        </tr>
        <tr>
          <td id="L5955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5955"></td>
          <td id="LC5955" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i = tga_width * tga_comp; i &gt; <span class="pl-c1">0</span>; --i)</td>
        </tr>
        <tr>
          <td id="L5956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5956"></td>
          <td id="LC5956" class="blob-code blob-code-inner js-file-line">            {</td>
        </tr>
        <tr>
          <td id="L5957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5957"></td>
          <td id="LC5957" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">unsigned</span> <span class="pl-k">char</span> temp = tga_data[index1];</td>
        </tr>
        <tr>
          <td id="L5958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5958"></td>
          <td id="LC5958" class="blob-code blob-code-inner js-file-line">               tga_data[index1] = tga_data[index2];</td>
        </tr>
        <tr>
          <td id="L5959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5959"></td>
          <td id="LC5959" class="blob-code blob-code-inner js-file-line">               tga_data[index2] = temp;</td>
        </tr>
        <tr>
          <td id="L5960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5960"></td>
          <td id="LC5960" class="blob-code blob-code-inner js-file-line">               ++index1;</td>
        </tr>
        <tr>
          <td id="L5961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5961"></td>
          <td id="LC5961" class="blob-code blob-code-inner js-file-line">               ++index2;</td>
        </tr>
        <tr>
          <td id="L5962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5962"></td>
          <td id="LC5962" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L5963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5963"></td>
          <td id="LC5963" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L5964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5964"></td>
          <td id="LC5964" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5965"></td>
          <td id="LC5965" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>   clear my palette, if I had one</span></td>
        </tr>
        <tr>
          <td id="L5966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5966"></td>
          <td id="LC5966" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ( tga_palette != <span class="pl-c1">NULL</span> )</td>
        </tr>
        <tr>
          <td id="L5967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5967"></td>
          <td id="LC5967" class="blob-code blob-code-inner js-file-line">      {</td>
        </tr>
        <tr>
          <td id="L5968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5968"></td>
          <td id="LC5968" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_FREE</span>( tga_palette );</td>
        </tr>
        <tr>
          <td id="L5969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5969"></td>
          <td id="LC5969" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5970"></td>
          <td id="LC5970" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5971"></td>
          <td id="LC5971" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5972"></td>
          <td id="LC5972" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> swap RGB - if the source data was RGB16, it already is in the right order</span></td>
        </tr>
        <tr>
          <td id="L5973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5973"></td>
          <td id="LC5973" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (tga_comp &gt;= <span class="pl-c1">3</span> &amp;&amp; !tga_rgb16)</td>
        </tr>
        <tr>
          <td id="L5974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5974"></td>
          <td id="LC5974" class="blob-code blob-code-inner js-file-line">   {</td>
        </tr>
        <tr>
          <td id="L5975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5975"></td>
          <td id="LC5975" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">unsigned</span> <span class="pl-k">char</span>* tga_pixel = tga_data;</td>
        </tr>
        <tr>
          <td id="L5976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5976"></td>
          <td id="LC5976" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; tga_width * tga_height; ++i)</td>
        </tr>
        <tr>
          <td id="L5977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5977"></td>
          <td id="LC5977" class="blob-code blob-code-inner js-file-line">      {</td>
        </tr>
        <tr>
          <td id="L5978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5978"></td>
          <td id="LC5978" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">unsigned</span> <span class="pl-k">char</span> temp = tga_pixel[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L5979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5979"></td>
          <td id="LC5979" class="blob-code blob-code-inner js-file-line">         tga_pixel[<span class="pl-c1">0</span>] = tga_pixel[<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L5980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5980"></td>
          <td id="LC5980" class="blob-code blob-code-inner js-file-line">         tga_pixel[<span class="pl-c1">2</span>] = temp;</td>
        </tr>
        <tr>
          <td id="L5981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5981"></td>
          <td id="LC5981" class="blob-code blob-code-inner js-file-line">         tga_pixel += tga_comp;</td>
        </tr>
        <tr>
          <td id="L5982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5982"></td>
          <td id="LC5982" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L5983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5983"></td>
          <td id="LC5983" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L5984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5984"></td>
          <td id="LC5984" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5985"></td>
          <td id="LC5985" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> convert to target component count</span></td>
        </tr>
        <tr>
          <td id="L5986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5986"></td>
          <td id="LC5986" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != tga_comp)</td>
        </tr>
        <tr>
          <td id="L5987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5987"></td>
          <td id="LC5987" class="blob-code blob-code-inner js-file-line">      tga_data = <span class="pl-c1">stbi__convert_format</span>(tga_data, tga_comp, req_comp, tga_width, tga_height);</td>
        </tr>
        <tr>
          <td id="L5988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5988"></td>
          <td id="LC5988" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5989"></td>
          <td id="LC5989" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   the things I do to get rid of an error message, and yet keep</span></td>
        </tr>
        <tr>
          <td id="L5990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5990"></td>
          <td id="LC5990" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   Microsoft&#39;s C compilers happy... [8^(</span></td>
        </tr>
        <tr>
          <td id="L5991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5991"></td>
          <td id="LC5991" class="blob-code blob-code-inner js-file-line">   tga_palette_start = tga_palette_len = tga_palette_bits =</td>
        </tr>
        <tr>
          <td id="L5992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5992"></td>
          <td id="LC5992" class="blob-code blob-code-inner js-file-line">         tga_x_origin = tga_y_origin = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L5993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5993"></td>
          <td id="LC5993" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(tga_palette_start);</td>
        </tr>
        <tr>
          <td id="L5994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5994"></td>
          <td id="LC5994" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   OK, done</span></td>
        </tr>
        <tr>
          <td id="L5995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5995"></td>
          <td id="LC5995" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> tga_data;</td>
        </tr>
        <tr>
          <td id="L5996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5996"></td>
          <td id="LC5996" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L5997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5997"></td>
          <td id="LC5997" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L5998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5998"></td>
          <td id="LC5998" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L5999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="5999"></td>
          <td id="LC5999" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *************************************************************************************************</span></td>
        </tr>
        <tr>
          <td id="L6000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6000"></td>
          <td id="LC6000" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Photoshop PSD loader -- PD by Thatcher Ulrich, integration by Nicolas Schulz, tweaked by STB</span></td>
        </tr>
        <tr>
          <td id="L6001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6001"></td>
          <td id="LC6001" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6002"></td>
          <td id="LC6002" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PSD</td>
        </tr>
        <tr>
          <td id="L6003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6003"></td>
          <td id="LC6003" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__psd_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L6004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6004"></td>
          <td id="LC6004" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6005"></td>
          <td id="LC6005" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r = (<span class="pl-c1">stbi__get32be</span>(s) == <span class="pl-c1">0x38425053</span>);</td>
        </tr>
        <tr>
          <td id="L6006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6006"></td>
          <td id="LC6006" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L6007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6007"></td>
          <td id="LC6007" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L6008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6008"></td>
          <td id="LC6008" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6009"></td>
          <td id="LC6009" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6010"></td>
          <td id="LC6010" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__psd_decode_rle</span>(stbi__context *s, stbi_uc *p, <span class="pl-k">int</span> pixelCount)</td>
        </tr>
        <tr>
          <td id="L6011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6011"></td>
          <td id="LC6011" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6012"></td>
          <td id="LC6012" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> count, nleft, len;</td>
        </tr>
        <tr>
          <td id="L6013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6013"></td>
          <td id="LC6013" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6014"></td>
          <td id="LC6014" class="blob-code blob-code-inner js-file-line">   count = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6015"></td>
          <td id="LC6015" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> ((nleft = pixelCount - count) &gt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6016"></td>
          <td id="LC6016" class="blob-code blob-code-inner js-file-line">      len = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6017"></td>
          <td id="LC6017" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (len == <span class="pl-c1">128</span>) {</td>
        </tr>
        <tr>
          <td id="L6018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6018"></td>
          <td id="LC6018" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> No-op.</span></td>
        </tr>
        <tr>
          <td id="L6019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6019"></td>
          <td id="LC6019" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (len &lt; <span class="pl-c1">128</span>) {</td>
        </tr>
        <tr>
          <td id="L6020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6020"></td>
          <td id="LC6020" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> Copy next len+1 bytes literally.</span></td>
        </tr>
        <tr>
          <td id="L6021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6021"></td>
          <td id="LC6021" class="blob-code blob-code-inner js-file-line">         len++;</td>
        </tr>
        <tr>
          <td id="L6022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6022"></td>
          <td id="LC6022" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (len &gt; nleft) <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> corrupt data</span></td>
        </tr>
        <tr>
          <td id="L6023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6023"></td>
          <td id="LC6023" class="blob-code blob-code-inner js-file-line">         count += len;</td>
        </tr>
        <tr>
          <td id="L6024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6024"></td>
          <td id="LC6024" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (len) {</td>
        </tr>
        <tr>
          <td id="L6025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6025"></td>
          <td id="LC6025" class="blob-code blob-code-inner js-file-line">            *p = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6026"></td>
          <td id="LC6026" class="blob-code blob-code-inner js-file-line">            p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6027"></td>
          <td id="LC6027" class="blob-code blob-code-inner js-file-line">            len--;</td>
        </tr>
        <tr>
          <td id="L6028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6028"></td>
          <td id="LC6028" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6029"></td>
          <td id="LC6029" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (len &gt; <span class="pl-c1">128</span>) {</td>
        </tr>
        <tr>
          <td id="L6030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6030"></td>
          <td id="LC6030" class="blob-code blob-code-inner js-file-line">         stbi_uc   val;</td>
        </tr>
        <tr>
          <td id="L6031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6031"></td>
          <td id="LC6031" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> Next -len+1 bytes in the dest are replicated from next source byte.</span></td>
        </tr>
        <tr>
          <td id="L6032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6032"></td>
          <td id="LC6032" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> (Interpret len as a negative 8-bit int.)</span></td>
        </tr>
        <tr>
          <td id="L6033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6033"></td>
          <td id="LC6033" class="blob-code blob-code-inner js-file-line">         len = <span class="pl-c1">257</span> - len;</td>
        </tr>
        <tr>
          <td id="L6034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6034"></td>
          <td id="LC6034" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (len &gt; nleft) <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> corrupt data</span></td>
        </tr>
        <tr>
          <td id="L6035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6035"></td>
          <td id="LC6035" class="blob-code blob-code-inner js-file-line">         val = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6036"></td>
          <td id="LC6036" class="blob-code blob-code-inner js-file-line">         count += len;</td>
        </tr>
        <tr>
          <td id="L6037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6037"></td>
          <td id="LC6037" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (len) {</td>
        </tr>
        <tr>
          <td id="L6038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6038"></td>
          <td id="LC6038" class="blob-code blob-code-inner js-file-line">            *p = val;</td>
        </tr>
        <tr>
          <td id="L6039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6039"></td>
          <td id="LC6039" class="blob-code blob-code-inner js-file-line">            p += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6040"></td>
          <td id="LC6040" class="blob-code blob-code-inner js-file-line">            len--;</td>
        </tr>
        <tr>
          <td id="L6041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6041"></td>
          <td id="LC6041" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6042"></td>
          <td id="LC6042" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6043"></td>
          <td id="LC6043" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6044"></td>
          <td id="LC6044" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6045"></td>
          <td id="LC6045" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6046"></td>
          <td id="LC6046" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6047"></td>
          <td id="LC6047" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6048"></td>
          <td id="LC6048" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__psd_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri, <span class="pl-k">int</span> bpc)</td>
        </tr>
        <tr>
          <td id="L6049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6049"></td>
          <td id="LC6049" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6050"></td>
          <td id="LC6050" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> pixelCount;</td>
        </tr>
        <tr>
          <td id="L6051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6051"></td>
          <td id="LC6051" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> channelCount, compression;</td>
        </tr>
        <tr>
          <td id="L6052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6052"></td>
          <td id="LC6052" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> channel, i;</td>
        </tr>
        <tr>
          <td id="L6053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6053"></td>
          <td id="LC6053" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> bitdepth;</td>
        </tr>
        <tr>
          <td id="L6054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6054"></td>
          <td id="LC6054" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> w,h;</td>
        </tr>
        <tr>
          <td id="L6055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6055"></td>
          <td id="LC6055" class="blob-code blob-code-inner js-file-line">   stbi_uc *out;</td>
        </tr>
        <tr>
          <td id="L6056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6056"></td>
          <td id="LC6056" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L6057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6057"></td>
          <td id="LC6057" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6058"></td>
          <td id="LC6058" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Check identifier</span></td>
        </tr>
        <tr>
          <td id="L6059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6059"></td>
          <td id="LC6059" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get32be</span>(s) != <span class="pl-c1">0x38425053</span>)   <span class="pl-c"><span class="pl-c">//</span> &quot;8BPS&quot;</span></td>
        </tr>
        <tr>
          <td id="L6060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6060"></td>
          <td id="LC6060" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not PSD<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PSD image<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6061"></td>
          <td id="LC6061" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6062"></td>
          <td id="LC6062" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Check file type version.</span></td>
        </tr>
        <tr>
          <td id="L6063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6063"></td>
          <td id="LC6063" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16be</span>(s) != <span class="pl-c1">1</span>)</td>
        </tr>
        <tr>
          <td id="L6064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6064"></td>
          <td id="LC6064" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wrong version<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported version of PSD image<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6065"></td>
          <td id="LC6065" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6066"></td>
          <td id="LC6066" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Skip 6 reserved bytes.</span></td>
        </tr>
        <tr>
          <td id="L6067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6067"></td>
          <td id="LC6067" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">6</span> );</td>
        </tr>
        <tr>
          <td id="L6068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6068"></td>
          <td id="LC6068" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6069"></td>
          <td id="LC6069" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Read the number of channels (R, G, B, A, etc).</span></td>
        </tr>
        <tr>
          <td id="L6070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6070"></td>
          <td id="LC6070" class="blob-code blob-code-inner js-file-line">   channelCount = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6071"></td>
          <td id="LC6071" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (channelCount &lt; <span class="pl-c1">0</span> || channelCount &gt; <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L6072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6072"></td>
          <td id="LC6072" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wrong channel count<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported number of channels in PSD image<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6073"></td>
          <td id="LC6073" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6074"></td>
          <td id="LC6074" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Read the rows and columns of the image.</span></td>
        </tr>
        <tr>
          <td id="L6075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6075"></td>
          <td id="LC6075" class="blob-code blob-code-inner js-file-line">   h = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6076"></td>
          <td id="LC6076" class="blob-code blob-code-inner js-file-line">   w = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6077"></td>
          <td id="LC6077" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6078"></td>
          <td id="LC6078" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (h &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6079"></td>
          <td id="LC6079" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (w &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6080"></td>
          <td id="LC6080" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6081"></td>
          <td id="LC6081" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Make sure the depth is 8 bits.</span></td>
        </tr>
        <tr>
          <td id="L6082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6082"></td>
          <td id="LC6082" class="blob-code blob-code-inner js-file-line">   bitdepth = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6083"></td>
          <td id="LC6083" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (bitdepth != <span class="pl-c1">8</span> &amp;&amp; bitdepth != <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L6084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6084"></td>
          <td id="LC6084" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unsupported bit depth<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PSD bit depth is not 8 or 16 bit<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6085"></td>
          <td id="LC6085" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6086"></td>
          <td id="LC6086" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Make sure the color mode is RGB.</span></td>
        </tr>
        <tr>
          <td id="L6087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6087"></td>
          <td id="LC6087" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Valid options are:</span></td>
        </tr>
        <tr>
          <td id="L6088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6088"></td>
          <td id="LC6088" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   0: Bitmap</span></td>
        </tr>
        <tr>
          <td id="L6089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6089"></td>
          <td id="LC6089" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   1: Grayscale</span></td>
        </tr>
        <tr>
          <td id="L6090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6090"></td>
          <td id="LC6090" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   2: Indexed color</span></td>
        </tr>
        <tr>
          <td id="L6091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6091"></td>
          <td id="LC6091" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   3: RGB color</span></td>
        </tr>
        <tr>
          <td id="L6092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6092"></td>
          <td id="LC6092" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   4: CMYK color</span></td>
        </tr>
        <tr>
          <td id="L6093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6093"></td>
          <td id="LC6093" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   7: Multichannel</span></td>
        </tr>
        <tr>
          <td id="L6094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6094"></td>
          <td id="LC6094" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   8: Duotone</span></td>
        </tr>
        <tr>
          <td id="L6095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6095"></td>
          <td id="LC6095" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   9: Lab color</span></td>
        </tr>
        <tr>
          <td id="L6096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6096"></td>
          <td id="LC6096" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16be</span>(s) != <span class="pl-c1">3</span>)</td>
        </tr>
        <tr>
          <td id="L6097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6097"></td>
          <td id="LC6097" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wrong color format<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PSD is not in RGB color format<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6098"></td>
          <td id="LC6098" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6099"></td>
          <td id="LC6099" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Skip the Mode Data.  (It&#39;s the palette for indexed color; other info for other modes.)</span></td>
        </tr>
        <tr>
          <td id="L6100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6100"></td>
          <td id="LC6100" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s,<span class="pl-c1">stbi__get32be</span>(s) );</td>
        </tr>
        <tr>
          <td id="L6101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6101"></td>
          <td id="LC6101" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6102"></td>
          <td id="LC6102" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Skip the image resources.  (resolution, pen tool paths, etc)</span></td>
        </tr>
        <tr>
          <td id="L6103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6103"></td>
          <td id="LC6103" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">stbi__get32be</span>(s) );</td>
        </tr>
        <tr>
          <td id="L6104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6104"></td>
          <td id="LC6104" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6105"></td>
          <td id="LC6105" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Skip the reserved data.</span></td>
        </tr>
        <tr>
          <td id="L6106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6106"></td>
          <td id="LC6106" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">stbi__get32be</span>(s) );</td>
        </tr>
        <tr>
          <td id="L6107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6107"></td>
          <td id="LC6107" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6108"></td>
          <td id="LC6108" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Find out if the data is compressed.</span></td>
        </tr>
        <tr>
          <td id="L6109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6109"></td>
          <td id="LC6109" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Known values:</span></td>
        </tr>
        <tr>
          <td id="L6110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6110"></td>
          <td id="LC6110" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   0: no compression</span></td>
        </tr>
        <tr>
          <td id="L6111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6111"></td>
          <td id="LC6111" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>   1: RLE compressed</span></td>
        </tr>
        <tr>
          <td id="L6112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6112"></td>
          <td id="LC6112" class="blob-code blob-code-inner js-file-line">   compression = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6113"></td>
          <td id="LC6113" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (compression &gt; <span class="pl-c1">1</span>)</td>
        </tr>
        <tr>
          <td id="L6114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6114"></td>
          <td id="LC6114" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad compression<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PSD has an unknown compression format<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6115"></td>
          <td id="LC6115" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6116"></td>
          <td id="LC6116" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Check size</span></td>
        </tr>
        <tr>
          <td id="L6117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6117"></td>
          <td id="LC6117" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(<span class="pl-c1">4</span>, w, h, <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L6118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6118"></td>
          <td id="LC6118" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt PSD<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6119"></td>
          <td id="LC6119" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6120"></td>
          <td id="LC6120" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Create the destination image.</span></td>
        </tr>
        <tr>
          <td id="L6121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6121"></td>
          <td id="LC6121" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6122"></td>
          <td id="LC6122" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!compression &amp;&amp; bitdepth == <span class="pl-c1">16</span> &amp;&amp; bpc == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L6123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6123"></td>
          <td id="LC6123" class="blob-code blob-code-inner js-file-line">      out = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(<span class="pl-c1">8</span>, w, h, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L6124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6124"></td>
          <td id="LC6124" class="blob-code blob-code-inner js-file-line">      ri-&gt;<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L6125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6125"></td>
          <td id="LC6125" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L6126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6126"></td>
          <td id="LC6126" class="blob-code blob-code-inner js-file-line">      out = (stbi_uc *) <span class="pl-c1">stbi__malloc</span>(<span class="pl-c1">4</span> * w*h);</td>
        </tr>
        <tr>
          <td id="L6127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6127"></td>
          <td id="LC6127" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6128"></td>
          <td id="LC6128" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!out) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6129"></td>
          <td id="LC6129" class="blob-code blob-code-inner js-file-line">   pixelCount = w*h;</td>
        </tr>
        <tr>
          <td id="L6130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6130"></td>
          <td id="LC6130" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6131"></td>
          <td id="LC6131" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Initialize the data to zero.</span></td>
        </tr>
        <tr>
          <td id="L6132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6132"></td>
          <td id="LC6132" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span>memset( out, 0, pixelCount * 4 );</span></td>
        </tr>
        <tr>
          <td id="L6133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6133"></td>
          <td id="LC6133" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6134"></td>
          <td id="LC6134" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Finally, the image data.</span></td>
        </tr>
        <tr>
          <td id="L6135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6135"></td>
          <td id="LC6135" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (compression) {</td>
        </tr>
        <tr>
          <td id="L6136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6136"></td>
          <td id="LC6136" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> RLE as used by .PSD and .TIFF</span></td>
        </tr>
        <tr>
          <td id="L6137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6137"></td>
          <td id="LC6137" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Loop until you get the number of unpacked bytes you are expecting:</span></td>
        </tr>
        <tr>
          <td id="L6138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6138"></td>
          <td id="LC6138" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>     Read the next source byte into n.</span></td>
        </tr>
        <tr>
          <td id="L6139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6139"></td>
          <td id="LC6139" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>     If n is between 0 and 127 inclusive, copy the next n+1 bytes literally.</span></td>
        </tr>
        <tr>
          <td id="L6140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6140"></td>
          <td id="LC6140" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>     Else if n is between -127 and -1 inclusive, copy the next byte -n+1 times.</span></td>
        </tr>
        <tr>
          <td id="L6141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6141"></td>
          <td id="LC6141" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span>     Else if n is 128, noop.</span></td>
        </tr>
        <tr>
          <td id="L6142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6142"></td>
          <td id="LC6142" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Endloop</span></td>
        </tr>
        <tr>
          <td id="L6143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6143"></td>
          <td id="LC6143" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6144"></td>
          <td id="LC6144" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> The RLE-compressed data is preceded by a 2-byte data count for each row in the data,</span></td>
        </tr>
        <tr>
          <td id="L6145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6145"></td>
          <td id="LC6145" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> which we&#39;re going to just skip.</span></td>
        </tr>
        <tr>
          <td id="L6146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6146"></td>
          <td id="LC6146" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__skip</span>(s, h * channelCount * <span class="pl-c1">2</span> );</td>
        </tr>
        <tr>
          <td id="L6147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6147"></td>
          <td id="LC6147" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6148"></td>
          <td id="LC6148" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Read the RLE data by channel.</span></td>
        </tr>
        <tr>
          <td id="L6149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6149"></td>
          <td id="LC6149" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (channel = <span class="pl-c1">0</span>; channel &lt; <span class="pl-c1">4</span>; channel++) {</td>
        </tr>
        <tr>
          <td id="L6150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6150"></td>
          <td id="LC6150" class="blob-code blob-code-inner js-file-line">         stbi_uc *p;</td>
        </tr>
        <tr>
          <td id="L6151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6151"></td>
          <td id="LC6151" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6152"></td>
          <td id="LC6152" class="blob-code blob-code-inner js-file-line">         p = out+channel;</td>
        </tr>
        <tr>
          <td id="L6153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6153"></td>
          <td id="LC6153" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (channel &gt;= channelCount) {</td>
        </tr>
        <tr>
          <td id="L6154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6154"></td>
          <td id="LC6154" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Fill this channel with default data.</span></td>
        </tr>
        <tr>
          <td id="L6155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6155"></td>
          <td id="LC6155" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixelCount; i++, p += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6156"></td>
          <td id="LC6156" class="blob-code blob-code-inner js-file-line">               *p = (channel == <span class="pl-c1">3</span> ? <span class="pl-c1">255</span> : <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L6157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6157"></td>
          <td id="LC6157" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6158"></td>
          <td id="LC6158" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Read the RLE data.</span></td>
        </tr>
        <tr>
          <td id="L6159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6159"></td>
          <td id="LC6159" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!<span class="pl-c1">stbi__psd_decode_rle</span>(s, p, pixelCount)) {</td>
        </tr>
        <tr>
          <td id="L6160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6160"></td>
          <td id="LC6160" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_FREE</span>(out);</td>
        </tr>
        <tr>
          <td id="L6161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6161"></td>
          <td id="LC6161" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>corrupt<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad RLE data<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6162"></td>
          <td id="LC6162" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6163"></td>
          <td id="LC6163" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6164"></td>
          <td id="LC6164" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6165"></td>
          <td id="LC6165" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6166"></td>
          <td id="LC6166" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6167"></td>
          <td id="LC6167" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> We&#39;re at the raw image data.  It&#39;s each channel in order (Red, Green, Blue, Alpha, ...)</span></td>
        </tr>
        <tr>
          <td id="L6168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6168"></td>
          <td id="LC6168" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> where each channel consists of an 8-bit (or 16-bit) value for each pixel in the image.</span></td>
        </tr>
        <tr>
          <td id="L6169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6169"></td>
          <td id="LC6169" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6170"></td>
          <td id="LC6170" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Read the data by channel.</span></td>
        </tr>
        <tr>
          <td id="L6171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6171"></td>
          <td id="LC6171" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (channel = <span class="pl-c1">0</span>; channel &lt; <span class="pl-c1">4</span>; channel++) {</td>
        </tr>
        <tr>
          <td id="L6172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6172"></td>
          <td id="LC6172" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (channel &gt;= channelCount) {</td>
        </tr>
        <tr>
          <td id="L6173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6173"></td>
          <td id="LC6173" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> Fill this channel with default data.</span></td>
        </tr>
        <tr>
          <td id="L6174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6174"></td>
          <td id="LC6174" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (bitdepth == <span class="pl-c1">16</span> &amp;&amp; bpc == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L6175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6175"></td>
          <td id="LC6175" class="blob-code blob-code-inner js-file-line">               stbi__uint16 *q = ((stbi__uint16 *) out) + channel;</td>
        </tr>
        <tr>
          <td id="L6176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6176"></td>
          <td id="LC6176" class="blob-code blob-code-inner js-file-line">               stbi__uint16 val = channel == <span class="pl-c1">3</span> ? <span class="pl-c1">65535</span> : <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6177"></td>
          <td id="LC6177" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixelCount; i++, q += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6178"></td>
          <td id="LC6178" class="blob-code blob-code-inner js-file-line">                  *q = val;</td>
        </tr>
        <tr>
          <td id="L6179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6179"></td>
          <td id="LC6179" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6180"></td>
          <td id="LC6180" class="blob-code blob-code-inner js-file-line">               stbi_uc *p = out+channel;</td>
        </tr>
        <tr>
          <td id="L6181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6181"></td>
          <td id="LC6181" class="blob-code blob-code-inner js-file-line">               stbi_uc val = channel == <span class="pl-c1">3</span> ? <span class="pl-c1">255</span> : <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6182"></td>
          <td id="LC6182" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixelCount; i++, p += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6183"></td>
          <td id="LC6183" class="blob-code blob-code-inner js-file-line">                  *p = val;</td>
        </tr>
        <tr>
          <td id="L6184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6184"></td>
          <td id="LC6184" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6185"></td>
          <td id="LC6185" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6186"></td>
          <td id="LC6186" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (ri-&gt;<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">16</span>) {    <span class="pl-c"><span class="pl-c">//</span> output bpc</span></td>
        </tr>
        <tr>
          <td id="L6187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6187"></td>
          <td id="LC6187" class="blob-code blob-code-inner js-file-line">               stbi__uint16 *q = ((stbi__uint16 *) out) + channel;</td>
        </tr>
        <tr>
          <td id="L6188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6188"></td>
          <td id="LC6188" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixelCount; i++, q += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6189"></td>
          <td id="LC6189" class="blob-code blob-code-inner js-file-line">                  *q = (stbi__uint16) <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6190"></td>
          <td id="LC6190" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6191"></td>
          <td id="LC6191" class="blob-code blob-code-inner js-file-line">               stbi_uc *p = out+channel;</td>
        </tr>
        <tr>
          <td id="L6192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6192"></td>
          <td id="LC6192" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (bitdepth == <span class="pl-c1">16</span>) {  <span class="pl-c"><span class="pl-c">//</span> input bpc</span></td>
        </tr>
        <tr>
          <td id="L6193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6193"></td>
          <td id="LC6193" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixelCount; i++, p += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6194"></td>
          <td id="LC6194" class="blob-code blob-code-inner js-file-line">                     *p = (stbi_uc) (<span class="pl-c1">stbi__get16be</span>(s) &gt;&gt; <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L6195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6195"></td>
          <td id="LC6195" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6196"></td>
          <td id="LC6196" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (i = <span class="pl-c1">0</span>; i &lt; pixelCount; i++, p += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6197"></td>
          <td id="LC6197" class="blob-code blob-code-inner js-file-line">                     *p = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6198"></td>
          <td id="LC6198" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6199"></td>
          <td id="LC6199" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6200"></td>
          <td id="LC6200" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6201"></td>
          <td id="LC6201" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6202"></td>
          <td id="LC6202" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6203"></td>
          <td id="LC6203" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6204"></td>
          <td id="LC6204" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> remove weird white matte from PSD</span></td>
        </tr>
        <tr>
          <td id="L6205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6205"></td>
          <td id="LC6205" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (channelCount &gt;= <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L6206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6206"></td>
          <td id="LC6206" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ri-&gt;<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L6207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6207"></td>
          <td id="LC6207" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w*h; ++i) {</td>
        </tr>
        <tr>
          <td id="L6208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6208"></td>
          <td id="LC6208" class="blob-code blob-code-inner js-file-line">            stbi__uint16 *pixel = (stbi__uint16 *) out + <span class="pl-c1">4</span>*i;</td>
        </tr>
        <tr>
          <td id="L6209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6209"></td>
          <td id="LC6209" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pixel[<span class="pl-c1">3</span>] != <span class="pl-c1">0</span> &amp;&amp; pixel[<span class="pl-c1">3</span>] != <span class="pl-c1">65535</span>) {</td>
        </tr>
        <tr>
          <td id="L6210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6210"></td>
          <td id="LC6210" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">float</span> a = pixel[<span class="pl-c1">3</span>] / <span class="pl-c1">65535</span>.<span class="pl-c1">0f</span>;</td>
        </tr>
        <tr>
          <td id="L6211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6211"></td>
          <td id="LC6211" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">float</span> ra = <span class="pl-c1">1</span>.<span class="pl-c1">0f</span> / a;</td>
        </tr>
        <tr>
          <td id="L6212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6212"></td>
          <td id="LC6212" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">float</span> inv_a = <span class="pl-c1">65535</span>.<span class="pl-c1">0f</span> * (<span class="pl-c1">1</span> - ra);</td>
        </tr>
        <tr>
          <td id="L6213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6213"></td>
          <td id="LC6213" class="blob-code blob-code-inner js-file-line">               pixel[<span class="pl-c1">0</span>] = (stbi__uint16) (pixel[<span class="pl-c1">0</span>]*ra + inv_a);</td>
        </tr>
        <tr>
          <td id="L6214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6214"></td>
          <td id="LC6214" class="blob-code blob-code-inner js-file-line">               pixel[<span class="pl-c1">1</span>] = (stbi__uint16) (pixel[<span class="pl-c1">1</span>]*ra + inv_a);</td>
        </tr>
        <tr>
          <td id="L6215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6215"></td>
          <td id="LC6215" class="blob-code blob-code-inner js-file-line">               pixel[<span class="pl-c1">2</span>] = (stbi__uint16) (pixel[<span class="pl-c1">2</span>]*ra + inv_a);</td>
        </tr>
        <tr>
          <td id="L6216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6216"></td>
          <td id="LC6216" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6217"></td>
          <td id="LC6217" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6218"></td>
          <td id="LC6218" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6219"></td>
          <td id="LC6219" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; w*h; ++i) {</td>
        </tr>
        <tr>
          <td id="L6220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6220"></td>
          <td id="LC6220" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">unsigned</span> <span class="pl-k">char</span> *pixel = out + <span class="pl-c1">4</span>*i;</td>
        </tr>
        <tr>
          <td id="L6221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6221"></td>
          <td id="LC6221" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (pixel[<span class="pl-c1">3</span>] != <span class="pl-c1">0</span> &amp;&amp; pixel[<span class="pl-c1">3</span>] != <span class="pl-c1">255</span>) {</td>
        </tr>
        <tr>
          <td id="L6222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6222"></td>
          <td id="LC6222" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">float</span> a = pixel[<span class="pl-c1">3</span>] / <span class="pl-c1">255</span>.<span class="pl-c1">0f</span>;</td>
        </tr>
        <tr>
          <td id="L6223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6223"></td>
          <td id="LC6223" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">float</span> ra = <span class="pl-c1">1</span>.<span class="pl-c1">0f</span> / a;</td>
        </tr>
        <tr>
          <td id="L6224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6224"></td>
          <td id="LC6224" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">float</span> inv_a = <span class="pl-c1">255</span>.<span class="pl-c1">0f</span> * (<span class="pl-c1">1</span> - ra);</td>
        </tr>
        <tr>
          <td id="L6225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6225"></td>
          <td id="LC6225" class="blob-code blob-code-inner js-file-line">               pixel[<span class="pl-c1">0</span>] = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>) (pixel[<span class="pl-c1">0</span>]*ra + inv_a);</td>
        </tr>
        <tr>
          <td id="L6226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6226"></td>
          <td id="LC6226" class="blob-code blob-code-inner js-file-line">               pixel[<span class="pl-c1">1</span>] = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>) (pixel[<span class="pl-c1">1</span>]*ra + inv_a);</td>
        </tr>
        <tr>
          <td id="L6227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6227"></td>
          <td id="LC6227" class="blob-code blob-code-inner js-file-line">               pixel[<span class="pl-c1">2</span>] = (<span class="pl-k">unsigned</span> <span class="pl-k">char</span>) (pixel[<span class="pl-c1">2</span>]*ra + inv_a);</td>
        </tr>
        <tr>
          <td id="L6228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6228"></td>
          <td id="LC6228" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6229"></td>
          <td id="LC6229" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6230"></td>
          <td id="LC6230" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6231"></td>
          <td id="LC6231" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6232"></td>
          <td id="LC6232" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6233"></td>
          <td id="LC6233" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> convert to desired output format</span></td>
        </tr>
        <tr>
          <td id="L6234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6234"></td>
          <td id="LC6234" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L6235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6235"></td>
          <td id="LC6235" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ri-&gt;<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L6236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6236"></td>
          <td id="LC6236" class="blob-code blob-code-inner js-file-line">         out = (stbi_uc *) <span class="pl-c1">stbi__convert_format16</span>((stbi__uint16 *) out, <span class="pl-c1">4</span>, req_comp, w, h);</td>
        </tr>
        <tr>
          <td id="L6237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6237"></td>
          <td id="LC6237" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L6238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6238"></td>
          <td id="LC6238" class="blob-code blob-code-inner js-file-line">         out = <span class="pl-c1">stbi__convert_format</span>(out, <span class="pl-c1">4</span>, req_comp, w, h);</td>
        </tr>
        <tr>
          <td id="L6239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6239"></td>
          <td id="LC6239" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (out == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> out; <span class="pl-c"><span class="pl-c">//</span> stbi__convert_format frees input on failure</span></td>
        </tr>
        <tr>
          <td id="L6240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6240"></td>
          <td id="LC6240" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6241"></td>
          <td id="LC6241" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6242"></td>
          <td id="LC6242" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6243"></td>
          <td id="LC6243" class="blob-code blob-code-inner js-file-line">   *y = h;</td>
        </tr>
        <tr>
          <td id="L6244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6244"></td>
          <td id="LC6244" class="blob-code blob-code-inner js-file-line">   *x = w;</td>
        </tr>
        <tr>
          <td id="L6245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6245"></td>
          <td id="LC6245" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6246"></td>
          <td id="LC6246" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L6247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6247"></td>
          <td id="LC6247" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6248"></td>
          <td id="LC6248" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L6249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6249"></td>
          <td id="LC6249" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6250"></td>
          <td id="LC6250" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *************************************************************************************************</span></td>
        </tr>
        <tr>
          <td id="L6251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6251"></td>
          <td id="LC6251" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Softimage PIC loader</span></td>
        </tr>
        <tr>
          <td id="L6252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6252"></td>
          <td id="LC6252" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> by Tom Seddon</span></td>
        </tr>
        <tr>
          <td id="L6253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6253"></td>
          <td id="LC6253" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L6254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6254"></td>
          <td id="LC6254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> See http://softimage.wiki.softimage.com/index.php/INFO:_PIC_file_format</span></td>
        </tr>
        <tr>
          <td id="L6255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6255"></td>
          <td id="LC6255" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> See http://ozviz.wasp.uwa.edu.au/~pbourke/dataformats/softimagepic/</span></td>
        </tr>
        <tr>
          <td id="L6256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6256"></td>
          <td id="LC6256" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6257"></td>
          <td id="LC6257" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PIC</td>
        </tr>
        <tr>
          <td id="L6258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6258"></td>
          <td id="LC6258" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__pic_is4</span>(stbi__context *s,<span class="pl-k">const</span> <span class="pl-k">char</span> *str)</td>
        </tr>
        <tr>
          <td id="L6259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6259"></td>
          <td id="LC6259" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6260"></td>
          <td id="LC6260" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L6261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6261"></td>
          <td id="LC6261" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i&lt;<span class="pl-c1">4</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L6262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6262"></td>
          <td id="LC6262" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != (stbi_uc)str[i])</td>
        </tr>
        <tr>
          <td id="L6263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6263"></td>
          <td id="LC6263" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6264"></td>
          <td id="LC6264" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6265"></td>
          <td id="LC6265" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6266"></td>
          <td id="LC6266" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6267"></td>
          <td id="LC6267" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6268"></td>
          <td id="LC6268" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__pic_test_core</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L6269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6269"></td>
          <td id="LC6269" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6270"></td>
          <td id="LC6270" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L6271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6271"></td>
          <td id="LC6271" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6272"></td>
          <td id="LC6272" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__pic_is4</span>(s,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x53\x80\xF6\x34</span><span class="pl-pds">&quot;</span></span>))</td>
        </tr>
        <tr>
          <td id="L6273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6273"></td>
          <td id="LC6273" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6274"></td>
          <td id="LC6274" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6275"></td>
          <td id="LC6275" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(i=<span class="pl-c1">0</span>;i&lt;<span class="pl-c1">84</span>;++i)</td>
        </tr>
        <tr>
          <td id="L6276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6276"></td>
          <td id="LC6276" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6277"></td>
          <td id="LC6277" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6278"></td>
          <td id="LC6278" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__pic_is4</span>(s,<span class="pl-s"><span class="pl-pds">&quot;</span>PICT<span class="pl-pds">&quot;</span></span>))</td>
        </tr>
        <tr>
          <td id="L6279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6279"></td>
          <td id="LC6279" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6280"></td>
          <td id="LC6280" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6281"></td>
          <td id="LC6281" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6282"></td>
          <td id="LC6282" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6283"></td>
          <td id="LC6283" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6284"></td>
          <td id="LC6284" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L6285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6285"></td>
          <td id="LC6285" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6286"></td>
          <td id="LC6286" class="blob-code blob-code-inner js-file-line">   stbi_uc size,type,channel;</td>
        </tr>
        <tr>
          <td id="L6287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6287"></td>
          <td id="LC6287" class="blob-code blob-code-inner js-file-line">} stbi__pic_packet;</td>
        </tr>
        <tr>
          <td id="L6288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6288"></td>
          <td id="LC6288" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6289"></td>
          <td id="LC6289" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__readval</span>(stbi__context *s, <span class="pl-k">int</span> channel, stbi_uc *dest)</td>
        </tr>
        <tr>
          <td id="L6290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6290"></td>
          <td id="LC6290" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6291"></td>
          <td id="LC6291" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> mask=<span class="pl-c1">0x80</span>, i;</td>
        </tr>
        <tr>
          <td id="L6292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6292"></td>
          <td id="LC6292" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6293"></td>
          <td id="LC6293" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i&lt;<span class="pl-c1">4</span>; ++i, mask&gt;&gt;=<span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L6294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6294"></td>
          <td id="LC6294" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (channel &amp; mask) {</td>
        </tr>
        <tr>
          <td id="L6295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6295"></td>
          <td id="LC6295" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s)) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>PIC file too short<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6296"></td>
          <td id="LC6296" class="blob-code blob-code-inner js-file-line">         dest[i]=<span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6297"></td>
          <td id="LC6297" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6298"></td>
          <td id="LC6298" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6299"></td>
          <td id="LC6299" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6300"></td>
          <td id="LC6300" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> dest;</td>
        </tr>
        <tr>
          <td id="L6301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6301"></td>
          <td id="LC6301" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6302"></td>
          <td id="LC6302" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6303"></td>
          <td id="LC6303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__copyval</span>(<span class="pl-k">int</span> channel,stbi_uc *dest,<span class="pl-k">const</span> stbi_uc *src)</td>
        </tr>
        <tr>
          <td id="L6304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6304"></td>
          <td id="LC6304" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6305"></td>
          <td id="LC6305" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> mask=<span class="pl-c1">0x80</span>,i;</td>
        </tr>
        <tr>
          <td id="L6306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6306"></td>
          <td id="LC6306" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6307"></td>
          <td id="LC6307" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>;i&lt;<span class="pl-c1">4</span>; ++i, mask&gt;&gt;=<span class="pl-c1">1</span>)</td>
        </tr>
        <tr>
          <td id="L6308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6308"></td>
          <td id="LC6308" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (channel&amp;mask)</td>
        </tr>
        <tr>
          <td id="L6309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6309"></td>
          <td id="LC6309" class="blob-code blob-code-inner js-file-line">         dest[i]=src[i];</td>
        </tr>
        <tr>
          <td id="L6310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6310"></td>
          <td id="LC6310" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6311"></td>
          <td id="LC6311" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6312"></td>
          <td id="LC6312" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__pic_load_core</span>(stbi__context *s,<span class="pl-k">int</span> width,<span class="pl-k">int</span> height,<span class="pl-k">int</span> *comp, stbi_uc *result)</td>
        </tr>
        <tr>
          <td id="L6313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6313"></td>
          <td id="LC6313" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6314"></td>
          <td id="LC6314" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> act_comp=<span class="pl-c1">0</span>,num_packets=<span class="pl-c1">0</span>,y,chained;</td>
        </tr>
        <tr>
          <td id="L6315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6315"></td>
          <td id="LC6315" class="blob-code blob-code-inner js-file-line">   stbi__pic_packet packets[<span class="pl-c1">10</span>];</td>
        </tr>
        <tr>
          <td id="L6316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6316"></td>
          <td id="LC6316" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6317"></td>
          <td id="LC6317" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> this will (should...) cater for even some bizarre stuff like having data</span></td>
        </tr>
        <tr>
          <td id="L6318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6318"></td>
          <td id="LC6318" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> for the same channel in multiple packets.</span></td>
        </tr>
        <tr>
          <td id="L6319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6319"></td>
          <td id="LC6319" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L6320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6320"></td>
          <td id="LC6320" class="blob-code blob-code-inner js-file-line">      stbi__pic_packet *packet;</td>
        </tr>
        <tr>
          <td id="L6321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6321"></td>
          <td id="LC6321" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6322"></td>
          <td id="LC6322" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (num_packets==<span class="pl-k">sizeof</span>(packets)/<span class="pl-k">sizeof</span>(packets[<span class="pl-c1">0</span>]))</td>
        </tr>
        <tr>
          <td id="L6323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6323"></td>
          <td id="LC6323" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad format<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>too many packets<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6324"></td>
          <td id="LC6324" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6325"></td>
          <td id="LC6325" class="blob-code blob-code-inner js-file-line">      packet = &amp;packets[num_packets++];</td>
        </tr>
        <tr>
          <td id="L6326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6326"></td>
          <td id="LC6326" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6327"></td>
          <td id="LC6327" class="blob-code blob-code-inner js-file-line">      chained = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6328"></td>
          <td id="LC6328" class="blob-code blob-code-inner js-file-line">      packet-&gt;<span class="pl-smi">size</span>    = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6329"></td>
          <td id="LC6329" class="blob-code blob-code-inner js-file-line">      packet-&gt;<span class="pl-smi">type</span>    = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6330"></td>
          <td id="LC6330" class="blob-code blob-code-inner js-file-line">      packet-&gt;<span class="pl-smi">channel</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6331"></td>
          <td id="LC6331" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6332"></td>
          <td id="LC6332" class="blob-code blob-code-inner js-file-line">      act_comp |= packet-&gt;<span class="pl-smi">channel</span>;</td>
        </tr>
        <tr>
          <td id="L6333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6333"></td>
          <td id="LC6333" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6334"></td>
          <td id="LC6334" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s))          <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>file too short (reading packets)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6335"></td>
          <td id="LC6335" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (packet-&gt;<span class="pl-smi">size</span> != <span class="pl-c1">8</span>)  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad format<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>packet isn&#39;t 8bpp<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6336"></td>
          <td id="LC6336" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">while</span> (chained);</td>
        </tr>
        <tr>
          <td id="L6337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6337"></td>
          <td id="LC6337" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6338"></td>
          <td id="LC6338" class="blob-code blob-code-inner js-file-line">   *comp = (act_comp &amp; <span class="pl-c1">0x10</span> ? <span class="pl-c1">4</span> : <span class="pl-c1">3</span>); <span class="pl-c"><span class="pl-c">//</span> has alpha channel?</span></td>
        </tr>
        <tr>
          <td id="L6339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6339"></td>
          <td id="LC6339" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6340"></td>
          <td id="LC6340" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(y=<span class="pl-c1">0</span>; y&lt;height; ++y) {</td>
        </tr>
        <tr>
          <td id="L6341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6341"></td>
          <td id="LC6341" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> packet_idx;</td>
        </tr>
        <tr>
          <td id="L6342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6342"></td>
          <td id="LC6342" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6343"></td>
          <td id="LC6343" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(packet_idx=<span class="pl-c1">0</span>; packet_idx &lt; num_packets; ++packet_idx) {</td>
        </tr>
        <tr>
          <td id="L6344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6344"></td>
          <td id="LC6344" class="blob-code blob-code-inner js-file-line">         stbi__pic_packet *packet = &amp;packets[packet_idx];</td>
        </tr>
        <tr>
          <td id="L6345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6345"></td>
          <td id="LC6345" class="blob-code blob-code-inner js-file-line">         stbi_uc *dest = result+y*width*<span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6346"></td>
          <td id="LC6346" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6347"></td>
          <td id="LC6347" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">switch</span> (packet-&gt;<span class="pl-smi">type</span>) {</td>
        </tr>
        <tr>
          <td id="L6348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6348"></td>
          <td id="LC6348" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">default</span>:</td>
        </tr>
        <tr>
          <td id="L6349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6349"></td>
          <td id="LC6349" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad format<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>packet has bad compression type<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6350"></td>
          <td id="LC6350" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6351"></td>
          <td id="LC6351" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> <span class="pl-c1">0</span>: {<span class="pl-c"><span class="pl-c">//</span>uncompressed</span></td>
        </tr>
        <tr>
          <td id="L6352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6352"></td>
          <td id="LC6352" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> x;</td>
        </tr>
        <tr>
          <td id="L6353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6353"></td>
          <td id="LC6353" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6354"></td>
          <td id="LC6354" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span>(x=<span class="pl-c1">0</span>;x&lt;width;++x, dest+=<span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6355"></td>
          <td id="LC6355" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!<span class="pl-c1">stbi__readval</span>(s,packet-&gt;<span class="pl-smi">channel</span>,dest))</td>
        </tr>
        <tr>
          <td id="L6356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6356"></td>
          <td id="LC6356" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6357"></td>
          <td id="LC6357" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L6358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6358"></td>
          <td id="LC6358" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6359"></td>
          <td id="LC6359" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6360"></td>
          <td id="LC6360" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-c"><span class="pl-c">//</span>Pure RLE</span></td>
        </tr>
        <tr>
          <td id="L6361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6361"></td>
          <td id="LC6361" class="blob-code blob-code-inner js-file-line">               {</td>
        </tr>
        <tr>
          <td id="L6362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6362"></td>
          <td id="LC6362" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">int</span> left=width, i;</td>
        </tr>
        <tr>
          <td id="L6363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6363"></td>
          <td id="LC6363" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6364"></td>
          <td id="LC6364" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">while</span> (left&gt;<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6365"></td>
          <td id="LC6365" class="blob-code blob-code-inner js-file-line">                     stbi_uc count,value[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L6366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6366"></td>
          <td id="LC6366" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6367"></td>
          <td id="LC6367" class="blob-code blob-code-inner js-file-line">                     count=<span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6368"></td>
          <td id="LC6368" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s))   <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>file too short (pure read count)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6369"></td>
          <td id="LC6369" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6370"></td>
          <td id="LC6370" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (count &gt; left)</td>
        </tr>
        <tr>
          <td id="L6371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6371"></td>
          <td id="LC6371" class="blob-code blob-code-inner js-file-line">                        count = (stbi_uc) left;</td>
        </tr>
        <tr>
          <td id="L6372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6372"></td>
          <td id="LC6372" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6373"></td>
          <td id="LC6373" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (!<span class="pl-c1">stbi__readval</span>(s,packet-&gt;<span class="pl-smi">channel</span>,value))  <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6374"></td>
          <td id="LC6374" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6375"></td>
          <td id="LC6375" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">for</span>(i=<span class="pl-c1">0</span>; i&lt;count; ++i,dest+=<span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6376"></td>
          <td id="LC6376" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">stbi__copyval</span>(packet-&gt;<span class="pl-smi">channel</span>,dest,value);</td>
        </tr>
        <tr>
          <td id="L6377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6377"></td>
          <td id="LC6377" class="blob-code blob-code-inner js-file-line">                     left -= count;</td>
        </tr>
        <tr>
          <td id="L6378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6378"></td>
          <td id="LC6378" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L6379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6379"></td>
          <td id="LC6379" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6380"></td>
          <td id="LC6380" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L6381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6381"></td>
          <td id="LC6381" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6382"></td>
          <td id="LC6382" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">case</span> <span class="pl-c1">2</span>: {<span class="pl-c"><span class="pl-c">//</span>Mixed RLE</span></td>
        </tr>
        <tr>
          <td id="L6383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6383"></td>
          <td id="LC6383" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">int</span> left=width;</td>
        </tr>
        <tr>
          <td id="L6384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6384"></td>
          <td id="LC6384" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">while</span> (left&gt;<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6385"></td>
          <td id="LC6385" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">int</span> count = <span class="pl-c1">stbi__get8</span>(s), i;</td>
        </tr>
        <tr>
          <td id="L6386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6386"></td>
          <td id="LC6386" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>file too short (mixed read count)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6387"></td>
          <td id="LC6387" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6388"></td>
          <td id="LC6388" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (count &gt;= <span class="pl-c1">128</span>) { <span class="pl-c"><span class="pl-c">//</span> Repeated</span></td>
        </tr>
        <tr>
          <td id="L6389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6389"></td>
          <td id="LC6389" class="blob-code blob-code-inner js-file-line">                     stbi_uc value[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L6390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6390"></td>
          <td id="LC6390" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6391"></td>
          <td id="LC6391" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (count==<span class="pl-c1">128</span>)</td>
        </tr>
        <tr>
          <td id="L6392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6392"></td>
          <td id="LC6392" class="blob-code blob-code-inner js-file-line">                        count = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6393"></td>
          <td id="LC6393" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L6394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6394"></td>
          <td id="LC6394" class="blob-code blob-code-inner js-file-line">                        count -= <span class="pl-c1">127</span>;</td>
        </tr>
        <tr>
          <td id="L6395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6395"></td>
          <td id="LC6395" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (count &gt; left)</td>
        </tr>
        <tr>
          <td id="L6396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6396"></td>
          <td id="LC6396" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>scanline overrun<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6397"></td>
          <td id="LC6397" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6398"></td>
          <td id="LC6398" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (!<span class="pl-c1">stbi__readval</span>(s,packet-&gt;<span class="pl-smi">channel</span>,value))</td>
        </tr>
        <tr>
          <td id="L6399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6399"></td>
          <td id="LC6399" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6400"></td>
          <td id="LC6400" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6401"></td>
          <td id="LC6401" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">for</span>(i=<span class="pl-c1">0</span>;i&lt;count;++i, dest += <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6402"></td>
          <td id="LC6402" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c1">stbi__copyval</span>(packet-&gt;<span class="pl-smi">channel</span>,dest,value);</td>
        </tr>
        <tr>
          <td id="L6403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6403"></td>
          <td id="LC6403" class="blob-code blob-code-inner js-file-line">                  } <span class="pl-k">else</span> { <span class="pl-c"><span class="pl-c">//</span> Raw</span></td>
        </tr>
        <tr>
          <td id="L6404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6404"></td>
          <td id="LC6404" class="blob-code blob-code-inner js-file-line">                     ++count;</td>
        </tr>
        <tr>
          <td id="L6405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6405"></td>
          <td id="LC6405" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (count&gt;left) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>scanline overrun<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6406"></td>
          <td id="LC6406" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6407"></td>
          <td id="LC6407" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">for</span>(i=<span class="pl-c1">0</span>;i&lt;count;++i, dest+=<span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6408"></td>
          <td id="LC6408" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> (!<span class="pl-c1">stbi__readval</span>(s,packet-&gt;<span class="pl-smi">channel</span>,dest))</td>
        </tr>
        <tr>
          <td id="L6409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6409"></td>
          <td id="LC6409" class="blob-code blob-code-inner js-file-line">                           <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6410"></td>
          <td id="LC6410" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L6411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6411"></td>
          <td id="LC6411" class="blob-code blob-code-inner js-file-line">                  left-=count;</td>
        </tr>
        <tr>
          <td id="L6412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6412"></td>
          <td id="LC6412" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6413"></td>
          <td id="LC6413" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L6414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6414"></td>
          <td id="LC6414" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6415"></td>
          <td id="LC6415" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6416"></td>
          <td id="LC6416" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6417"></td>
          <td id="LC6417" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6418"></td>
          <td id="LC6418" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6419"></td>
          <td id="LC6419" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L6420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6420"></td>
          <td id="LC6420" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6421"></td>
          <td id="LC6421" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6422"></td>
          <td id="LC6422" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__pic_load</span>(stbi__context *s,<span class="pl-k">int</span> *px,<span class="pl-k">int</span> *py,<span class="pl-k">int</span> *comp,<span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L6423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6423"></td>
          <td id="LC6423" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6424"></td>
          <td id="LC6424" class="blob-code blob-code-inner js-file-line">   stbi_uc *result;</td>
        </tr>
        <tr>
          <td id="L6425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6425"></td>
          <td id="LC6425" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i, x,y, internal_comp;</td>
        </tr>
        <tr>
          <td id="L6426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6426"></td>
          <td id="LC6426" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L6427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6427"></td>
          <td id="LC6427" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6428"></td>
          <td id="LC6428" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!comp) comp = &amp;internal_comp;</td>
        </tr>
        <tr>
          <td id="L6429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6429"></td>
          <td id="LC6429" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6430"></td>
          <td id="LC6430" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i&lt;<span class="pl-c1">92</span>; ++i)</td>
        </tr>
        <tr>
          <td id="L6431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6431"></td>
          <td id="LC6431" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6432"></td>
          <td id="LC6432" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6433"></td>
          <td id="LC6433" class="blob-code blob-code-inner js-file-line">   x = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6434"></td>
          <td id="LC6434" class="blob-code blob-code-inner js-file-line">   y = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L6435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6435"></td>
          <td id="LC6435" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6436"></td>
          <td id="LC6436" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (y &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6437"></td>
          <td id="LC6437" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (x &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6438"></td>
          <td id="LC6438" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6439"></td>
          <td id="LC6439" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>file too short (pic header)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6440"></td>
          <td id="LC6440" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(x, y, <span class="pl-c1">4</span>, <span class="pl-c1">0</span>)) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PIC image too large to decode<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6441"></td>
          <td id="LC6441" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6442"></td>
          <td id="LC6442" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get32be</span>(s); <span class="pl-c"><span class="pl-c">//</span>skip `ratio&#39;</span></td>
        </tr>
        <tr>
          <td id="L6443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6443"></td>
          <td id="LC6443" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get16be</span>(s); <span class="pl-c"><span class="pl-c">//</span>skip `fields&#39;</span></td>
        </tr>
        <tr>
          <td id="L6444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6444"></td>
          <td id="LC6444" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__get16be</span>(s); <span class="pl-c"><span class="pl-c">//</span>skip `pad&#39;</span></td>
        </tr>
        <tr>
          <td id="L6445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6445"></td>
          <td id="LC6445" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6446"></td>
          <td id="LC6446" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> intermediate buffer is RGBA</span></td>
        </tr>
        <tr>
          <td id="L6447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6447"></td>
          <td id="LC6447" class="blob-code blob-code-inner js-file-line">   result = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad3</span>(x, y, <span class="pl-c1">4</span>, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L6448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6448"></td>
          <td id="LC6448" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!result) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6449"></td>
          <td id="LC6449" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(result, <span class="pl-c1">0xff</span>, x*y*<span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L6450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6450"></td>
          <td id="LC6450" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6451"></td>
          <td id="LC6451" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__pic_load_core</span>(s,x,y,comp, result)) {</td>
        </tr>
        <tr>
          <td id="L6452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6452"></td>
          <td id="LC6452" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(result);</td>
        </tr>
        <tr>
          <td id="L6453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6453"></td>
          <td id="LC6453" class="blob-code blob-code-inner js-file-line">      result=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6454"></td>
          <td id="LC6454" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6455"></td>
          <td id="LC6455" class="blob-code blob-code-inner js-file-line">   *px = x;</td>
        </tr>
        <tr>
          <td id="L6456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6456"></td>
          <td id="LC6456" class="blob-code blob-code-inner js-file-line">   *py = y;</td>
        </tr>
        <tr>
          <td id="L6457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6457"></td>
          <td id="LC6457" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp == <span class="pl-c1">0</span>) req_comp = *comp;</td>
        </tr>
        <tr>
          <td id="L6458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6458"></td>
          <td id="LC6458" class="blob-code blob-code-inner js-file-line">   result=<span class="pl-c1">stbi__convert_format</span>(result,<span class="pl-c1">4</span>,req_comp,x,y);</td>
        </tr>
        <tr>
          <td id="L6459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6459"></td>
          <td id="LC6459" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6460"></td>
          <td id="LC6460" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L6461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6461"></td>
          <td id="LC6461" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6462"></td>
          <td id="LC6462" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6463"></td>
          <td id="LC6463" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__pic_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L6464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6464"></td>
          <td id="LC6464" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6465"></td>
          <td id="LC6465" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r = <span class="pl-c1">stbi__pic_test_core</span>(s);</td>
        </tr>
        <tr>
          <td id="L6466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6466"></td>
          <td id="LC6466" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L6467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6467"></td>
          <td id="LC6467" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L6468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6468"></td>
          <td id="LC6468" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6469"></td>
          <td id="LC6469" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L6470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6470"></td>
          <td id="LC6470" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6471"></td>
          <td id="LC6471" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *************************************************************************************************</span></td>
        </tr>
        <tr>
          <td id="L6472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6472"></td>
          <td id="LC6472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> GIF loader -- public domain by Jean-Marc Lienher -- simplified/shrunk by stb</span></td>
        </tr>
        <tr>
          <td id="L6473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6473"></td>
          <td id="LC6473" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6474"></td>
          <td id="LC6474" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L6475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6475"></td>
          <td id="LC6475" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L6476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6476"></td>
          <td id="LC6476" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6477"></td>
          <td id="LC6477" class="blob-code blob-code-inner js-file-line">   stbi__int16 prefix;</td>
        </tr>
        <tr>
          <td id="L6478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6478"></td>
          <td id="LC6478" class="blob-code blob-code-inner js-file-line">   stbi_uc first;</td>
        </tr>
        <tr>
          <td id="L6479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6479"></td>
          <td id="LC6479" class="blob-code blob-code-inner js-file-line">   stbi_uc suffix;</td>
        </tr>
        <tr>
          <td id="L6480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6480"></td>
          <td id="LC6480" class="blob-code blob-code-inner js-file-line">} stbi__gif_lzw;</td>
        </tr>
        <tr>
          <td id="L6481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6481"></td>
          <td id="LC6481" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6482"></td>
          <td id="LC6482" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">struct</span></td>
        </tr>
        <tr>
          <td id="L6483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6483"></td>
          <td id="LC6483" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6484"></td>
          <td id="LC6484" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> w,h;</td>
        </tr>
        <tr>
          <td id="L6485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6485"></td>
          <td id="LC6485" class="blob-code blob-code-inner js-file-line">   stbi_uc *out;                 <span class="pl-c"><span class="pl-c">//</span> output buffer (always 4 components)</span></td>
        </tr>
        <tr>
          <td id="L6486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6486"></td>
          <td id="LC6486" class="blob-code blob-code-inner js-file-line">   stbi_uc *background;          <span class="pl-c"><span class="pl-c">//</span> The current &quot;background&quot; as far as a gif is concerned</span></td>
        </tr>
        <tr>
          <td id="L6487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6487"></td>
          <td id="LC6487" class="blob-code blob-code-inner js-file-line">   stbi_uc *history;</td>
        </tr>
        <tr>
          <td id="L6488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6488"></td>
          <td id="LC6488" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> flags, bgindex, ratio, transparent, eflags;</td>
        </tr>
        <tr>
          <td id="L6489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6489"></td>
          <td id="LC6489" class="blob-code blob-code-inner js-file-line">   stbi_uc  pal[<span class="pl-c1">256</span>][<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L6490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6490"></td>
          <td id="LC6490" class="blob-code blob-code-inner js-file-line">   stbi_uc lpal[<span class="pl-c1">256</span>][<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L6491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6491"></td>
          <td id="LC6491" class="blob-code blob-code-inner js-file-line">   stbi__gif_lzw codes[<span class="pl-c1">8192</span>];</td>
        </tr>
        <tr>
          <td id="L6492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6492"></td>
          <td id="LC6492" class="blob-code blob-code-inner js-file-line">   stbi_uc *color_table;</td>
        </tr>
        <tr>
          <td id="L6493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6493"></td>
          <td id="LC6493" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> parse, step;</td>
        </tr>
        <tr>
          <td id="L6494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6494"></td>
          <td id="LC6494" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> lflags;</td>
        </tr>
        <tr>
          <td id="L6495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6495"></td>
          <td id="LC6495" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> start_x, start_y;</td>
        </tr>
        <tr>
          <td id="L6496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6496"></td>
          <td id="LC6496" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> max_x, max_y;</td>
        </tr>
        <tr>
          <td id="L6497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6497"></td>
          <td id="LC6497" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> cur_x, cur_y;</td>
        </tr>
        <tr>
          <td id="L6498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6498"></td>
          <td id="LC6498" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> line_size;</td>
        </tr>
        <tr>
          <td id="L6499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6499"></td>
          <td id="LC6499" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> delay;</td>
        </tr>
        <tr>
          <td id="L6500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6500"></td>
          <td id="LC6500" class="blob-code blob-code-inner js-file-line">} stbi__gif;</td>
        </tr>
        <tr>
          <td id="L6501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6501"></td>
          <td id="LC6501" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6502"></td>
          <td id="LC6502" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__gif_test_raw</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L6503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6503"></td>
          <td id="LC6503" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6504"></td>
          <td id="LC6504" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> sz;</td>
        </tr>
        <tr>
          <td id="L6505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6505"></td>
          <td id="LC6505" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>G<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>F<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>8<span class="pl-pds">&#39;</span></span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6506"></td>
          <td id="LC6506" class="blob-code blob-code-inner js-file-line">   sz = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6507"></td>
          <td id="LC6507" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (sz != <span class="pl-s"><span class="pl-pds">&#39;</span>9<span class="pl-pds">&#39;</span></span> &amp;&amp; sz != <span class="pl-s"><span class="pl-pds">&#39;</span>7<span class="pl-pds">&#39;</span></span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6508"></td>
          <td id="LC6508" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6509"></td>
          <td id="LC6509" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6510"></td>
          <td id="LC6510" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6511"></td>
          <td id="LC6511" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6512"></td>
          <td id="LC6512" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__gif_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L6513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6513"></td>
          <td id="LC6513" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6514"></td>
          <td id="LC6514" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r = <span class="pl-c1">stbi__gif_test_raw</span>(s);</td>
        </tr>
        <tr>
          <td id="L6515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6515"></td>
          <td id="LC6515" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L6516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6516"></td>
          <td id="LC6516" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L6517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6517"></td>
          <td id="LC6517" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6518"></td>
          <td id="LC6518" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6519"></td>
          <td id="LC6519" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__gif_parse_colortable</span>(stbi__context *s, stbi_uc pal[<span class="pl-c1">256</span>][<span class="pl-c1">4</span>], <span class="pl-k">int</span> num_entries, <span class="pl-k">int</span> transp)</td>
        </tr>
        <tr>
          <td id="L6520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6520"></td>
          <td id="LC6520" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6521"></td>
          <td id="LC6521" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L6522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6522"></td>
          <td id="LC6522" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; num_entries; ++i) {</td>
        </tr>
        <tr>
          <td id="L6523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6523"></td>
          <td id="LC6523" class="blob-code blob-code-inner js-file-line">      pal[i][<span class="pl-c1">2</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6524"></td>
          <td id="LC6524" class="blob-code blob-code-inner js-file-line">      pal[i][<span class="pl-c1">1</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6525"></td>
          <td id="LC6525" class="blob-code blob-code-inner js-file-line">      pal[i][<span class="pl-c1">0</span>] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6526"></td>
          <td id="LC6526" class="blob-code blob-code-inner js-file-line">      pal[i][<span class="pl-c1">3</span>] = transp == i ? <span class="pl-c1">0</span> : <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L6527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6527"></td>
          <td id="LC6527" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6528"></td>
          <td id="LC6528" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6529"></td>
          <td id="LC6529" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6530"></td>
          <td id="LC6530" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__gif_header</span>(stbi__context *s, stbi__gif *g, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> is_info)</td>
        </tr>
        <tr>
          <td id="L6531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6531"></td>
          <td id="LC6531" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6532"></td>
          <td id="LC6532" class="blob-code blob-code-inner js-file-line">   stbi_uc version;</td>
        </tr>
        <tr>
          <td id="L6533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6533"></td>
          <td id="LC6533" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>G<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>F<span class="pl-pds">&#39;</span></span> || <span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>8<span class="pl-pds">&#39;</span></span>)</td>
        </tr>
        <tr>
          <td id="L6534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6534"></td>
          <td id="LC6534" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not GIF<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6535"></td>
          <td id="LC6535" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6536"></td>
          <td id="LC6536" class="blob-code blob-code-inner js-file-line">   version = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6537"></td>
          <td id="LC6537" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (version != <span class="pl-s"><span class="pl-pds">&#39;</span>7<span class="pl-pds">&#39;</span></span> &amp;&amp; version != <span class="pl-s"><span class="pl-pds">&#39;</span>9<span class="pl-pds">&#39;</span></span>)    <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not GIF<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6538"></td>
          <td id="LC6538" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>)                <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not GIF<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6539"></td>
          <td id="LC6539" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6540"></td>
          <td id="LC6540" class="blob-code blob-code-inner js-file-line">   stbi__g_failure_reason = <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L6541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6541"></td>
          <td id="LC6541" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">w</span> = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L6542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6542"></td>
          <td id="LC6542" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">h</span> = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L6543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6543"></td>
          <td id="LC6543" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">flags</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6544"></td>
          <td id="LC6544" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">bgindex</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6545"></td>
          <td id="LC6545" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">ratio</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6546"></td>
          <td id="LC6546" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">transparent</span> = -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6547"></td>
          <td id="LC6547" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6548"></td>
          <td id="LC6548" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">w</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6549"></td>
          <td id="LC6549" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">h</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6550"></td>
          <td id="LC6550" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6551"></td>
          <td id="LC6551" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp != <span class="pl-c1">0</span>) *comp = <span class="pl-c1">4</span>;  <span class="pl-c"><span class="pl-c">//</span> can&#39;t actually tell whether it&#39;s 3 or 4 until we parse the comments</span></td>
        </tr>
        <tr>
          <td id="L6552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6552"></td>
          <td id="LC6552" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6553"></td>
          <td id="LC6553" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (is_info) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6554"></td>
          <td id="LC6554" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6555"></td>
          <td id="LC6555" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">flags</span> &amp; <span class="pl-c1">0x80</span>)</td>
        </tr>
        <tr>
          <td id="L6556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6556"></td>
          <td id="LC6556" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__gif_parse_colortable</span>(s,g-&gt;<span class="pl-smi">pal</span>, <span class="pl-c1">2</span> &lt;&lt; (g-&gt;<span class="pl-smi">flags</span> &amp; <span class="pl-c1">7</span>), -<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L6557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6557"></td>
          <td id="LC6557" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6558"></td>
          <td id="LC6558" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6559"></td>
          <td id="LC6559" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6560"></td>
          <td id="LC6560" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6561"></td>
          <td id="LC6561" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__gif_info_raw</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L6562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6562"></td>
          <td id="LC6562" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6563"></td>
          <td id="LC6563" class="blob-code blob-code-inner js-file-line">   stbi__gif* g = (stbi__gif*) <span class="pl-c1">stbi__malloc</span>(<span class="pl-k">sizeof</span>(stbi__gif));</td>
        </tr>
        <tr>
          <td id="L6564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6564"></td>
          <td id="LC6564" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!g) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6565"></td>
          <td id="LC6565" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__gif_header</span>(s, g, comp, <span class="pl-c1">1</span>)) {</td>
        </tr>
        <tr>
          <td id="L6566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6566"></td>
          <td id="LC6566" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(g);</td>
        </tr>
        <tr>
          <td id="L6567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6567"></td>
          <td id="LC6567" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L6568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6568"></td>
          <td id="LC6568" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6569"></td>
          <td id="LC6569" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6570"></td>
          <td id="LC6570" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (x) *x = g-&gt;<span class="pl-smi">w</span>;</td>
        </tr>
        <tr>
          <td id="L6571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6571"></td>
          <td id="LC6571" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (y) *y = g-&gt;<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L6572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6572"></td>
          <td id="LC6572" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(g);</td>
        </tr>
        <tr>
          <td id="L6573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6573"></td>
          <td id="LC6573" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6574"></td>
          <td id="LC6574" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6575"></td>
          <td id="LC6575" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6576"></td>
          <td id="LC6576" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__out_gif_code</span>(stbi__gif *g, stbi__uint16 code)</td>
        </tr>
        <tr>
          <td id="L6577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6577"></td>
          <td id="LC6577" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6578"></td>
          <td id="LC6578" class="blob-code blob-code-inner js-file-line">   stbi_uc *p, *c;</td>
        </tr>
        <tr>
          <td id="L6579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6579"></td>
          <td id="LC6579" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> idx;</td>
        </tr>
        <tr>
          <td id="L6580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6580"></td>
          <td id="LC6580" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6581"></td>
          <td id="LC6581" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> recurse to decode the prefixes, since the linked-list is backwards,</span></td>
        </tr>
        <tr>
          <td id="L6582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6582"></td>
          <td id="LC6582" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> and working backwards through an interleaved image would be nasty</span></td>
        </tr>
        <tr>
          <td id="L6583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6583"></td>
          <td id="LC6583" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">codes</span>[code].<span class="pl-smi">prefix</span> &gt;= <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L6584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6584"></td>
          <td id="LC6584" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__out_gif_code</span>(g, g-&gt;<span class="pl-smi">codes</span>[code].<span class="pl-smi">prefix</span>);</td>
        </tr>
        <tr>
          <td id="L6585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6585"></td>
          <td id="LC6585" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6586"></td>
          <td id="LC6586" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">cur_y</span> &gt;= g-&gt;<span class="pl-smi">max_y</span>) <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L6587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6587"></td>
          <td id="LC6587" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6588"></td>
          <td id="LC6588" class="blob-code blob-code-inner js-file-line">   idx = g-&gt;<span class="pl-smi">cur_x</span> + g-&gt;<span class="pl-smi">cur_y</span>;</td>
        </tr>
        <tr>
          <td id="L6589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6589"></td>
          <td id="LC6589" class="blob-code blob-code-inner js-file-line">   p = &amp;g-&gt;<span class="pl-smi">out</span>[idx];</td>
        </tr>
        <tr>
          <td id="L6590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6590"></td>
          <td id="LC6590" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">history</span>[idx / <span class="pl-c1">4</span>] = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6591"></td>
          <td id="LC6591" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6592"></td>
          <td id="LC6592" class="blob-code blob-code-inner js-file-line">   c = &amp;g-&gt;<span class="pl-smi">color_table</span>[g-&gt;<span class="pl-smi">codes</span>[code].<span class="pl-smi">suffix</span> * <span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L6593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6593"></td>
          <td id="LC6593" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (c[<span class="pl-c1">3</span>] &gt; <span class="pl-c1">128</span>) { <span class="pl-c"><span class="pl-c">//</span> don&#39;t render transparent pixels;</span></td>
        </tr>
        <tr>
          <td id="L6594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6594"></td>
          <td id="LC6594" class="blob-code blob-code-inner js-file-line">      p[<span class="pl-c1">0</span>] = c[<span class="pl-c1">2</span>];</td>
        </tr>
        <tr>
          <td id="L6595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6595"></td>
          <td id="LC6595" class="blob-code blob-code-inner js-file-line">      p[<span class="pl-c1">1</span>] = c[<span class="pl-c1">1</span>];</td>
        </tr>
        <tr>
          <td id="L6596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6596"></td>
          <td id="LC6596" class="blob-code blob-code-inner js-file-line">      p[<span class="pl-c1">2</span>] = c[<span class="pl-c1">0</span>];</td>
        </tr>
        <tr>
          <td id="L6597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6597"></td>
          <td id="LC6597" class="blob-code blob-code-inner js-file-line">      p[<span class="pl-c1">3</span>] = c[<span class="pl-c1">3</span>];</td>
        </tr>
        <tr>
          <td id="L6598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6598"></td>
          <td id="LC6598" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6599"></td>
          <td id="LC6599" class="blob-code blob-code-inner js-file-line">   g-&gt;<span class="pl-smi">cur_x</span> += <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6600"></td>
          <td id="LC6600" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6601"></td>
          <td id="LC6601" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">cur_x</span> &gt;= g-&gt;<span class="pl-smi">max_x</span>) {</td>
        </tr>
        <tr>
          <td id="L6602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6602"></td>
          <td id="LC6602" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">cur_x</span> = g-&gt;<span class="pl-smi">start_x</span>;</td>
        </tr>
        <tr>
          <td id="L6603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6603"></td>
          <td id="LC6603" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">cur_y</span> += g-&gt;<span class="pl-smi">step</span>;</td>
        </tr>
        <tr>
          <td id="L6604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6604"></td>
          <td id="LC6604" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6605"></td>
          <td id="LC6605" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (g-&gt;<span class="pl-smi">cur_y</span> &gt;= g-&gt;<span class="pl-smi">max_y</span> &amp;&amp; g-&gt;<span class="pl-smi">parse</span> &gt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6606"></td>
          <td id="LC6606" class="blob-code blob-code-inner js-file-line">         g-&gt;<span class="pl-smi">step</span> = (<span class="pl-c1">1</span> &lt;&lt; g-&gt;<span class="pl-smi">parse</span>) * g-&gt;<span class="pl-smi">line_size</span>;</td>
        </tr>
        <tr>
          <td id="L6607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6607"></td>
          <td id="LC6607" class="blob-code blob-code-inner js-file-line">         g-&gt;<span class="pl-smi">cur_y</span> = g-&gt;<span class="pl-smi">start_y</span> + (g-&gt;<span class="pl-smi">step</span> &gt;&gt; <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L6608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6608"></td>
          <td id="LC6608" class="blob-code blob-code-inner js-file-line">         --g-&gt;<span class="pl-smi">parse</span>;</td>
        </tr>
        <tr>
          <td id="L6609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6609"></td>
          <td id="LC6609" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6610"></td>
          <td id="LC6610" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6611"></td>
          <td id="LC6611" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6612"></td>
          <td id="LC6612" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6613"></td>
          <td id="LC6613" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__process_gif_raster</span>(stbi__context *s, stbi__gif *g)</td>
        </tr>
        <tr>
          <td id="L6614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6614"></td>
          <td id="LC6614" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6615"></td>
          <td id="LC6615" class="blob-code blob-code-inner js-file-line">   stbi_uc lzw_cs;</td>
        </tr>
        <tr>
          <td id="L6616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6616"></td>
          <td id="LC6616" class="blob-code blob-code-inner js-file-line">   stbi__int32 len, init_code;</td>
        </tr>
        <tr>
          <td id="L6617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6617"></td>
          <td id="LC6617" class="blob-code blob-code-inner js-file-line">   stbi__uint32 first;</td>
        </tr>
        <tr>
          <td id="L6618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6618"></td>
          <td id="LC6618" class="blob-code blob-code-inner js-file-line">   stbi__int32 codesize, codemask, avail, oldcode, bits, valid_bits, clear;</td>
        </tr>
        <tr>
          <td id="L6619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6619"></td>
          <td id="LC6619" class="blob-code blob-code-inner js-file-line">   stbi__gif_lzw *p;</td>
        </tr>
        <tr>
          <td id="L6620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6620"></td>
          <td id="LC6620" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6621"></td>
          <td id="LC6621" class="blob-code blob-code-inner js-file-line">   lzw_cs = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6622"></td>
          <td id="LC6622" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (lzw_cs &gt; <span class="pl-c1">12</span>) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L6623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6623"></td>
          <td id="LC6623" class="blob-code blob-code-inner js-file-line">   clear = <span class="pl-c1">1</span> &lt;&lt; lzw_cs;</td>
        </tr>
        <tr>
          <td id="L6624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6624"></td>
          <td id="LC6624" class="blob-code blob-code-inner js-file-line">   first = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6625"></td>
          <td id="LC6625" class="blob-code blob-code-inner js-file-line">   codesize = lzw_cs + <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6626"></td>
          <td id="LC6626" class="blob-code blob-code-inner js-file-line">   codemask = (<span class="pl-c1">1</span> &lt;&lt; codesize) - <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6627"></td>
          <td id="LC6627" class="blob-code blob-code-inner js-file-line">   bits = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6628"></td>
          <td id="LC6628" class="blob-code blob-code-inner js-file-line">   valid_bits = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6629"></td>
          <td id="LC6629" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (init_code = <span class="pl-c1">0</span>; init_code &lt; clear; init_code++) {</td>
        </tr>
        <tr>
          <td id="L6630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6630"></td>
          <td id="LC6630" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">codes</span>[init_code].<span class="pl-smi">prefix</span> = -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6631"></td>
          <td id="LC6631" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">codes</span>[init_code].<span class="pl-smi">first</span> = (stbi_uc) init_code;</td>
        </tr>
        <tr>
          <td id="L6632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6632"></td>
          <td id="LC6632" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">codes</span>[init_code].<span class="pl-smi">suffix</span> = (stbi_uc) init_code;</td>
        </tr>
        <tr>
          <td id="L6633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6633"></td>
          <td id="LC6633" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6634"></td>
          <td id="LC6634" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6635"></td>
          <td id="LC6635" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> support no starting clear code</span></td>
        </tr>
        <tr>
          <td id="L6636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6636"></td>
          <td id="LC6636" class="blob-code blob-code-inner js-file-line">   avail = clear+<span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L6637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6637"></td>
          <td id="LC6637" class="blob-code blob-code-inner js-file-line">   oldcode = -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6638"></td>
          <td id="LC6638" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6639"></td>
          <td id="LC6639" class="blob-code blob-code-inner js-file-line">   len = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6640"></td>
          <td id="LC6640" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(;;) {</td>
        </tr>
        <tr>
          <td id="L6641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6641"></td>
          <td id="LC6641" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (valid_bits &lt; codesize) {</td>
        </tr>
        <tr>
          <td id="L6642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6642"></td>
          <td id="LC6642" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (len == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6643"></td>
          <td id="LC6643" class="blob-code blob-code-inner js-file-line">            len = <span class="pl-c1">stbi__get8</span>(s); <span class="pl-c"><span class="pl-c">//</span> start new block</span></td>
        </tr>
        <tr>
          <td id="L6644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6644"></td>
          <td id="LC6644" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (len == <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L6645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6645"></td>
          <td id="LC6645" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> g-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L6646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6646"></td>
          <td id="LC6646" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6647"></td>
          <td id="LC6647" class="blob-code blob-code-inner js-file-line">         --len;</td>
        </tr>
        <tr>
          <td id="L6648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6648"></td>
          <td id="LC6648" class="blob-code blob-code-inner js-file-line">         bits |= (stbi__int32) <span class="pl-c1">stbi__get8</span>(s) &lt;&lt; valid_bits;</td>
        </tr>
        <tr>
          <td id="L6649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6649"></td>
          <td id="LC6649" class="blob-code blob-code-inner js-file-line">         valid_bits += <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L6650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6650"></td>
          <td id="LC6650" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6651"></td>
          <td id="LC6651" class="blob-code blob-code-inner js-file-line">         stbi__int32 code = bits &amp; codemask;</td>
        </tr>
        <tr>
          <td id="L6652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6652"></td>
          <td id="LC6652" class="blob-code blob-code-inner js-file-line">         bits &gt;&gt;= codesize;</td>
        </tr>
        <tr>
          <td id="L6653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6653"></td>
          <td id="LC6653" class="blob-code blob-code-inner js-file-line">         valid_bits -= codesize;</td>
        </tr>
        <tr>
          <td id="L6654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6654"></td>
          <td id="LC6654" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> @OPTIMIZE: is there some way we can accelerate the non-clear path?</span></td>
        </tr>
        <tr>
          <td id="L6655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6655"></td>
          <td id="LC6655" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (code == clear) {  <span class="pl-c"><span class="pl-c">//</span> clear code</span></td>
        </tr>
        <tr>
          <td id="L6656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6656"></td>
          <td id="LC6656" class="blob-code blob-code-inner js-file-line">            codesize = lzw_cs + <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6657"></td>
          <td id="LC6657" class="blob-code blob-code-inner js-file-line">            codemask = (<span class="pl-c1">1</span> &lt;&lt; codesize) - <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6658"></td>
          <td id="LC6658" class="blob-code blob-code-inner js-file-line">            avail = clear + <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L6659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6659"></td>
          <td id="LC6659" class="blob-code blob-code-inner js-file-line">            oldcode = -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6660"></td>
          <td id="LC6660" class="blob-code blob-code-inner js-file-line">            first = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6661"></td>
          <td id="LC6661" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (code == clear + <span class="pl-c1">1</span>) { <span class="pl-c"><span class="pl-c">//</span> end of stream code</span></td>
        </tr>
        <tr>
          <td id="L6662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6662"></td>
          <td id="LC6662" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__skip</span>(s, len);</td>
        </tr>
        <tr>
          <td id="L6663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6663"></td>
          <td id="LC6663" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> ((len = <span class="pl-c1">stbi__get8</span>(s)) &gt; <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L6664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6664"></td>
          <td id="LC6664" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__skip</span>(s,len);</td>
        </tr>
        <tr>
          <td id="L6665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6665"></td>
          <td id="LC6665" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> g-&gt;<span class="pl-smi">out</span>;</td>
        </tr>
        <tr>
          <td id="L6666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6666"></td>
          <td id="LC6666" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (code &lt;= avail) {</td>
        </tr>
        <tr>
          <td id="L6667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6667"></td>
          <td id="LC6667" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first) {</td>
        </tr>
        <tr>
          <td id="L6668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6668"></td>
          <td id="LC6668" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no clear code<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6669"></td>
          <td id="LC6669" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6670"></td>
          <td id="LC6670" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6671"></td>
          <td id="LC6671" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (oldcode &gt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6672"></td>
          <td id="LC6672" class="blob-code blob-code-inner js-file-line">               p = &amp;g-&gt;<span class="pl-smi">codes</span>[avail++];</td>
        </tr>
        <tr>
          <td id="L6673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6673"></td>
          <td id="LC6673" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (avail &gt; <span class="pl-c1">8192</span>) {</td>
        </tr>
        <tr>
          <td id="L6674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6674"></td>
          <td id="LC6674" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too many codes<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6675"></td>
          <td id="LC6675" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6676"></td>
          <td id="LC6676" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6677"></td>
          <td id="LC6677" class="blob-code blob-code-inner js-file-line">               p-&gt;<span class="pl-smi">prefix</span> = (stbi__int16) oldcode;</td>
        </tr>
        <tr>
          <td id="L6678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6678"></td>
          <td id="LC6678" class="blob-code blob-code-inner js-file-line">               p-&gt;<span class="pl-smi">first</span> = g-&gt;<span class="pl-smi">codes</span>[oldcode].<span class="pl-smi">first</span>;</td>
        </tr>
        <tr>
          <td id="L6679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6679"></td>
          <td id="LC6679" class="blob-code blob-code-inner js-file-line">               p-&gt;<span class="pl-smi">suffix</span> = (code == avail) ? p-&gt;<span class="pl-smi">first</span> : g-&gt;<span class="pl-smi">codes</span>[code].<span class="pl-smi">first</span>;</td>
        </tr>
        <tr>
          <td id="L6680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6680"></td>
          <td id="LC6680" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (code == avail)</td>
        </tr>
        <tr>
          <td id="L6681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6681"></td>
          <td id="LC6681" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>illegal code in raster<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6682"></td>
          <td id="LC6682" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6683"></td>
          <td id="LC6683" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__out_gif_code</span>(g, (stbi__uint16) code);</td>
        </tr>
        <tr>
          <td id="L6684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6684"></td>
          <td id="LC6684" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6685"></td>
          <td id="LC6685" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((avail &amp; codemask) == <span class="pl-c1">0</span> &amp;&amp; avail &lt;= <span class="pl-c1">0x0FFF</span>) {</td>
        </tr>
        <tr>
          <td id="L6686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6686"></td>
          <td id="LC6686" class="blob-code blob-code-inner js-file-line">               codesize++;</td>
        </tr>
        <tr>
          <td id="L6687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6687"></td>
          <td id="LC6687" class="blob-code blob-code-inner js-file-line">               codemask = (<span class="pl-c1">1</span> &lt;&lt; codesize) - <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6688"></td>
          <td id="LC6688" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6689"></td>
          <td id="LC6689" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6690"></td>
          <td id="LC6690" class="blob-code blob-code-inner js-file-line">            oldcode = code;</td>
        </tr>
        <tr>
          <td id="L6691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6691"></td>
          <td id="LC6691" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6692"></td>
          <td id="LC6692" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>illegal code in raster<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6693"></td>
          <td id="LC6693" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6694"></td>
          <td id="LC6694" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6695"></td>
          <td id="LC6695" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6696"></td>
          <td id="LC6696" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6697"></td>
          <td id="LC6697" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6698"></td>
          <td id="LC6698" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> this function is designed to support animated gifs, although stb_image doesn&#39;t support it</span></td>
        </tr>
        <tr>
          <td id="L6699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6699"></td>
          <td id="LC6699" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> two back is the image from two frames ago, used for a very specific disposal format</span></td>
        </tr>
        <tr>
          <td id="L6700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6700"></td>
          <td id="LC6700" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> stbi_uc *<span class="pl-c1">stbi__gif_load_next</span>(stbi__context *s, stbi__gif *g, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi_uc *two_back)</td>
        </tr>
        <tr>
          <td id="L6701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6701"></td>
          <td id="LC6701" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6702"></td>
          <td id="LC6702" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> dispose;</td>
        </tr>
        <tr>
          <td id="L6703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6703"></td>
          <td id="LC6703" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> first_frame;</td>
        </tr>
        <tr>
          <td id="L6704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6704"></td>
          <td id="LC6704" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> <span class="pl-bu">pi</span>;</td>
        </tr>
        <tr>
          <td id="L6705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6705"></td>
          <td id="LC6705" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> pcount;</td>
        </tr>
        <tr>
          <td id="L6706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6706"></td>
          <td id="LC6706" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(req_comp);</td>
        </tr>
        <tr>
          <td id="L6707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6707"></td>
          <td id="LC6707" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6708"></td>
          <td id="LC6708" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> on first frame, any non-written pixels get the background colour (non-transparent)</span></td>
        </tr>
        <tr>
          <td id="L6709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6709"></td>
          <td id="LC6709" class="blob-code blob-code-inner js-file-line">   first_frame = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6710"></td>
          <td id="LC6710" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">out</span> == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6711"></td>
          <td id="LC6711" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!<span class="pl-c1">stbi__gif_header</span>(s, g, comp,<span class="pl-c1">0</span>)) <span class="pl-k">return</span> <span class="pl-c1">0</span>; <span class="pl-c"><span class="pl-c">//</span> stbi__g_failure_reason set by stbi__gif_header</span></td>
        </tr>
        <tr>
          <td id="L6712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6712"></td>
          <td id="LC6712" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad3sizes_valid</span>(<span class="pl-c1">4</span>, g-&gt;<span class="pl-smi">w</span>, g-&gt;<span class="pl-smi">h</span>, <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L6713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6713"></td>
          <td id="LC6713" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>GIF image is too large<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6714"></td>
          <td id="LC6714" class="blob-code blob-code-inner js-file-line">      pcount = g-&gt;<span class="pl-smi">w</span> * g-&gt;<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L6715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6715"></td>
          <td id="LC6715" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">out</span> = (stbi_uc *) <span class="pl-c1">stbi__malloc</span>(<span class="pl-c1">4</span> * pcount);</td>
        </tr>
        <tr>
          <td id="L6716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6716"></td>
          <td id="LC6716" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">background</span> = (stbi_uc *) <span class="pl-c1">stbi__malloc</span>(<span class="pl-c1">4</span> * pcount);</td>
        </tr>
        <tr>
          <td id="L6717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6717"></td>
          <td id="LC6717" class="blob-code blob-code-inner js-file-line">      g-&gt;<span class="pl-smi">history</span> = (stbi_uc *) <span class="pl-c1">stbi__malloc</span>(pcount);</td>
        </tr>
        <tr>
          <td id="L6718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6718"></td>
          <td id="LC6718" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!g-&gt;<span class="pl-smi">out</span> || !g-&gt;<span class="pl-smi">background</span> || !g-&gt;<span class="pl-smi">history</span>)</td>
        </tr>
        <tr>
          <td id="L6719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6719"></td>
          <td id="LC6719" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6720"></td>
          <td id="LC6720" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6721"></td>
          <td id="LC6721" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> image is treated as &quot;transparent&quot; at the start - ie, nothing overwrites the current background;</span></td>
        </tr>
        <tr>
          <td id="L6722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6722"></td>
          <td id="LC6722" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> background colour is only used for pixels that are not rendered first frame, after that &quot;background&quot;</span></td>
        </tr>
        <tr>
          <td id="L6723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6723"></td>
          <td id="LC6723" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> color refers to the color that was there the previous frame.</span></td>
        </tr>
        <tr>
          <td id="L6724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6724"></td>
          <td id="LC6724" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memset</span>(g-&gt;<span class="pl-smi">out</span>, <span class="pl-c1">0x00</span>, <span class="pl-c1">4</span> * pcount);</td>
        </tr>
        <tr>
          <td id="L6725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6725"></td>
          <td id="LC6725" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memset</span>(g-&gt;<span class="pl-smi">background</span>, <span class="pl-c1">0x00</span>, <span class="pl-c1">4</span> * pcount); <span class="pl-c"><span class="pl-c">//</span> state of the background (starts transparent)</span></td>
        </tr>
        <tr>
          <td id="L6726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6726"></td>
          <td id="LC6726" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memset</span>(g-&gt;<span class="pl-smi">history</span>, <span class="pl-c1">0x00</span>, pcount);        <span class="pl-c"><span class="pl-c">//</span> pixels that were affected previous frame</span></td>
        </tr>
        <tr>
          <td id="L6727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6727"></td>
          <td id="LC6727" class="blob-code blob-code-inner js-file-line">      first_frame = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6728"></td>
          <td id="LC6728" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6729"></td>
          <td id="LC6729" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> second frame - how do we dispose of the previous one?</span></td>
        </tr>
        <tr>
          <td id="L6730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6730"></td>
          <td id="LC6730" class="blob-code blob-code-inner js-file-line">      dispose = (g-&gt;<span class="pl-smi">eflags</span> &amp; <span class="pl-c1">0x1C</span>) &gt;&gt; <span class="pl-c1">2</span>;</td>
        </tr>
        <tr>
          <td id="L6731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6731"></td>
          <td id="LC6731" class="blob-code blob-code-inner js-file-line">      pcount = g-&gt;<span class="pl-smi">w</span> * g-&gt;<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L6732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6732"></td>
          <td id="LC6732" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6733"></td>
          <td id="LC6733" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((dispose == <span class="pl-c1">3</span>) &amp;&amp; (two_back == <span class="pl-c1">0</span>)) {</td>
        </tr>
        <tr>
          <td id="L6734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6734"></td>
          <td id="LC6734" class="blob-code blob-code-inner js-file-line">         dispose = <span class="pl-c1">2</span>; <span class="pl-c"><span class="pl-c">//</span> if I don&#39;t have an image to revert back to, default to the old background</span></td>
        </tr>
        <tr>
          <td id="L6735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6735"></td>
          <td id="LC6735" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6736"></td>
          <td id="LC6736" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6737"></td>
          <td id="LC6737" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (dispose == <span class="pl-c1">3</span>) { <span class="pl-c"><span class="pl-c">//</span> use previous graphic</span></td>
        </tr>
        <tr>
          <td id="L6738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6738"></td>
          <td id="LC6738" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (<span class="pl-bu">pi</span> = <span class="pl-c1">0</span>; <span class="pl-bu">pi</span> &lt; pcount; ++<span class="pl-bu">pi</span>) {</td>
        </tr>
        <tr>
          <td id="L6739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6739"></td>
          <td id="LC6739" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">history</span>[<span class="pl-bu">pi</span>]) {</td>
        </tr>
        <tr>
          <td id="L6740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6740"></td>
          <td id="LC6740" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">memcpy</span>( &amp;g-&gt;<span class="pl-smi">out</span>[<span class="pl-bu">pi</span> * <span class="pl-c1">4</span>], &amp;two_back[<span class="pl-bu">pi</span> * <span class="pl-c1">4</span>], <span class="pl-c1">4</span> );</td>
        </tr>
        <tr>
          <td id="L6741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6741"></td>
          <td id="LC6741" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6742"></td>
          <td id="LC6742" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6743"></td>
          <td id="LC6743" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (dispose == <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L6744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6744"></td>
          <td id="LC6744" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> restore what was changed last frame to background before that frame;</span></td>
        </tr>
        <tr>
          <td id="L6745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6745"></td>
          <td id="LC6745" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (<span class="pl-bu">pi</span> = <span class="pl-c1">0</span>; <span class="pl-bu">pi</span> &lt; pcount; ++<span class="pl-bu">pi</span>) {</td>
        </tr>
        <tr>
          <td id="L6746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6746"></td>
          <td id="LC6746" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">history</span>[<span class="pl-bu">pi</span>]) {</td>
        </tr>
        <tr>
          <td id="L6747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6747"></td>
          <td id="LC6747" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">memcpy</span>( &amp;g-&gt;<span class="pl-smi">out</span>[<span class="pl-bu">pi</span> * <span class="pl-c1">4</span>], &amp;g-&gt;<span class="pl-smi">background</span>[<span class="pl-bu">pi</span> * <span class="pl-c1">4</span>], <span class="pl-c1">4</span> );</td>
        </tr>
        <tr>
          <td id="L6748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6748"></td>
          <td id="LC6748" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6749"></td>
          <td id="LC6749" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6750"></td>
          <td id="LC6750" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6751"></td>
          <td id="LC6751" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> This is a non-disposal case eithe way, so just</span></td>
        </tr>
        <tr>
          <td id="L6752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6752"></td>
          <td id="LC6752" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> leave the pixels as is, and they will become the new background</span></td>
        </tr>
        <tr>
          <td id="L6753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6753"></td>
          <td id="LC6753" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> 1: do not dispose</span></td>
        </tr>
        <tr>
          <td id="L6754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6754"></td>
          <td id="LC6754" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> 0:  not specified.</span></td>
        </tr>
        <tr>
          <td id="L6755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6755"></td>
          <td id="LC6755" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6756"></td>
          <td id="LC6756" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6757"></td>
          <td id="LC6757" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> background is what out is after the undoing of the previou frame;</span></td>
        </tr>
        <tr>
          <td id="L6758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6758"></td>
          <td id="LC6758" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memcpy</span>( g-&gt;<span class="pl-smi">background</span>, g-&gt;<span class="pl-smi">out</span>, <span class="pl-c1">4</span> * g-&gt;<span class="pl-smi">w</span> * g-&gt;<span class="pl-smi">h</span> );</td>
        </tr>
        <tr>
          <td id="L6759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6759"></td>
          <td id="LC6759" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6760"></td>
          <td id="LC6760" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6761"></td>
          <td id="LC6761" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> clear my history;</span></td>
        </tr>
        <tr>
          <td id="L6762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6762"></td>
          <td id="LC6762" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>( g-&gt;<span class="pl-smi">history</span>, <span class="pl-c1">0x00</span>, g-&gt;<span class="pl-smi">w</span> * g-&gt;<span class="pl-smi">h</span> );        <span class="pl-c"><span class="pl-c">//</span> pixels that were affected previous frame</span></td>
        </tr>
        <tr>
          <td id="L6763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6763"></td>
          <td id="LC6763" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6764"></td>
          <td id="LC6764" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (;;) {</td>
        </tr>
        <tr>
          <td id="L6765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6765"></td>
          <td id="LC6765" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> tag = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6766"></td>
          <td id="LC6766" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (tag) {</td>
        </tr>
        <tr>
          <td id="L6767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6767"></td>
          <td id="LC6767" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">0x2C</span>: <span class="pl-c"><span class="pl-c">/*</span> Image Descriptor <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L6768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6768"></td>
          <td id="LC6768" class="blob-code blob-code-inner js-file-line">         {</td>
        </tr>
        <tr>
          <td id="L6769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6769"></td>
          <td id="LC6769" class="blob-code blob-code-inner js-file-line">            stbi__int32 x, y, w, h;</td>
        </tr>
        <tr>
          <td id="L6770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6770"></td>
          <td id="LC6770" class="blob-code blob-code-inner js-file-line">            stbi_uc *o;</td>
        </tr>
        <tr>
          <td id="L6771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6771"></td>
          <td id="LC6771" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6772"></td>
          <td id="LC6772" class="blob-code blob-code-inner js-file-line">            x = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L6773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6773"></td>
          <td id="LC6773" class="blob-code blob-code-inner js-file-line">            y = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L6774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6774"></td>
          <td id="LC6774" class="blob-code blob-code-inner js-file-line">            w = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L6775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6775"></td>
          <td id="LC6775" class="blob-code blob-code-inner js-file-line">            h = <span class="pl-c1">stbi__get16le</span>(s);</td>
        </tr>
        <tr>
          <td id="L6776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6776"></td>
          <td id="LC6776" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (((x + w) &gt; (g-&gt;<span class="pl-smi">w</span>)) || ((y + h) &gt; (g-&gt;<span class="pl-smi">h</span>)))</td>
        </tr>
        <tr>
          <td id="L6777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6777"></td>
          <td id="LC6777" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bad Image Descriptor<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6778"></td>
          <td id="LC6778" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6779"></td>
          <td id="LC6779" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">line_size</span> = g-&gt;<span class="pl-smi">w</span> * <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6780"></td>
          <td id="LC6780" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">start_x</span> = x * <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6781"></td>
          <td id="LC6781" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">start_y</span> = y * g-&gt;<span class="pl-smi">line_size</span>;</td>
        </tr>
        <tr>
          <td id="L6782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6782"></td>
          <td id="LC6782" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">max_x</span>   = g-&gt;<span class="pl-smi">start_x</span> + w * <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6783"></td>
          <td id="LC6783" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">max_y</span>   = g-&gt;<span class="pl-smi">start_y</span> + h * g-&gt;<span class="pl-smi">line_size</span>;</td>
        </tr>
        <tr>
          <td id="L6784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6784"></td>
          <td id="LC6784" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">cur_x</span>   = g-&gt;<span class="pl-smi">start_x</span>;</td>
        </tr>
        <tr>
          <td id="L6785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6785"></td>
          <td id="LC6785" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">cur_y</span>   = g-&gt;<span class="pl-smi">start_y</span>;</td>
        </tr>
        <tr>
          <td id="L6786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6786"></td>
          <td id="LC6786" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6787"></td>
          <td id="LC6787" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> if the width of the specified rectangle is 0, that means</span></td>
        </tr>
        <tr>
          <td id="L6788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6788"></td>
          <td id="LC6788" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> we may not see *any* pixels or the image is malformed;</span></td>
        </tr>
        <tr>
          <td id="L6789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6789"></td>
          <td id="LC6789" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> to make sure this is caught, move the current y down to</span></td>
        </tr>
        <tr>
          <td id="L6790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6790"></td>
          <td id="LC6790" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> max_y (which is what out_gif_code checks).</span></td>
        </tr>
        <tr>
          <td id="L6791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6791"></td>
          <td id="LC6791" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (w == <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L6792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6792"></td>
          <td id="LC6792" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">cur_y</span> = g-&gt;<span class="pl-smi">max_y</span>;</td>
        </tr>
        <tr>
          <td id="L6793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6793"></td>
          <td id="LC6793" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6794"></td>
          <td id="LC6794" class="blob-code blob-code-inner js-file-line">            g-&gt;<span class="pl-smi">lflags</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6795"></td>
          <td id="LC6795" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6796"></td>
          <td id="LC6796" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">lflags</span> &amp; <span class="pl-c1">0x40</span>) {</td>
        </tr>
        <tr>
          <td id="L6797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6797"></td>
          <td id="LC6797" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">step</span> = <span class="pl-c1">8</span> * g-&gt;<span class="pl-smi">line_size</span>; <span class="pl-c"><span class="pl-c">//</span> first interlaced spacing</span></td>
        </tr>
        <tr>
          <td id="L6798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6798"></td>
          <td id="LC6798" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">parse</span> = <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L6799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6799"></td>
          <td id="LC6799" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6800"></td>
          <td id="LC6800" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">step</span> = g-&gt;<span class="pl-smi">line_size</span>;</td>
        </tr>
        <tr>
          <td id="L6801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6801"></td>
          <td id="LC6801" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">parse</span> = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6802"></td>
          <td id="LC6802" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6803"></td>
          <td id="LC6803" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6804"></td>
          <td id="LC6804" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">lflags</span> &amp; <span class="pl-c1">0x80</span>) {</td>
        </tr>
        <tr>
          <td id="L6805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6805"></td>
          <td id="LC6805" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__gif_parse_colortable</span>(s,g-&gt;<span class="pl-smi">lpal</span>, <span class="pl-c1">2</span> &lt;&lt; (g-&gt;<span class="pl-smi">lflags</span> &amp; <span class="pl-c1">7</span>), g-&gt;<span class="pl-smi">eflags</span> &amp; <span class="pl-c1">0x01</span> ? g-&gt;<span class="pl-smi">transparent</span> : -<span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L6806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6806"></td>
          <td id="LC6806" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">color_table</span> = (stbi_uc *) g-&gt;<span class="pl-smi">lpal</span>;</td>
        </tr>
        <tr>
          <td id="L6807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6807"></td>
          <td id="LC6807" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">flags</span> &amp; <span class="pl-c1">0x80</span>) {</td>
        </tr>
        <tr>
          <td id="L6808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6808"></td>
          <td id="LC6808" class="blob-code blob-code-inner js-file-line">               g-&gt;<span class="pl-smi">color_table</span> = (stbi_uc *) g-&gt;<span class="pl-smi">pal</span>;</td>
        </tr>
        <tr>
          <td id="L6809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6809"></td>
          <td id="LC6809" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L6810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6810"></td>
          <td id="LC6810" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>missing color table<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6811"></td>
          <td id="LC6811" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6812"></td>
          <td id="LC6812" class="blob-code blob-code-inner js-file-line">            o = <span class="pl-c1">stbi__process_gif_raster</span>(s, g);</td>
        </tr>
        <tr>
          <td id="L6813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6813"></td>
          <td id="LC6813" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!o) <span class="pl-k">return</span> <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L6814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6814"></td>
          <td id="LC6814" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6815"></td>
          <td id="LC6815" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> if this was the first frame,</span></td>
        </tr>
        <tr>
          <td id="L6816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6816"></td>
          <td id="LC6816" class="blob-code blob-code-inner js-file-line">            pcount = g-&gt;<span class="pl-smi">w</span> * g-&gt;<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L6817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6817"></td>
          <td id="LC6817" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (first_frame &amp;&amp; (g-&gt;<span class="pl-smi">bgindex</span> &gt; <span class="pl-c1">0</span>)) {</td>
        </tr>
        <tr>
          <td id="L6818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6818"></td>
          <td id="LC6818" class="blob-code blob-code-inner js-file-line">               <span class="pl-c"><span class="pl-c">//</span> if first frame, any pixel not drawn to gets the background color</span></td>
        </tr>
        <tr>
          <td id="L6819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6819"></td>
          <td id="LC6819" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">for</span> (<span class="pl-bu">pi</span> = <span class="pl-c1">0</span>; <span class="pl-bu">pi</span> &lt; pcount; ++<span class="pl-bu">pi</span>) {</td>
        </tr>
        <tr>
          <td id="L6820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6820"></td>
          <td id="LC6820" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">history</span>[<span class="pl-bu">pi</span>] == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6821"></td>
          <td id="LC6821" class="blob-code blob-code-inner js-file-line">                     g-&gt;<span class="pl-smi">pal</span>[g-&gt;<span class="pl-smi">bgindex</span>][<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>; <span class="pl-c"><span class="pl-c">//</span> just in case it was made transparent, undo that; It will be reset next frame if need be;</span></td>
        </tr>
        <tr>
          <td id="L6822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6822"></td>
          <td id="LC6822" class="blob-code blob-code-inner js-file-line">                     <span class="pl-c1">memcpy</span>( &amp;g-&gt;<span class="pl-smi">out</span>[<span class="pl-bu">pi</span> * <span class="pl-c1">4</span>], &amp;g-&gt;<span class="pl-smi">pal</span>[g-&gt;<span class="pl-smi">bgindex</span>], <span class="pl-c1">4</span> );</td>
        </tr>
        <tr>
          <td id="L6823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6823"></td>
          <td id="LC6823" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L6824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6824"></td>
          <td id="LC6824" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6825"></td>
          <td id="LC6825" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6826"></td>
          <td id="LC6826" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6827"></td>
          <td id="LC6827" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> o;</td>
        </tr>
        <tr>
          <td id="L6828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6828"></td>
          <td id="LC6828" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6829"></td>
          <td id="LC6829" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6830"></td>
          <td id="LC6830" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">0x21</span>: <span class="pl-c"><span class="pl-c">//</span> Comment Extension.</span></td>
        </tr>
        <tr>
          <td id="L6831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6831"></td>
          <td id="LC6831" class="blob-code blob-code-inner js-file-line">         {</td>
        </tr>
        <tr>
          <td id="L6832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6832"></td>
          <td id="LC6832" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> len;</td>
        </tr>
        <tr>
          <td id="L6833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6833"></td>
          <td id="LC6833" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> ext = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6834"></td>
          <td id="LC6834" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (ext == <span class="pl-c1">0xF9</span>) { <span class="pl-c"><span class="pl-c">//</span> Graphic Control Extension.</span></td>
        </tr>
        <tr>
          <td id="L6835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6835"></td>
          <td id="LC6835" class="blob-code blob-code-inner js-file-line">               len = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6836"></td>
          <td id="LC6836" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (len == <span class="pl-c1">4</span>) {</td>
        </tr>
        <tr>
          <td id="L6837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6837"></td>
          <td id="LC6837" class="blob-code blob-code-inner js-file-line">                  g-&gt;<span class="pl-smi">eflags</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6838"></td>
          <td id="LC6838" class="blob-code blob-code-inner js-file-line">                  g-&gt;<span class="pl-smi">delay</span> = <span class="pl-c1">10</span> * <span class="pl-c1">stbi__get16le</span>(s); <span class="pl-c"><span class="pl-c">//</span> delay - 1/100th of a second, saving as 1/1000ths.</span></td>
        </tr>
        <tr>
          <td id="L6839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6839"></td>
          <td id="LC6839" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6840"></td>
          <td id="LC6840" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> unset old transparent</span></td>
        </tr>
        <tr>
          <td id="L6841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6841"></td>
          <td id="LC6841" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">transparent</span> &gt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6842"></td>
          <td id="LC6842" class="blob-code blob-code-inner js-file-line">                     g-&gt;<span class="pl-smi">pal</span>[g-&gt;<span class="pl-smi">transparent</span>][<span class="pl-c1">3</span>] = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L6843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6843"></td>
          <td id="LC6843" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L6844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6844"></td>
          <td id="LC6844" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">eflags</span> &amp; <span class="pl-c1">0x01</span>) {</td>
        </tr>
        <tr>
          <td id="L6845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6845"></td>
          <td id="LC6845" class="blob-code blob-code-inner js-file-line">                     g-&gt;<span class="pl-smi">transparent</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L6846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6846"></td>
          <td id="LC6846" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">if</span> (g-&gt;<span class="pl-smi">transparent</span> &gt;= <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6847"></td>
          <td id="LC6847" class="blob-code blob-code-inner js-file-line">                        g-&gt;<span class="pl-smi">pal</span>[g-&gt;<span class="pl-smi">transparent</span>][<span class="pl-c1">3</span>] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6848"></td>
          <td id="LC6848" class="blob-code blob-code-inner js-file-line">                     }</td>
        </tr>
        <tr>
          <td id="L6849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6849"></td>
          <td id="LC6849" class="blob-code blob-code-inner js-file-line">                  } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6850"></td>
          <td id="LC6850" class="blob-code blob-code-inner js-file-line">                     <span class="pl-c"><span class="pl-c">//</span> don&#39;t need transparent</span></td>
        </tr>
        <tr>
          <td id="L6851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6851"></td>
          <td id="LC6851" class="blob-code blob-code-inner js-file-line">                     <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">1</span>);</td>
        </tr>
        <tr>
          <td id="L6852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6852"></td>
          <td id="LC6852" class="blob-code blob-code-inner js-file-line">                     g-&gt;<span class="pl-smi">transparent</span> = -<span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L6853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6853"></td>
          <td id="LC6853" class="blob-code blob-code-inner js-file-line">                  }</td>
        </tr>
        <tr>
          <td id="L6854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6854"></td>
          <td id="LC6854" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6855"></td>
          <td id="LC6855" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c1">stbi__skip</span>(s, len);</td>
        </tr>
        <tr>
          <td id="L6856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6856"></td>
          <td id="LC6856" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L6857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6857"></td>
          <td id="LC6857" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6858"></td>
          <td id="LC6858" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6859"></td>
          <td id="LC6859" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> ((len = <span class="pl-c1">stbi__get8</span>(s)) != <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L6860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6860"></td>
          <td id="LC6860" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">stbi__skip</span>(s, len);</td>
        </tr>
        <tr>
          <td id="L6861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6861"></td>
          <td id="LC6861" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6862"></td>
          <td id="LC6862" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L6863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6863"></td>
          <td id="LC6863" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6864"></td>
          <td id="LC6864" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6865"></td>
          <td id="LC6865" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">0x3B</span>: <span class="pl-c"><span class="pl-c">//</span> gif stream termination code</span></td>
        </tr>
        <tr>
          <td id="L6866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6866"></td>
          <td id="LC6866" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> (stbi_uc *) s; <span class="pl-c"><span class="pl-c">//</span> using &#39;1&#39; causes warning on some compilers</span></td>
        </tr>
        <tr>
          <td id="L6867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6867"></td>
          <td id="LC6867" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6868"></td>
          <td id="LC6868" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">default</span>:</td>
        </tr>
        <tr>
          <td id="L6869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6869"></td>
          <td id="LC6869" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unknown code<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt GIF<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6870"></td>
          <td id="LC6870" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6871"></td>
          <td id="LC6871" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6872"></td>
          <td id="LC6872" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6873"></td>
          <td id="LC6873" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6874"></td>
          <td id="LC6874" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__load_gif_main_outofmem</span>(stbi__gif *g, stbi_uc *out, <span class="pl-k">int</span> **delays)</td>
        </tr>
        <tr>
          <td id="L6875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6875"></td>
          <td id="LC6875" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6876"></td>
          <td id="LC6876" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(g-&gt;<span class="pl-smi">out</span>);</td>
        </tr>
        <tr>
          <td id="L6877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6877"></td>
          <td id="LC6877" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(g-&gt;<span class="pl-smi">history</span>);</td>
        </tr>
        <tr>
          <td id="L6878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6878"></td>
          <td id="LC6878" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(g-&gt;<span class="pl-smi">background</span>);</td>
        </tr>
        <tr>
          <td id="L6879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6879"></td>
          <td id="LC6879" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6880"></td>
          <td id="LC6880" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (out) <span class="pl-c1">STBI_FREE</span>(out);</td>
        </tr>
        <tr>
          <td id="L6881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6881"></td>
          <td id="LC6881" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (delays &amp;&amp; *delays) <span class="pl-c1">STBI_FREE</span>(*delays);</td>
        </tr>
        <tr>
          <td id="L6882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6882"></td>
          <td id="LC6882" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6883"></td>
          <td id="LC6883" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6884"></td>
          <td id="LC6884" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6885"></td>
          <td id="LC6885" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__load_gif_main</span>(stbi__context *s, <span class="pl-k">int</span> **delays, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *z, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L6886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6886"></td>
          <td id="LC6886" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6887"></td>
          <td id="LC6887" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__gif_test</span>(s)) {</td>
        </tr>
        <tr>
          <td id="L6888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6888"></td>
          <td id="LC6888" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> layers = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6889"></td>
          <td id="LC6889" class="blob-code blob-code-inner js-file-line">      stbi_uc *u = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6890"></td>
          <td id="LC6890" class="blob-code blob-code-inner js-file-line">      stbi_uc *out = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6891"></td>
          <td id="LC6891" class="blob-code blob-code-inner js-file-line">      stbi_uc *two_back = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6892"></td>
          <td id="LC6892" class="blob-code blob-code-inner js-file-line">      stbi__gif g;</td>
        </tr>
        <tr>
          <td id="L6893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6893"></td>
          <td id="LC6893" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> stride;</td>
        </tr>
        <tr>
          <td id="L6894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6894"></td>
          <td id="LC6894" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> out_size = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6895"></td>
          <td id="LC6895" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">int</span> delays_size = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6896"></td>
          <td id="LC6896" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6897"></td>
          <td id="LC6897" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_NOTUSED</span>(out_size);</td>
        </tr>
        <tr>
          <td id="L6898" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6898"></td>
          <td id="LC6898" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_NOTUSED</span>(delays_size);</td>
        </tr>
        <tr>
          <td id="L6899" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6899"></td>
          <td id="LC6899" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6900" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6900"></td>
          <td id="LC6900" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">memset</span>(&amp;g, <span class="pl-c1">0</span>, <span class="pl-k">sizeof</span>(g));</td>
        </tr>
        <tr>
          <td id="L6901" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6901"></td>
          <td id="LC6901" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (delays) {</td>
        </tr>
        <tr>
          <td id="L6902" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6902"></td>
          <td id="LC6902" class="blob-code blob-code-inner js-file-line">         *delays = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6903" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6903"></td>
          <td id="LC6903" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L6904" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6904"></td>
          <td id="LC6904" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6905" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6905"></td>
          <td id="LC6905" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L6906" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6906"></td>
          <td id="LC6906" class="blob-code blob-code-inner js-file-line">         u = <span class="pl-c1">stbi__gif_load_next</span>(s, &amp;g, comp, req_comp, two_back);</td>
        </tr>
        <tr>
          <td id="L6907" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6907"></td>
          <td id="LC6907" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (u == (stbi_uc *) s) u = <span class="pl-c1">0</span>;  <span class="pl-c"><span class="pl-c">//</span> end of animated gif marker</span></td>
        </tr>
        <tr>
          <td id="L6908" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6908"></td>
          <td id="LC6908" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6909" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6909"></td>
          <td id="LC6909" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (u) {</td>
        </tr>
        <tr>
          <td id="L6910" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6910"></td>
          <td id="LC6910" class="blob-code blob-code-inner js-file-line">            *x = g.<span class="pl-smi">w</span>;</td>
        </tr>
        <tr>
          <td id="L6911" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6911"></td>
          <td id="LC6911" class="blob-code blob-code-inner js-file-line">            *y = g.<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L6912" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6912"></td>
          <td id="LC6912" class="blob-code blob-code-inner js-file-line">            ++layers;</td>
        </tr>
        <tr>
          <td id="L6913" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6913"></td>
          <td id="LC6913" class="blob-code blob-code-inner js-file-line">            stride = g.<span class="pl-smi">w</span> * g.<span class="pl-smi">h</span> * <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L6914" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6914"></td>
          <td id="LC6914" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6915" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6915"></td>
          <td id="LC6915" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (out) {</td>
        </tr>
        <tr>
          <td id="L6916" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6916"></td>
          <td id="LC6916" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">void</span> *tmp = (stbi_uc*) <span class="pl-c1">STBI_REALLOC_SIZED</span>( out, out_size, layers * stride );</td>
        </tr>
        <tr>
          <td id="L6917" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6917"></td>
          <td id="LC6917" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!tmp)</td>
        </tr>
        <tr>
          <td id="L6918" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6918"></td>
          <td id="LC6918" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">return</span> <span class="pl-c1">stbi__load_gif_main_outofmem</span>(&amp;g, out, delays);</td>
        </tr>
        <tr>
          <td id="L6919" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6919"></td>
          <td id="LC6919" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6920" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6920"></td>
          <td id="LC6920" class="blob-code blob-code-inner js-file-line">                   out = (stbi_uc*) tmp;</td>
        </tr>
        <tr>
          <td id="L6921" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6921"></td>
          <td id="LC6921" class="blob-code blob-code-inner js-file-line">                   out_size = layers * stride;</td>
        </tr>
        <tr>
          <td id="L6922" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6922"></td>
          <td id="LC6922" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6923" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6923"></td>
          <td id="LC6923" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6924" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6924"></td>
          <td id="LC6924" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (delays) {</td>
        </tr>
        <tr>
          <td id="L6925" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6925"></td>
          <td id="LC6925" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">int</span> *new_delays = (<span class="pl-k">int</span>*) <span class="pl-c1">STBI_REALLOC_SIZED</span>( *delays, delays_size, <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>) * layers );</td>
        </tr>
        <tr>
          <td id="L6926" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6926"></td>
          <td id="LC6926" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!new_delays)</td>
        </tr>
        <tr>
          <td id="L6927" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6927"></td>
          <td id="LC6927" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">return</span> <span class="pl-c1">stbi__load_gif_main_outofmem</span>(&amp;g, out, delays);</td>
        </tr>
        <tr>
          <td id="L6928" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6928"></td>
          <td id="LC6928" class="blob-code blob-code-inner js-file-line">                  *delays = new_delays;</td>
        </tr>
        <tr>
          <td id="L6929" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6929"></td>
          <td id="LC6929" class="blob-code blob-code-inner js-file-line">                  delays_size = layers * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>);</td>
        </tr>
        <tr>
          <td id="L6930" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6930"></td>
          <td id="LC6930" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6931" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6931"></td>
          <td id="LC6931" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6932" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6932"></td>
          <td id="LC6932" class="blob-code blob-code-inner js-file-line">               out = (stbi_uc*)<span class="pl-c1">stbi__malloc</span>( layers * stride );</td>
        </tr>
        <tr>
          <td id="L6933" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6933"></td>
          <td id="LC6933" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (!out)</td>
        </tr>
        <tr>
          <td id="L6934" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6934"></td>
          <td id="LC6934" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">return</span> <span class="pl-c1">stbi__load_gif_main_outofmem</span>(&amp;g, out, delays);</td>
        </tr>
        <tr>
          <td id="L6935" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6935"></td>
          <td id="LC6935" class="blob-code blob-code-inner js-file-line">               out_size = layers * stride;</td>
        </tr>
        <tr>
          <td id="L6936" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6936"></td>
          <td id="LC6936" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (delays) {</td>
        </tr>
        <tr>
          <td id="L6937" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6937"></td>
          <td id="LC6937" class="blob-code blob-code-inner js-file-line">                  *delays = (<span class="pl-k">int</span>*) <span class="pl-c1">stbi__malloc</span>( layers * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>) );</td>
        </tr>
        <tr>
          <td id="L6938" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6938"></td>
          <td id="LC6938" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (!*delays)</td>
        </tr>
        <tr>
          <td id="L6939" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6939"></td>
          <td id="LC6939" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">return</span> <span class="pl-c1">stbi__load_gif_main_outofmem</span>(&amp;g, out, delays);</td>
        </tr>
        <tr>
          <td id="L6940" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6940"></td>
          <td id="LC6940" class="blob-code blob-code-inner js-file-line">                  delays_size = layers * <span class="pl-k">sizeof</span>(<span class="pl-k">int</span>);</td>
        </tr>
        <tr>
          <td id="L6941" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6941"></td>
          <td id="LC6941" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L6942" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6942"></td>
          <td id="LC6942" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6943" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6943"></td>
          <td id="LC6943" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">memcpy</span>( out + ((layers - <span class="pl-c1">1</span>) * stride), u, stride );</td>
        </tr>
        <tr>
          <td id="L6944" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6944"></td>
          <td id="LC6944" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (layers &gt;= <span class="pl-c1">2</span>) {</td>
        </tr>
        <tr>
          <td id="L6945" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6945"></td>
          <td id="LC6945" class="blob-code blob-code-inner js-file-line">               two_back = out - <span class="pl-c1">2</span> * stride;</td>
        </tr>
        <tr>
          <td id="L6946" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6946"></td>
          <td id="LC6946" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6947" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6947"></td>
          <td id="LC6947" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6948" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6948"></td>
          <td id="LC6948" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (delays) {</td>
        </tr>
        <tr>
          <td id="L6949" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6949"></td>
          <td id="LC6949" class="blob-code blob-code-inner js-file-line">               (*delays)[layers - <span class="pl-c1">1U</span>] = g.<span class="pl-smi">delay</span>;</td>
        </tr>
        <tr>
          <td id="L6950" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6950"></td>
          <td id="LC6950" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L6951" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6951"></td>
          <td id="LC6951" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L6952" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6952"></td>
          <td id="LC6952" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (u != <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L6953" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6953"></td>
          <td id="LC6953" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6954" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6954"></td>
          <td id="LC6954" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> free temp buffer;</span></td>
        </tr>
        <tr>
          <td id="L6955" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6955"></td>
          <td id="LC6955" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(g.<span class="pl-smi">out</span>);</td>
        </tr>
        <tr>
          <td id="L6956" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6956"></td>
          <td id="LC6956" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(g.<span class="pl-smi">history</span>);</td>
        </tr>
        <tr>
          <td id="L6957" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6957"></td>
          <td id="LC6957" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(g.<span class="pl-smi">background</span>);</td>
        </tr>
        <tr>
          <td id="L6958" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6958"></td>
          <td id="LC6958" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6959" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6959"></td>
          <td id="LC6959" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> do the final conversion after loading everything;</span></td>
        </tr>
        <tr>
          <td id="L6960" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6960"></td>
          <td id="LC6960" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6961" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6961"></td>
          <td id="LC6961" class="blob-code blob-code-inner js-file-line">         out = <span class="pl-c1">stbi__convert_format</span>(out, <span class="pl-c1">4</span>, req_comp, layers * g.<span class="pl-smi">w</span>, g.<span class="pl-smi">h</span>);</td>
        </tr>
        <tr>
          <td id="L6962" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6962"></td>
          <td id="LC6962" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6963" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6963"></td>
          <td id="LC6963" class="blob-code blob-code-inner js-file-line">      *z = layers;</td>
        </tr>
        <tr>
          <td id="L6964" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6964"></td>
          <td id="LC6964" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L6965" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6965"></td>
          <td id="LC6965" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L6966" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6966"></td>
          <td id="LC6966" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not GIF<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Image was not as a gif type.<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L6967" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6967"></td>
          <td id="LC6967" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6968" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6968"></td>
          <td id="LC6968" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6969" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6969"></td>
          <td id="LC6969" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6970" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6970"></td>
          <td id="LC6970" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__gif_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L6971" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6971"></td>
          <td id="LC6971" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L6972" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6972"></td>
          <td id="LC6972" class="blob-code blob-code-inner js-file-line">   stbi_uc *u = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L6973" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6973"></td>
          <td id="LC6973" class="blob-code blob-code-inner js-file-line">   stbi__gif g;</td>
        </tr>
        <tr>
          <td id="L6974" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6974"></td>
          <td id="LC6974" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">memset</span>(&amp;g, <span class="pl-c1">0</span>, <span class="pl-k">sizeof</span>(g));</td>
        </tr>
        <tr>
          <td id="L6975" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6975"></td>
          <td id="LC6975" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L6976" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6976"></td>
          <td id="LC6976" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6977" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6977"></td>
          <td id="LC6977" class="blob-code blob-code-inner js-file-line">   u = <span class="pl-c1">stbi__gif_load_next</span>(s, &amp;g, comp, req_comp, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L6978" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6978"></td>
          <td id="LC6978" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (u == (stbi_uc *) s) u = <span class="pl-c1">0</span>;  <span class="pl-c"><span class="pl-c">//</span> end of animated gif marker</span></td>
        </tr>
        <tr>
          <td id="L6979" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6979"></td>
          <td id="LC6979" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (u) {</td>
        </tr>
        <tr>
          <td id="L6980" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6980"></td>
          <td id="LC6980" class="blob-code blob-code-inner js-file-line">      *x = g.<span class="pl-smi">w</span>;</td>
        </tr>
        <tr>
          <td id="L6981" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6981"></td>
          <td id="LC6981" class="blob-code blob-code-inner js-file-line">      *y = g.<span class="pl-smi">h</span>;</td>
        </tr>
        <tr>
          <td id="L6982" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6982"></td>
          <td id="LC6982" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6983" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6983"></td>
          <td id="LC6983" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> moved conversion to after successful load so that the same</span></td>
        </tr>
        <tr>
          <td id="L6984" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6984"></td>
          <td id="LC6984" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> can be done for multiple frames.</span></td>
        </tr>
        <tr>
          <td id="L6985" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6985"></td>
          <td id="LC6985" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != <span class="pl-c1">4</span>)</td>
        </tr>
        <tr>
          <td id="L6986" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6986"></td>
          <td id="LC6986" class="blob-code blob-code-inner js-file-line">         u = <span class="pl-c1">stbi__convert_format</span>(u, <span class="pl-c1">4</span>, req_comp, g.<span class="pl-smi">w</span>, g.<span class="pl-smi">h</span>);</td>
        </tr>
        <tr>
          <td id="L6987" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6987"></td>
          <td id="LC6987" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> <span class="pl-k">if</span> (g.<span class="pl-smi">out</span>) {</td>
        </tr>
        <tr>
          <td id="L6988" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6988"></td>
          <td id="LC6988" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> if there was an error and we allocated an image buffer, free it!</span></td>
        </tr>
        <tr>
          <td id="L6989" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6989"></td>
          <td id="LC6989" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">STBI_FREE</span>(g.<span class="pl-smi">out</span>);</td>
        </tr>
        <tr>
          <td id="L6990" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6990"></td>
          <td id="LC6990" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L6991" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6991"></td>
          <td id="LC6991" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6992" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6992"></td>
          <td id="LC6992" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> free buffers needed for multiple frame loading;</span></td>
        </tr>
        <tr>
          <td id="L6993" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6993"></td>
          <td id="LC6993" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(g.<span class="pl-smi">history</span>);</td>
        </tr>
        <tr>
          <td id="L6994" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6994"></td>
          <td id="LC6994" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_FREE</span>(g.<span class="pl-smi">background</span>);</td>
        </tr>
        <tr>
          <td id="L6995" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6995"></td>
          <td id="LC6995" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6996" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6996"></td>
          <td id="LC6996" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> u;</td>
        </tr>
        <tr>
          <td id="L6997" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6997"></td>
          <td id="LC6997" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L6998" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6998"></td>
          <td id="LC6998" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L6999" class="blob-num js-line-number js-code-nav-line-number" data-line-number="6999"></td>
          <td id="LC6999" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__gif_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7000" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7000"></td>
          <td id="LC7000" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7001" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7001"></td>
          <td id="LC7001" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__gif_info_raw</span>(s,x,y,comp);</td>
        </tr>
        <tr>
          <td id="L7002" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7002"></td>
          <td id="LC7002" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7003" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7003"></td>
          <td id="LC7003" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7004" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7004"></td>
          <td id="LC7004" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7005" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7005"></td>
          <td id="LC7005" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *************************************************************************************************</span></td>
        </tr>
        <tr>
          <td id="L7006" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7006"></td>
          <td id="LC7006" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Radiance RGBE HDR loader</span></td>
        </tr>
        <tr>
          <td id="L7007" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7007"></td>
          <td id="LC7007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> originally by Nicolas Schulz</span></td>
        </tr>
        <tr>
          <td id="L7008" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7008"></td>
          <td id="LC7008" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L7009" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7009"></td>
          <td id="LC7009" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__hdr_test_core</span>(stbi__context *s, <span class="pl-k">const</span> <span class="pl-k">char</span> *signature)</td>
        </tr>
        <tr>
          <td id="L7010" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7010"></td>
          <td id="LC7010" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7011" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7011"></td>
          <td id="LC7011" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i;</td>
        </tr>
        <tr>
          <td id="L7012" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7012"></td>
          <td id="LC7012" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; signature[i]; ++i)</td>
        </tr>
        <tr>
          <td id="L7013" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7013"></td>
          <td id="LC7013" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__get8</span>(s) != signature[i])</td>
        </tr>
        <tr>
          <td id="L7014" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7014"></td>
          <td id="LC7014" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7015" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7015"></td>
          <td id="LC7015" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L7016" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7016"></td>
          <td id="LC7016" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7017" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7017"></td>
          <td id="LC7017" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7018" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7018"></td>
          <td id="LC7018" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7019" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7019"></td>
          <td id="LC7019" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__hdr_test</span>(stbi__context* s)</td>
        </tr>
        <tr>
          <td id="L7020" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7020"></td>
          <td id="LC7020" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7021" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7021"></td>
          <td id="LC7021" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r = <span class="pl-c1">stbi__hdr_test_core</span>(s, <span class="pl-s"><span class="pl-pds">&quot;</span>#?RADIANCE<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7022" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7022"></td>
          <td id="LC7022" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L7023" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7023"></td>
          <td id="LC7023" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span>(!r) {</td>
        </tr>
        <tr>
          <td id="L7024" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7024"></td>
          <td id="LC7024" class="blob-code blob-code-inner js-file-line">       r = <span class="pl-c1">stbi__hdr_test_core</span>(s, <span class="pl-s"><span class="pl-pds">&quot;</span>#?RGBE<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7025" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7025"></td>
          <td id="LC7025" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L7026" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7026"></td>
          <td id="LC7026" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7027" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7027"></td>
          <td id="LC7027" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L7028" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7028"></td>
          <td id="LC7028" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7029" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7029"></td>
          <td id="LC7029" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7030" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7030"></td>
          <td id="LC7030" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">STBI__HDR_BUFLEN</span>  <span class="pl-c1">1024</span></td>
        </tr>
        <tr>
          <td id="L7031" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7031"></td>
          <td id="LC7031" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">char</span> *<span class="pl-c1">stbi__hdr_gettoken</span>(stbi__context *z, <span class="pl-k">char</span> *buffer)</td>
        </tr>
        <tr>
          <td id="L7032" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7032"></td>
          <td id="LC7032" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7033" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7033"></td>
          <td id="LC7033" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> len=<span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7034" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7034"></td>
          <td id="LC7034" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> c = <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\0</span><span class="pl-pds">&#39;</span></span>;</td>
        </tr>
        <tr>
          <td id="L7035" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7035"></td>
          <td id="LC7035" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7036" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7036"></td>
          <td id="LC7036" class="blob-code blob-code-inner js-file-line">   c = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(z);</td>
        </tr>
        <tr>
          <td id="L7037" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7037"></td>
          <td id="LC7037" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7038" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7038"></td>
          <td id="LC7038" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (!<span class="pl-c1">stbi__at_eof</span>(z) &amp;&amp; c != <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>) {</td>
        </tr>
        <tr>
          <td id="L7039" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7039"></td>
          <td id="LC7039" class="blob-code blob-code-inner js-file-line">      buffer[len++] = c;</td>
        </tr>
        <tr>
          <td id="L7040" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7040"></td>
          <td id="LC7040" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (len == STBI__HDR_BUFLEN-<span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L7041" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7041"></td>
          <td id="LC7041" class="blob-code blob-code-inner js-file-line">         <span class="pl-c"><span class="pl-c">//</span> flush to end of line</span></td>
        </tr>
        <tr>
          <td id="L7042" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7042"></td>
          <td id="LC7042" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">while</span> (!<span class="pl-c1">stbi__at_eof</span>(z) &amp;&amp; <span class="pl-c1">stbi__get8</span>(z) != <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>)</td>
        </tr>
        <tr>
          <td id="L7043" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7043"></td>
          <td id="LC7043" class="blob-code blob-code-inner js-file-line">            ;</td>
        </tr>
        <tr>
          <td id="L7044" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7044"></td>
          <td id="LC7044" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L7045" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7045"></td>
          <td id="LC7045" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7046" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7046"></td>
          <td id="LC7046" class="blob-code blob-code-inner js-file-line">      c = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(z);</td>
        </tr>
        <tr>
          <td id="L7047" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7047"></td>
          <td id="LC7047" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7048" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7048"></td>
          <td id="LC7048" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7049" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7049"></td>
          <td id="LC7049" class="blob-code blob-code-inner js-file-line">   buffer[len] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7050" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7050"></td>
          <td id="LC7050" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> buffer;</td>
        </tr>
        <tr>
          <td id="L7051" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7051"></td>
          <td id="LC7051" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7052" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7052"></td>
          <td id="LC7052" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7053" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7053"></td>
          <td id="LC7053" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">stbi__hdr_convert</span>(<span class="pl-k">float</span> *output, stbi_uc *input, <span class="pl-k">int</span> req_comp)</td>
        </tr>
        <tr>
          <td id="L7054" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7054"></td>
          <td id="LC7054" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7055" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7055"></td>
          <td id="LC7055" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( input[<span class="pl-c1">3</span>] != <span class="pl-c1">0</span> ) {</td>
        </tr>
        <tr>
          <td id="L7056" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7056"></td>
          <td id="LC7056" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">float</span> f1;</td>
        </tr>
        <tr>
          <td id="L7057" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7057"></td>
          <td id="LC7057" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Exponent</span></td>
        </tr>
        <tr>
          <td id="L7058" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7058"></td>
          <td id="LC7058" class="blob-code blob-code-inner js-file-line">      f1 = (<span class="pl-k">float</span>) <span class="pl-c1">ldexp</span>(<span class="pl-c1">1</span>.<span class="pl-c1">0f</span>, input[<span class="pl-c1">3</span>] - (<span class="pl-k">int</span>)(<span class="pl-c1">128</span> + <span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L7059" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7059"></td>
          <td id="LC7059" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (req_comp &lt;= <span class="pl-c1">2</span>)</td>
        </tr>
        <tr>
          <td id="L7060" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7060"></td>
          <td id="LC7060" class="blob-code blob-code-inner js-file-line">         output[<span class="pl-c1">0</span>] = (input[<span class="pl-c1">0</span>] + input[<span class="pl-c1">1</span>] + input[<span class="pl-c1">2</span>]) * f1 / <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7061" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7061"></td>
          <td id="LC7061" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L7062" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7062"></td>
          <td id="LC7062" class="blob-code blob-code-inner js-file-line">         output[<span class="pl-c1">0</span>] = input[<span class="pl-c1">0</span>] * f1;</td>
        </tr>
        <tr>
          <td id="L7063" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7063"></td>
          <td id="LC7063" class="blob-code blob-code-inner js-file-line">         output[<span class="pl-c1">1</span>] = input[<span class="pl-c1">1</span>] * f1;</td>
        </tr>
        <tr>
          <td id="L7064" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7064"></td>
          <td id="LC7064" class="blob-code blob-code-inner js-file-line">         output[<span class="pl-c1">2</span>] = input[<span class="pl-c1">2</span>] * f1;</td>
        </tr>
        <tr>
          <td id="L7065" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7065"></td>
          <td id="LC7065" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7066" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7066"></td>
          <td id="LC7066" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (req_comp == <span class="pl-c1">2</span>) output[<span class="pl-c1">1</span>] = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7067" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7067"></td>
          <td id="LC7067" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (req_comp == <span class="pl-c1">4</span>) output[<span class="pl-c1">3</span>] = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7068" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7068"></td>
          <td id="LC7068" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L7069" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7069"></td>
          <td id="LC7069" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (req_comp) {</td>
        </tr>
        <tr>
          <td id="L7070" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7070"></td>
          <td id="LC7070" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">4</span>: output[<span class="pl-c1">3</span>] = <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">/*</span> fallthrough <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L7071" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7071"></td>
          <td id="LC7071" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">3</span>: output[<span class="pl-c1">0</span>] = output[<span class="pl-c1">1</span>] = output[<span class="pl-c1">2</span>] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7072" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7072"></td>
          <td id="LC7072" class="blob-code blob-code-inner js-file-line">                 <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L7073" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7073"></td>
          <td id="LC7073" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">2</span>: output[<span class="pl-c1">1</span>] = <span class="pl-c1">1</span>; <span class="pl-c"><span class="pl-c">/*</span> fallthrough <span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L7074" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7074"></td>
          <td id="LC7074" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">case</span> <span class="pl-c1">1</span>: output[<span class="pl-c1">0</span>] = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7075" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7075"></td>
          <td id="LC7075" class="blob-code blob-code-inner js-file-line">                 <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L7076" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7076"></td>
          <td id="LC7076" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7077" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7077"></td>
          <td id="LC7077" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7078" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7078"></td>
          <td id="LC7078" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7079" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7079"></td>
          <td id="LC7079" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7080" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7080"></td>
          <td id="LC7080" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">float</span> *<span class="pl-c1">stbi__hdr_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L7081" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7081"></td>
          <td id="LC7081" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7082" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7082"></td>
          <td id="LC7082" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> buffer[STBI__HDR_BUFLEN];</td>
        </tr>
        <tr>
          <td id="L7083" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7083"></td>
          <td id="LC7083" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *token;</td>
        </tr>
        <tr>
          <td id="L7084" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7084"></td>
          <td id="LC7084" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> valid = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7085" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7085"></td>
          <td id="LC7085" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> width, height;</td>
        </tr>
        <tr>
          <td id="L7086" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7086"></td>
          <td id="LC7086" class="blob-code blob-code-inner js-file-line">   stbi_uc *scanline;</td>
        </tr>
        <tr>
          <td id="L7087" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7087"></td>
          <td id="LC7087" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">float</span> *hdr_data;</td>
        </tr>
        <tr>
          <td id="L7088" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7088"></td>
          <td id="LC7088" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> len;</td>
        </tr>
        <tr>
          <td id="L7089" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7089"></td>
          <td id="LC7089" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">unsigned</span> <span class="pl-k">char</span> count, value;</td>
        </tr>
        <tr>
          <td id="L7090" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7090"></td>
          <td id="LC7090" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> i, j, k, c1,c2, z;</td>
        </tr>
        <tr>
          <td id="L7091" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7091"></td>
          <td id="LC7091" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">const</span> <span class="pl-k">char</span> *headerToken;</td>
        </tr>
        <tr>
          <td id="L7092" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7092"></td>
          <td id="LC7092" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L7093" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7093"></td>
          <td id="LC7093" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7094" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7094"></td>
          <td id="LC7094" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Check identifier</span></td>
        </tr>
        <tr>
          <td id="L7095" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7095"></td>
          <td id="LC7095" class="blob-code blob-code-inner js-file-line">   headerToken = <span class="pl-c1">stbi__hdr_gettoken</span>(s,buffer);</td>
        </tr>
        <tr>
          <td id="L7096" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7096"></td>
          <td id="LC7096" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">strcmp</span>(headerToken, <span class="pl-s"><span class="pl-pds">&quot;</span>#?RADIANCE<span class="pl-pds">&quot;</span></span>) != <span class="pl-c1">0</span> &amp;&amp; <span class="pl-c1">strcmp</span>(headerToken, <span class="pl-s"><span class="pl-pds">&quot;</span>#?RGBE<span class="pl-pds">&quot;</span></span>) != <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L7097" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7097"></td>
          <td id="LC7097" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>not HDR<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Corrupt HDR image<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7098" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7098"></td>
          <td id="LC7098" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7099" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7099"></td>
          <td id="LC7099" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Parse header</span></td>
        </tr>
        <tr>
          <td id="L7100" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7100"></td>
          <td id="LC7100" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(;;) {</td>
        </tr>
        <tr>
          <td id="L7101" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7101"></td>
          <td id="LC7101" class="blob-code blob-code-inner js-file-line">      token = <span class="pl-c1">stbi__hdr_gettoken</span>(s,buffer);</td>
        </tr>
        <tr>
          <td id="L7102" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7102"></td>
          <td id="LC7102" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (token[<span class="pl-c1">0</span>] == <span class="pl-c1">0</span>) <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L7103" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7103"></td>
          <td id="LC7103" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">strcmp</span>(token, <span class="pl-s"><span class="pl-pds">&quot;</span>FORMAT=32-bit_rle_rgbe<span class="pl-pds">&quot;</span></span>) == <span class="pl-c1">0</span>) valid = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7104" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7104"></td>
          <td id="LC7104" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7105" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7105"></td>
          <td id="LC7105" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7106" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7106"></td>
          <td id="LC7106" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!valid)    <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unsupported format<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported HDR format<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7107" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7107"></td>
          <td id="LC7107" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7108" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7108"></td>
          <td id="LC7108" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Parse width and height</span></td>
        </tr>
        <tr>
          <td id="L7109" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7109"></td>
          <td id="LC7109" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> can&#39;t use sscanf() if we&#39;re not using stdio!</span></td>
        </tr>
        <tr>
          <td id="L7110" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7110"></td>
          <td id="LC7110" class="blob-code blob-code-inner js-file-line">   token = <span class="pl-c1">stbi__hdr_gettoken</span>(s,buffer);</td>
        </tr>
        <tr>
          <td id="L7111" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7111"></td>
          <td id="LC7111" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">strncmp</span>(token, <span class="pl-s"><span class="pl-pds">&quot;</span>-Y <span class="pl-pds">&quot;</span></span>, <span class="pl-c1">3</span>))  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unsupported data layout<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported HDR format<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7112" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7112"></td>
          <td id="LC7112" class="blob-code blob-code-inner js-file-line">   token += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7113" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7113"></td>
          <td id="LC7113" class="blob-code blob-code-inner js-file-line">   height = (<span class="pl-k">int</span>) <span class="pl-c1">strtol</span>(token, &amp;token, <span class="pl-c1">10</span>);</td>
        </tr>
        <tr>
          <td id="L7114" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7114"></td>
          <td id="LC7114" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (*token == <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>) ++token;</td>
        </tr>
        <tr>
          <td id="L7115" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7115"></td>
          <td id="LC7115" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">strncmp</span>(token, <span class="pl-s"><span class="pl-pds">&quot;</span>+X <span class="pl-pds">&quot;</span></span>, <span class="pl-c1">3</span>))  <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unsupported data layout<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported HDR format<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7116" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7116"></td>
          <td id="LC7116" class="blob-code blob-code-inner js-file-line">   token += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7117" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7117"></td>
          <td id="LC7117" class="blob-code blob-code-inner js-file-line">   width = (<span class="pl-k">int</span>) <span class="pl-c1">strtol</span>(token, <span class="pl-c1">NULL</span>, <span class="pl-c1">10</span>);</td>
        </tr>
        <tr>
          <td id="L7118" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7118"></td>
          <td id="LC7118" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7119" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7119"></td>
          <td id="LC7119" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (height &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7120" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7120"></td>
          <td id="LC7120" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (width &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7121" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7121"></td>
          <td id="LC7121" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7122" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7122"></td>
          <td id="LC7122" class="blob-code blob-code-inner js-file-line">   *x = width;</td>
        </tr>
        <tr>
          <td id="L7123" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7123"></td>
          <td id="LC7123" class="blob-code blob-code-inner js-file-line">   *y = height;</td>
        </tr>
        <tr>
          <td id="L7124" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7124"></td>
          <td id="LC7124" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7125" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7125"></td>
          <td id="LC7125" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7126" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7126"></td>
          <td id="LC7126" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp == <span class="pl-c1">0</span>) req_comp = <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7127" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7127"></td>
          <td id="LC7127" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7128" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7128"></td>
          <td id="LC7128" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad4sizes_valid</span>(width, height, req_comp, <span class="pl-k">sizeof</span>(<span class="pl-k">float</span>), <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L7129" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7129"></td>
          <td id="LC7129" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>HDR image is too large<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7130" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7130"></td>
          <td id="LC7130" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7131" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7131"></td>
          <td id="LC7131" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Read data</span></td>
        </tr>
        <tr>
          <td id="L7132" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7132"></td>
          <td id="LC7132" class="blob-code blob-code-inner js-file-line">   hdr_data = (<span class="pl-k">float</span> *) <span class="pl-c1">stbi__malloc_mad4</span>(width, height, req_comp, <span class="pl-k">sizeof</span>(<span class="pl-k">float</span>), <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L7133" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7133"></td>
          <td id="LC7133" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!hdr_data)</td>
        </tr>
        <tr>
          <td id="L7134" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7134"></td>
          <td id="LC7134" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7135" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7135"></td>
          <td id="LC7135" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7136" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7136"></td>
          <td id="LC7136" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Load image data</span></td>
        </tr>
        <tr>
          <td id="L7137" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7137"></td>
          <td id="LC7137" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> image data is stored as some number of sca</span></td>
        </tr>
        <tr>
          <td id="L7138" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7138"></td>
          <td id="LC7138" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( width &lt; <span class="pl-c1">8</span> || width &gt;= <span class="pl-c1">32768</span>) {</td>
        </tr>
        <tr>
          <td id="L7139" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7139"></td>
          <td id="LC7139" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Read flat data</span></td>
        </tr>
        <tr>
          <td id="L7140" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7140"></td>
          <td id="LC7140" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j=<span class="pl-c1">0</span>; j &lt; height; ++j) {</td>
        </tr>
        <tr>
          <td id="L7141" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7141"></td>
          <td id="LC7141" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; width; ++i) {</td>
        </tr>
        <tr>
          <td id="L7142" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7142"></td>
          <td id="LC7142" class="blob-code blob-code-inner js-file-line">            stbi_uc rgbe[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L7143" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7143"></td>
          <td id="LC7143" class="blob-code blob-code-inner js-file-line">           main_decode_loop:</td>
        </tr>
        <tr>
          <td id="L7144" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7144"></td>
          <td id="LC7144" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__getn</span>(s, rgbe, <span class="pl-c1">4</span>);</td>
        </tr>
        <tr>
          <td id="L7145" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7145"></td>
          <td id="LC7145" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__hdr_convert</span>(hdr_data + j * width * req_comp + i * req_comp, rgbe, req_comp);</td>
        </tr>
        <tr>
          <td id="L7146" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7146"></td>
          <td id="LC7146" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L7147" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7147"></td>
          <td id="LC7147" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7148" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7148"></td>
          <td id="LC7148" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L7149" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7149"></td>
          <td id="LC7149" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Read RLE-encoded data</span></td>
        </tr>
        <tr>
          <td id="L7150" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7150"></td>
          <td id="LC7150" class="blob-code blob-code-inner js-file-line">      scanline = <span class="pl-c1">NULL</span>;</td>
        </tr>
        <tr>
          <td id="L7151" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7151"></td>
          <td id="LC7151" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7152" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7152"></td>
          <td id="LC7152" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (j = <span class="pl-c1">0</span>; j &lt; height; ++j) {</td>
        </tr>
        <tr>
          <td id="L7153" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7153"></td>
          <td id="LC7153" class="blob-code blob-code-inner js-file-line">         c1 = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7154" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7154"></td>
          <td id="LC7154" class="blob-code blob-code-inner js-file-line">         c2 = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7155" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7155"></td>
          <td id="LC7155" class="blob-code blob-code-inner js-file-line">         len = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7156" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7156"></td>
          <td id="LC7156" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (c1 != <span class="pl-c1">2</span> || c2 != <span class="pl-c1">2</span> || (len &amp; <span class="pl-c1">0x80</span>)) {</td>
        </tr>
        <tr>
          <td id="L7157" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7157"></td>
          <td id="LC7157" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> not run-length encoded, so we have to actually use THIS data as a decoded</span></td>
        </tr>
        <tr>
          <td id="L7158" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7158"></td>
          <td id="LC7158" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> pixel (note this can&#39;t be a valid pixel--one of RGB must be &gt;= 128)</span></td>
        </tr>
        <tr>
          <td id="L7159" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7159"></td>
          <td id="LC7159" class="blob-code blob-code-inner js-file-line">            stbi_uc rgbe[<span class="pl-c1">4</span>];</td>
        </tr>
        <tr>
          <td id="L7160" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7160"></td>
          <td id="LC7160" class="blob-code blob-code-inner js-file-line">            rgbe[<span class="pl-c1">0</span>] = (stbi_uc) c1;</td>
        </tr>
        <tr>
          <td id="L7161" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7161"></td>
          <td id="LC7161" class="blob-code blob-code-inner js-file-line">            rgbe[<span class="pl-c1">1</span>] = (stbi_uc) c2;</td>
        </tr>
        <tr>
          <td id="L7162" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7162"></td>
          <td id="LC7162" class="blob-code blob-code-inner js-file-line">            rgbe[<span class="pl-c1">2</span>] = (stbi_uc) len;</td>
        </tr>
        <tr>
          <td id="L7163" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7163"></td>
          <td id="LC7163" class="blob-code blob-code-inner js-file-line">            rgbe[<span class="pl-c1">3</span>] = (stbi_uc) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7164" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7164"></td>
          <td id="LC7164" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__hdr_convert</span>(hdr_data, rgbe, req_comp);</td>
        </tr>
        <tr>
          <td id="L7165" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7165"></td>
          <td id="LC7165" class="blob-code blob-code-inner js-file-line">            i = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7166" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7166"></td>
          <td id="LC7166" class="blob-code blob-code-inner js-file-line">            j = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7167" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7167"></td>
          <td id="LC7167" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">STBI_FREE</span>(scanline);</td>
        </tr>
        <tr>
          <td id="L7168" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7168"></td>
          <td id="LC7168" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">goto</span> main_decode_loop; <span class="pl-c"><span class="pl-c">//</span> yes, this makes no sense</span></td>
        </tr>
        <tr>
          <td id="L7169" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7169"></td>
          <td id="LC7169" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L7170" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7170"></td>
          <td id="LC7170" class="blob-code blob-code-inner js-file-line">         len &lt;&lt;= <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L7171" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7171"></td>
          <td id="LC7171" class="blob-code blob-code-inner js-file-line">         len |= <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7172" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7172"></td>
          <td id="LC7172" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (len != width) { <span class="pl-c1">STBI_FREE</span>(hdr_data); <span class="pl-c1">STBI_FREE</span>(scanline); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid decoded scanline length<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>corrupt HDR<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L7173" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7173"></td>
          <td id="LC7173" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (scanline == <span class="pl-c1">NULL</span>) {</td>
        </tr>
        <tr>
          <td id="L7174" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7174"></td>
          <td id="LC7174" class="blob-code blob-code-inner js-file-line">            scanline = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad2</span>(width, <span class="pl-c1">4</span>, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L7175" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7175"></td>
          <td id="LC7175" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (!scanline) {</td>
        </tr>
        <tr>
          <td id="L7176" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7176"></td>
          <td id="LC7176" class="blob-code blob-code-inner js-file-line">               <span class="pl-c1">STBI_FREE</span>(hdr_data);</td>
        </tr>
        <tr>
          <td id="L7177" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7177"></td>
          <td id="LC7177" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7178" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7178"></td>
          <td id="LC7178" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L7179" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7179"></td>
          <td id="LC7179" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L7180" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7180"></td>
          <td id="LC7180" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7181" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7181"></td>
          <td id="LC7181" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (k = <span class="pl-c1">0</span>; k &lt; <span class="pl-c1">4</span>; ++k) {</td>
        </tr>
        <tr>
          <td id="L7182" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7182"></td>
          <td id="LC7182" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">int</span> nleft;</td>
        </tr>
        <tr>
          <td id="L7183" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7183"></td>
          <td id="LC7183" class="blob-code blob-code-inner js-file-line">            i = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7184" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7184"></td>
          <td id="LC7184" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> ((nleft = width - i) &gt; <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L7185" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7185"></td>
          <td id="LC7185" class="blob-code blob-code-inner js-file-line">               count = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7186" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7186"></td>
          <td id="LC7186" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">if</span> (count &gt; <span class="pl-c1">128</span>) {</td>
        </tr>
        <tr>
          <td id="L7187" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7187"></td>
          <td id="LC7187" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> Run</span></td>
        </tr>
        <tr>
          <td id="L7188" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7188"></td>
          <td id="LC7188" class="blob-code blob-code-inner js-file-line">                  value = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7189" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7189"></td>
          <td id="LC7189" class="blob-code blob-code-inner js-file-line">                  count -= <span class="pl-c1">128</span>;</td>
        </tr>
        <tr>
          <td id="L7190" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7190"></td>
          <td id="LC7190" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (count &gt; nleft) { <span class="pl-c1">STBI_FREE</span>(hdr_data); <span class="pl-c1">STBI_FREE</span>(scanline); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>corrupt<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad RLE data in HDR<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L7191" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7191"></td>
          <td id="LC7191" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (z = <span class="pl-c1">0</span>; z &lt; count; ++z)</td>
        </tr>
        <tr>
          <td id="L7192" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7192"></td>
          <td id="LC7192" class="blob-code blob-code-inner js-file-line">                     scanline[i++ * <span class="pl-c1">4</span> + k] = value;</td>
        </tr>
        <tr>
          <td id="L7193" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7193"></td>
          <td id="LC7193" class="blob-code blob-code-inner js-file-line">               } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L7194" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7194"></td>
          <td id="LC7194" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c"><span class="pl-c">//</span> Dump</span></td>
        </tr>
        <tr>
          <td id="L7195" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7195"></td>
          <td id="LC7195" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> (count &gt; nleft) { <span class="pl-c1">STBI_FREE</span>(hdr_data); <span class="pl-c1">STBI_FREE</span>(scanline); <span class="pl-k">return</span> <span class="pl-c1">stbi__errpf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>corrupt<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>bad RLE data in HDR<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L7196" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7196"></td>
          <td id="LC7196" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">for</span> (z = <span class="pl-c1">0</span>; z &lt; count; ++z)</td>
        </tr>
        <tr>
          <td id="L7197" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7197"></td>
          <td id="LC7197" class="blob-code blob-code-inner js-file-line">                     scanline[i++ * <span class="pl-c1">4</span> + k] = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7198" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7198"></td>
          <td id="LC7198" class="blob-code blob-code-inner js-file-line">               }</td>
        </tr>
        <tr>
          <td id="L7199" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7199"></td>
          <td id="LC7199" class="blob-code blob-code-inner js-file-line">            }</td>
        </tr>
        <tr>
          <td id="L7200" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7200"></td>
          <td id="LC7200" class="blob-code blob-code-inner js-file-line">         }</td>
        </tr>
        <tr>
          <td id="L7201" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7201"></td>
          <td id="LC7201" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">for</span> (i=<span class="pl-c1">0</span>; i &lt; width; ++i)</td>
        </tr>
        <tr>
          <td id="L7202" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7202"></td>
          <td id="LC7202" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">stbi__hdr_convert</span>(hdr_data+(j*width + i)*req_comp, scanline + i*<span class="pl-c1">4</span>, req_comp);</td>
        </tr>
        <tr>
          <td id="L7203" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7203"></td>
          <td id="LC7203" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7204" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7204"></td>
          <td id="LC7204" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (scanline)</td>
        </tr>
        <tr>
          <td id="L7205" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7205"></td>
          <td id="LC7205" class="blob-code blob-code-inner js-file-line">         <span class="pl-c1">STBI_FREE</span>(scanline);</td>
        </tr>
        <tr>
          <td id="L7206" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7206"></td>
          <td id="LC7206" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7207" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7207"></td>
          <td id="LC7207" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7208" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7208"></td>
          <td id="LC7208" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> hdr_data;</td>
        </tr>
        <tr>
          <td id="L7209" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7209"></td>
          <td id="LC7209" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7210" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7210"></td>
          <td id="LC7210" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7211" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7211"></td>
          <td id="LC7211" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__hdr_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7212" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7212"></td>
          <td id="LC7212" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7213" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7213"></td>
          <td id="LC7213" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> buffer[STBI__HDR_BUFLEN];</td>
        </tr>
        <tr>
          <td id="L7214" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7214"></td>
          <td id="LC7214" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> *token;</td>
        </tr>
        <tr>
          <td id="L7215" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7215"></td>
          <td id="LC7215" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> valid = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7216" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7216"></td>
          <td id="LC7216" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> dummy;</td>
        </tr>
        <tr>
          <td id="L7217" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7217"></td>
          <td id="LC7217" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7218" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7218"></td>
          <td id="LC7218" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!x) x = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7219" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7219"></td>
          <td id="LC7219" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!y) y = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7220" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7220"></td>
          <td id="LC7220" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!comp) comp = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7221" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7221"></td>
          <td id="LC7221" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7222" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7222"></td>
          <td id="LC7222" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__hdr_test</span>(s) == <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L7223" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7223"></td>
          <td id="LC7223" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7224" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7224"></td>
          <td id="LC7224" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7225" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7225"></td>
          <td id="LC7225" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7226" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7226"></td>
          <td id="LC7226" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7227" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7227"></td>
          <td id="LC7227" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span>(;;) {</td>
        </tr>
        <tr>
          <td id="L7228" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7228"></td>
          <td id="LC7228" class="blob-code blob-code-inner js-file-line">      token = <span class="pl-c1">stbi__hdr_gettoken</span>(s,buffer);</td>
        </tr>
        <tr>
          <td id="L7229" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7229"></td>
          <td id="LC7229" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (token[<span class="pl-c1">0</span>] == <span class="pl-c1">0</span>) <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L7230" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7230"></td>
          <td id="LC7230" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">strcmp</span>(token, <span class="pl-s"><span class="pl-pds">&quot;</span>FORMAT=32-bit_rle_rgbe<span class="pl-pds">&quot;</span></span>) == <span class="pl-c1">0</span>) valid = <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7231" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7231"></td>
          <td id="LC7231" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7232" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7232"></td>
          <td id="LC7232" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7233" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7233"></td>
          <td id="LC7233" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!valid) {</td>
        </tr>
        <tr>
          <td id="L7234" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7234"></td>
          <td id="LC7234" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7235" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7235"></td>
          <td id="LC7235" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7236" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7236"></td>
          <td id="LC7236" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7237" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7237"></td>
          <td id="LC7237" class="blob-code blob-code-inner js-file-line">   token = <span class="pl-c1">stbi__hdr_gettoken</span>(s,buffer);</td>
        </tr>
        <tr>
          <td id="L7238" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7238"></td>
          <td id="LC7238" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">strncmp</span>(token, <span class="pl-s"><span class="pl-pds">&quot;</span>-Y <span class="pl-pds">&quot;</span></span>, <span class="pl-c1">3</span>)) {</td>
        </tr>
        <tr>
          <td id="L7239" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7239"></td>
          <td id="LC7239" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7240" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7240"></td>
          <td id="LC7240" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7241" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7241"></td>
          <td id="LC7241" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7242" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7242"></td>
          <td id="LC7242" class="blob-code blob-code-inner js-file-line">   token += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7243" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7243"></td>
          <td id="LC7243" class="blob-code blob-code-inner js-file-line">   *y = (<span class="pl-k">int</span>) <span class="pl-c1">strtol</span>(token, &amp;token, <span class="pl-c1">10</span>);</td>
        </tr>
        <tr>
          <td id="L7244" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7244"></td>
          <td id="LC7244" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (*token == <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>) ++token;</td>
        </tr>
        <tr>
          <td id="L7245" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7245"></td>
          <td id="LC7245" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">strncmp</span>(token, <span class="pl-s"><span class="pl-pds">&quot;</span>+X <span class="pl-pds">&quot;</span></span>, <span class="pl-c1">3</span>)) {</td>
        </tr>
        <tr>
          <td id="L7246" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7246"></td>
          <td id="LC7246" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7247" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7247"></td>
          <td id="LC7247" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7248" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7248"></td>
          <td id="LC7248" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7249" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7249"></td>
          <td id="LC7249" class="blob-code blob-code-inner js-file-line">   token += <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7250" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7250"></td>
          <td id="LC7250" class="blob-code blob-code-inner js-file-line">   *x = (<span class="pl-k">int</span>) <span class="pl-c1">strtol</span>(token, <span class="pl-c1">NULL</span>, <span class="pl-c1">10</span>);</td>
        </tr>
        <tr>
          <td id="L7251" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7251"></td>
          <td id="LC7251" class="blob-code blob-code-inner js-file-line">   *comp = <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7252" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7252"></td>
          <td id="LC7252" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7253" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7253"></td>
          <td id="LC7253" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7254" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7254"></td>
          <td id="LC7254" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STBI_NO_HDR</span></td>
        </tr>
        <tr>
          <td id="L7255" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7255"></td>
          <td id="LC7255" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7256" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7256"></td>
          <td id="LC7256" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_BMP</td>
        </tr>
        <tr>
          <td id="L7257" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7257"></td>
          <td id="LC7257" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__bmp_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7258" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7258"></td>
          <td id="LC7258" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7259" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7259"></td>
          <td id="LC7259" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">void</span> *p;</td>
        </tr>
        <tr>
          <td id="L7260" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7260"></td>
          <td id="LC7260" class="blob-code blob-code-inner js-file-line">   stbi__bmp_data info;</td>
        </tr>
        <tr>
          <td id="L7261" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7261"></td>
          <td id="LC7261" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7262" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7262"></td>
          <td id="LC7262" class="blob-code blob-code-inner js-file-line">   info.<span class="pl-smi">all_a</span> = <span class="pl-c1">255</span>;</td>
        </tr>
        <tr>
          <td id="L7263" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7263"></td>
          <td id="LC7263" class="blob-code blob-code-inner js-file-line">   p = <span class="pl-c1">stbi__bmp_parse_header</span>(s, &amp;info);</td>
        </tr>
        <tr>
          <td id="L7264" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7264"></td>
          <td id="LC7264" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p == <span class="pl-c1">NULL</span>) {</td>
        </tr>
        <tr>
          <td id="L7265" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7265"></td>
          <td id="LC7265" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7266" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7266"></td>
          <td id="LC7266" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7267" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7267"></td>
          <td id="LC7267" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7268" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7268"></td>
          <td id="LC7268" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (x) *x = s-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L7269" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7269"></td>
          <td id="LC7269" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (y) *y = s-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L7270" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7270"></td>
          <td id="LC7270" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) {</td>
        </tr>
        <tr>
          <td id="L7271" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7271"></td>
          <td id="LC7271" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (info.<span class="pl-smi">bpp</span> == <span class="pl-c1">24</span> &amp;&amp; info.<span class="pl-smi">ma</span> == <span class="pl-c1">0xff000000</span>)</td>
        </tr>
        <tr>
          <td id="L7272" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7272"></td>
          <td id="LC7272" class="blob-code blob-code-inner js-file-line">         *comp = <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7273" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7273"></td>
          <td id="LC7273" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L7274" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7274"></td>
          <td id="LC7274" class="blob-code blob-code-inner js-file-line">         *comp = info.<span class="pl-smi">ma</span> ? <span class="pl-c1">4</span> : <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L7275" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7275"></td>
          <td id="LC7275" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7276" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7276"></td>
          <td id="LC7276" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7277" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7277"></td>
          <td id="LC7277" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7278" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7278"></td>
          <td id="LC7278" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7279" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7279"></td>
          <td id="LC7279" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7280" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7280"></td>
          <td id="LC7280" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PSD</td>
        </tr>
        <tr>
          <td id="L7281" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7281"></td>
          <td id="LC7281" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__psd_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7282" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7282"></td>
          <td id="LC7282" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7283" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7283"></td>
          <td id="LC7283" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> channelCount, dummy, depth;</td>
        </tr>
        <tr>
          <td id="L7284" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7284"></td>
          <td id="LC7284" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!x) x = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7285" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7285"></td>
          <td id="LC7285" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!y) y = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7286" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7286"></td>
          <td id="LC7286" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!comp) comp = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7287" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7287"></td>
          <td id="LC7287" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get32be</span>(s) != <span class="pl-c1">0x38425053</span>) {</td>
        </tr>
        <tr>
          <td id="L7288" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7288"></td>
          <td id="LC7288" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7289" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7289"></td>
          <td id="LC7289" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7290" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7290"></td>
          <td id="LC7290" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7291" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7291"></td>
          <td id="LC7291" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16be</span>(s) != <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L7292" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7292"></td>
          <td id="LC7292" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7293" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7293"></td>
          <td id="LC7293" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7294" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7294"></td>
          <td id="LC7294" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7295" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7295"></td>
          <td id="LC7295" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">6</span>);</td>
        </tr>
        <tr>
          <td id="L7296" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7296"></td>
          <td id="LC7296" class="blob-code blob-code-inner js-file-line">   channelCount = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7297" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7297"></td>
          <td id="LC7297" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (channelCount &lt; <span class="pl-c1">0</span> || channelCount &gt; <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L7298" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7298"></td>
          <td id="LC7298" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7299" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7299"></td>
          <td id="LC7299" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7300" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7300"></td>
          <td id="LC7300" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7301" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7301"></td>
          <td id="LC7301" class="blob-code blob-code-inner js-file-line">   *y = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7302" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7302"></td>
          <td id="LC7302" class="blob-code blob-code-inner js-file-line">   *x = <span class="pl-c1">stbi__get32be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7303" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7303"></td>
          <td id="LC7303" class="blob-code blob-code-inner js-file-line">   depth = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7304" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7304"></td>
          <td id="LC7304" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (depth != <span class="pl-c1">8</span> &amp;&amp; depth != <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L7305" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7305"></td>
          <td id="LC7305" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7306" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7306"></td>
          <td id="LC7306" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7307" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7307"></td>
          <td id="LC7307" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7308" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7308"></td>
          <td id="LC7308" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16be</span>(s) != <span class="pl-c1">3</span>) {</td>
        </tr>
        <tr>
          <td id="L7309" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7309"></td>
          <td id="LC7309" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7310" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7310"></td>
          <td id="LC7310" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7311" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7311"></td>
          <td id="LC7311" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7312" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7312"></td>
          <td id="LC7312" class="blob-code blob-code-inner js-file-line">   *comp = <span class="pl-c1">4</span>;</td>
        </tr>
        <tr>
          <td id="L7313" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7313"></td>
          <td id="LC7313" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7314" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7314"></td>
          <td id="LC7314" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7315" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7315"></td>
          <td id="LC7315" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7316" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7316"></td>
          <td id="LC7316" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__psd_is16</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L7317" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7317"></td>
          <td id="LC7317" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7318" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7318"></td>
          <td id="LC7318" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> channelCount, depth;</td>
        </tr>
        <tr>
          <td id="L7319" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7319"></td>
          <td id="LC7319" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get32be</span>(s) != <span class="pl-c1">0x38425053</span>) {</td>
        </tr>
        <tr>
          <td id="L7320" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7320"></td>
          <td id="LC7320" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7321" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7321"></td>
          <td id="LC7321" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7322" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7322"></td>
          <td id="LC7322" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7323" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7323"></td>
          <td id="LC7323" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__get16be</span>(s) != <span class="pl-c1">1</span>) {</td>
        </tr>
        <tr>
          <td id="L7324" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7324"></td>
          <td id="LC7324" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7325" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7325"></td>
          <td id="LC7325" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7326" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7326"></td>
          <td id="LC7326" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7327" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7327"></td>
          <td id="LC7327" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">6</span>);</td>
        </tr>
        <tr>
          <td id="L7328" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7328"></td>
          <td id="LC7328" class="blob-code blob-code-inner js-file-line">   channelCount = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7329" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7329"></td>
          <td id="LC7329" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (channelCount &lt; <span class="pl-c1">0</span> || channelCount &gt; <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L7330" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7330"></td>
          <td id="LC7330" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7331" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7331"></td>
          <td id="LC7331" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7332" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7332"></td>
          <td id="LC7332" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7333" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7333"></td>
          <td id="LC7333" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(<span class="pl-c1">stbi__get32be</span>(s));</td>
        </tr>
        <tr>
          <td id="L7334" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7334"></td>
          <td id="LC7334" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(<span class="pl-c1">stbi__get32be</span>(s));</td>
        </tr>
        <tr>
          <td id="L7335" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7335"></td>
          <td id="LC7335" class="blob-code blob-code-inner js-file-line">   depth = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7336" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7336"></td>
          <td id="LC7336" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (depth != <span class="pl-c1">16</span>) {</td>
        </tr>
        <tr>
          <td id="L7337" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7337"></td>
          <td id="LC7337" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7338" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7338"></td>
          <td id="LC7338" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7339" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7339"></td>
          <td id="LC7339" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7340" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7340"></td>
          <td id="LC7340" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7341" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7341"></td>
          <td id="LC7341" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7342" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7342"></td>
          <td id="LC7342" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7343" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7343"></td>
          <td id="LC7343" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7344" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7344"></td>
          <td id="LC7344" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PIC</td>
        </tr>
        <tr>
          <td id="L7345" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7345"></td>
          <td id="LC7345" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__pic_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7346" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7346"></td>
          <td id="LC7346" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7347" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7347"></td>
          <td id="LC7347" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> act_comp=<span class="pl-c1">0</span>,num_packets=<span class="pl-c1">0</span>,chained,dummy;</td>
        </tr>
        <tr>
          <td id="L7348" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7348"></td>
          <td id="LC7348" class="blob-code blob-code-inner js-file-line">   stbi__pic_packet packets[<span class="pl-c1">10</span>];</td>
        </tr>
        <tr>
          <td id="L7349" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7349"></td>
          <td id="LC7349" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7350" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7350"></td>
          <td id="LC7350" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!x) x = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7351" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7351"></td>
          <td id="LC7351" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!y) y = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7352" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7352"></td>
          <td id="LC7352" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!comp) comp = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7353" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7353"></td>
          <td id="LC7353" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7354" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7354"></td>
          <td id="LC7354" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__pic_is4</span>(s,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\x53\x80\xF6\x34</span><span class="pl-pds">&quot;</span></span>)) {</td>
        </tr>
        <tr>
          <td id="L7355" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7355"></td>
          <td id="LC7355" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L7356" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7356"></td>
          <td id="LC7356" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7357" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7357"></td>
          <td id="LC7357" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7358" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7358"></td>
          <td id="LC7358" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7359" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7359"></td>
          <td id="LC7359" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">88</span>);</td>
        </tr>
        <tr>
          <td id="L7360" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7360"></td>
          <td id="LC7360" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7361" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7361"></td>
          <td id="LC7361" class="blob-code blob-code-inner js-file-line">   *x = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7362" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7362"></td>
          <td id="LC7362" class="blob-code blob-code-inner js-file-line">   *y = <span class="pl-c1">stbi__get16be</span>(s);</td>
        </tr>
        <tr>
          <td id="L7363" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7363"></td>
          <td id="LC7363" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s)) {</td>
        </tr>
        <tr>
          <td id="L7364" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7364"></td>
          <td id="LC7364" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>( s);</td>
        </tr>
        <tr>
          <td id="L7365" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7365"></td>
          <td id="LC7365" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7366" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7366"></td>
          <td id="LC7366" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7367" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7367"></td>
          <td id="LC7367" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> ( (*x) != <span class="pl-c1">0</span> &amp;&amp; (<span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">28</span>) / (*x) &lt; (*y)) {</td>
        </tr>
        <tr>
          <td id="L7368" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7368"></td>
          <td id="LC7368" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7369" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7369"></td>
          <td id="LC7369" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7370" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7370"></td>
          <td id="LC7370" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7371" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7371"></td>
          <td id="LC7371" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7372" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7372"></td>
          <td id="LC7372" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__skip</span>(s, <span class="pl-c1">8</span>);</td>
        </tr>
        <tr>
          <td id="L7373" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7373"></td>
          <td id="LC7373" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7374" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7374"></td>
          <td id="LC7374" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">do</span> {</td>
        </tr>
        <tr>
          <td id="L7375" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7375"></td>
          <td id="LC7375" class="blob-code blob-code-inner js-file-line">      stbi__pic_packet *packet;</td>
        </tr>
        <tr>
          <td id="L7376" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7376"></td>
          <td id="LC7376" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7377" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7377"></td>
          <td id="LC7377" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (num_packets==<span class="pl-k">sizeof</span>(packets)/<span class="pl-k">sizeof</span>(packets[<span class="pl-c1">0</span>]))</td>
        </tr>
        <tr>
          <td id="L7378" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7378"></td>
          <td id="LC7378" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7379" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7379"></td>
          <td id="LC7379" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7380" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7380"></td>
          <td id="LC7380" class="blob-code blob-code-inner js-file-line">      packet = &amp;packets[num_packets++];</td>
        </tr>
        <tr>
          <td id="L7381" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7381"></td>
          <td id="LC7381" class="blob-code blob-code-inner js-file-line">      chained = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7382" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7382"></td>
          <td id="LC7382" class="blob-code blob-code-inner js-file-line">      packet-&gt;<span class="pl-smi">size</span>    = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7383" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7383"></td>
          <td id="LC7383" class="blob-code blob-code-inner js-file-line">      packet-&gt;<span class="pl-smi">type</span>    = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7384" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7384"></td>
          <td id="LC7384" class="blob-code blob-code-inner js-file-line">      packet-&gt;<span class="pl-smi">channel</span> = <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7385" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7385"></td>
          <td id="LC7385" class="blob-code blob-code-inner js-file-line">      act_comp |= packet-&gt;<span class="pl-smi">channel</span>;</td>
        </tr>
        <tr>
          <td id="L7386" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7386"></td>
          <td id="LC7386" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7387" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7387"></td>
          <td id="LC7387" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s)) {</td>
        </tr>
        <tr>
          <td id="L7388" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7388"></td>
          <td id="LC7388" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7389" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7389"></td>
          <td id="LC7389" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7390" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7390"></td>
          <td id="LC7390" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7391" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7391"></td>
          <td id="LC7391" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (packet-&gt;<span class="pl-smi">size</span> != <span class="pl-c1">8</span>) {</td>
        </tr>
        <tr>
          <td id="L7392" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7392"></td>
          <td id="LC7392" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7393" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7393"></td>
          <td id="LC7393" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7394" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7394"></td>
          <td id="LC7394" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L7395" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7395"></td>
          <td id="LC7395" class="blob-code blob-code-inner js-file-line">   } <span class="pl-k">while</span> (chained);</td>
        </tr>
        <tr>
          <td id="L7396" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7396"></td>
          <td id="LC7396" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7397" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7397"></td>
          <td id="LC7397" class="blob-code blob-code-inner js-file-line">   *comp = (act_comp &amp; <span class="pl-c1">0x10</span> ? <span class="pl-c1">4</span> : <span class="pl-c1">3</span>);</td>
        </tr>
        <tr>
          <td id="L7398" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7398"></td>
          <td id="LC7398" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7399" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7399"></td>
          <td id="LC7399" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7400" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7400"></td>
          <td id="LC7400" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7401" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7401"></td>
          <td id="LC7401" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7402" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7402"></td>
          <td id="LC7402" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7403" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7403"></td>
          <td id="LC7403" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> *************************************************************************************************</span></td>
        </tr>
        <tr>
          <td id="L7404" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7404"></td>
          <td id="LC7404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Portable Gray Map and Portable Pixel Map loader</span></td>
        </tr>
        <tr>
          <td id="L7405" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7405"></td>
          <td id="LC7405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> by Ken Miller</span></td>
        </tr>
        <tr>
          <td id="L7406" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7406"></td>
          <td id="LC7406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L7407" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7407"></td>
          <td id="LC7407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> PGM: http://netpbm.sourceforge.net/doc/pgm.html</span></td>
        </tr>
        <tr>
          <td id="L7408" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7408"></td>
          <td id="LC7408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> PPM: http://netpbm.sourceforge.net/doc/ppm.html</span></td>
        </tr>
        <tr>
          <td id="L7409" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7409"></td>
          <td id="LC7409" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L7410" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7410"></td>
          <td id="LC7410" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Known limitations:</span></td>
        </tr>
        <tr>
          <td id="L7411" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7411"></td>
          <td id="LC7411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    Does not support comments in the header section</span></td>
        </tr>
        <tr>
          <td id="L7412" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7412"></td>
          <td id="LC7412" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>    Does not support ASCII image data (formats P2 and P3)</span></td>
        </tr>
        <tr>
          <td id="L7413" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7413"></td>
          <td id="LC7413" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7414" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7414"></td>
          <td id="LC7414" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_PNM</td>
        </tr>
        <tr>
          <td id="L7415" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7415"></td>
          <td id="LC7415" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7416" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7416"></td>
          <td id="LC7416" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_test</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L7417" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7417"></td>
          <td id="LC7417" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7418" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7418"></td>
          <td id="LC7418" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> p, t;</td>
        </tr>
        <tr>
          <td id="L7419" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7419"></td>
          <td id="LC7419" class="blob-code blob-code-inner js-file-line">   p = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7420" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7420"></td>
          <td id="LC7420" class="blob-code blob-code-inner js-file-line">   t = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7421" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7421"></td>
          <td id="LC7421" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p != <span class="pl-s"><span class="pl-pds">&#39;</span>P<span class="pl-pds">&#39;</span></span> || (t != <span class="pl-s"><span class="pl-pds">&#39;</span>5<span class="pl-pds">&#39;</span></span> &amp;&amp; t != <span class="pl-s"><span class="pl-pds">&#39;</span>6<span class="pl-pds">&#39;</span></span>)) {</td>
        </tr>
        <tr>
          <td id="L7422" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7422"></td>
          <td id="LC7422" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>( s );</td>
        </tr>
        <tr>
          <td id="L7423" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7423"></td>
          <td id="LC7423" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7424" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7424"></td>
          <td id="LC7424" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7425" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7425"></td>
          <td id="LC7425" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7426" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7426"></td>
          <td id="LC7426" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7427" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7427"></td>
          <td id="LC7427" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7428" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7428"></td>
          <td id="LC7428" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span> *<span class="pl-c1">stbi__pnm_load</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp, <span class="pl-k">int</span> req_comp, stbi__result_info *ri)</td>
        </tr>
        <tr>
          <td id="L7429" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7429"></td>
          <td id="LC7429" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7430" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7430"></td>
          <td id="LC7430" class="blob-code blob-code-inner js-file-line">   stbi_uc *out;</td>
        </tr>
        <tr>
          <td id="L7431" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7431"></td>
          <td id="LC7431" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">STBI_NOTUSED</span>(ri);</td>
        </tr>
        <tr>
          <td id="L7432" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7432"></td>
          <td id="LC7432" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7433" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7433"></td>
          <td id="LC7433" class="blob-code blob-code-inner js-file-line">   ri-&gt;<span class="pl-smi">bits_per_channel</span> = <span class="pl-c1">stbi__pnm_info</span>(s, (<span class="pl-k">int</span> *)&amp;s-&gt;<span class="pl-smi">img_x</span>, (<span class="pl-k">int</span> *)&amp;s-&gt;<span class="pl-smi">img_y</span>, (<span class="pl-k">int</span> *)&amp;s-&gt;<span class="pl-smi">img_n</span>);</td>
        </tr>
        <tr>
          <td id="L7434" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7434"></td>
          <td id="LC7434" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (ri-&gt;<span class="pl-smi">bits_per_channel</span> == <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L7435" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7435"></td>
          <td id="LC7435" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7436" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7436"></td>
          <td id="LC7436" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7437" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7437"></td>
          <td id="LC7437" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_y</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7438" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7438"></td>
          <td id="LC7438" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (s-&gt;<span class="pl-smi">img_x</span> &gt; STBI_MAX_DIMENSIONS) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Very large image (corrupt?)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7439" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7439"></td>
          <td id="LC7439" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7440" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7440"></td>
          <td id="LC7440" class="blob-code blob-code-inner js-file-line">   *x = s-&gt;<span class="pl-smi">img_x</span>;</td>
        </tr>
        <tr>
          <td id="L7441" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7441"></td>
          <td id="LC7441" class="blob-code blob-code-inner js-file-line">   *y = s-&gt;<span class="pl-smi">img_y</span>;</td>
        </tr>
        <tr>
          <td id="L7442" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7442"></td>
          <td id="LC7442" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (comp) *comp = s-&gt;<span class="pl-smi">img_n</span>;</td>
        </tr>
        <tr>
          <td id="L7443" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7443"></td>
          <td id="LC7443" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7444" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7444"></td>
          <td id="LC7444" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!<span class="pl-c1">stbi__mad4sizes_valid</span>(s-&gt;<span class="pl-smi">img_n</span>, s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>, ri-&gt;<span class="pl-smi">bits_per_channel</span> / <span class="pl-c1">8</span>, <span class="pl-c1">0</span>))</td>
        </tr>
        <tr>
          <td id="L7445" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7445"></td>
          <td id="LC7445" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>too large<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PNM too large<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7446" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7446"></td>
          <td id="LC7446" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7447" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7447"></td>
          <td id="LC7447" class="blob-code blob-code-inner js-file-line">   out = (stbi_uc *) <span class="pl-c1">stbi__malloc_mad4</span>(s-&gt;<span class="pl-smi">img_n</span>, s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>, ri-&gt;<span class="pl-smi">bits_per_channel</span> / <span class="pl-c1">8</span>, <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L7448" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7448"></td>
          <td id="LC7448" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!out) <span class="pl-k">return</span> <span class="pl-c1">stbi__errpuc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>outofmem<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Out of memory<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7449" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7449"></td>
          <td id="LC7449" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__getn</span>(s, out, s-&gt;<span class="pl-smi">img_n</span> * s-&gt;<span class="pl-smi">img_x</span> * s-&gt;<span class="pl-smi">img_y</span> * (ri-&gt;<span class="pl-smi">bits_per_channel</span> / <span class="pl-c1">8</span>));</td>
        </tr>
        <tr>
          <td id="L7450" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7450"></td>
          <td id="LC7450" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7451" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7451"></td>
          <td id="LC7451" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (req_comp &amp;&amp; req_comp != s-&gt;<span class="pl-smi">img_n</span>) {</td>
        </tr>
        <tr>
          <td id="L7452" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7452"></td>
          <td id="LC7452" class="blob-code blob-code-inner js-file-line">      out = <span class="pl-c1">stbi__convert_format</span>(out, s-&gt;<span class="pl-smi">img_n</span>, req_comp, s-&gt;<span class="pl-smi">img_x</span>, s-&gt;<span class="pl-smi">img_y</span>);</td>
        </tr>
        <tr>
          <td id="L7453" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7453"></td>
          <td id="LC7453" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (out == <span class="pl-c1">NULL</span>) <span class="pl-k">return</span> out; <span class="pl-c"><span class="pl-c">//</span> stbi__convert_format frees input on failure</span></td>
        </tr>
        <tr>
          <td id="L7454" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7454"></td>
          <td id="LC7454" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7455" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7455"></td>
          <td id="LC7455" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> out;</td>
        </tr>
        <tr>
          <td id="L7456" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7456"></td>
          <td id="LC7456" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7457" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7457"></td>
          <td id="LC7457" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7458" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7458"></td>
          <td id="LC7458" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_isspace</span>(<span class="pl-k">char</span> c)</td>
        </tr>
        <tr>
          <td id="L7459" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7459"></td>
          <td id="LC7459" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7460" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7460"></td>
          <td id="LC7460" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> c == <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> || c == <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\t</span><span class="pl-pds">&#39;</span></span> || c == <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> || c == <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\v</span><span class="pl-pds">&#39;</span></span> || c == <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\f</span><span class="pl-pds">&#39;</span></span> || c == <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\r</span><span class="pl-pds">&#39;</span></span>;</td>
        </tr>
        <tr>
          <td id="L7461" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7461"></td>
          <td id="LC7461" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7462" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7462"></td>
          <td id="LC7462" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7463" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7463"></td>
          <td id="LC7463" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">void</span>     <span class="pl-smi">stbi__pnm_skip_whitespace</span>(stbi__context *s, <span class="pl-k">char</span> *c)</td>
        </tr>
        <tr>
          <td id="L7464" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7464"></td>
          <td id="LC7464" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7465" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7465"></td>
          <td id="LC7465" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">for</span> (;;) {</td>
        </tr>
        <tr>
          <td id="L7466" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7466"></td>
          <td id="LC7466" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (!<span class="pl-c1">stbi__at_eof</span>(s) &amp;&amp; <span class="pl-c1">stbi__pnm_isspace</span>(*c))</td>
        </tr>
        <tr>
          <td id="L7467" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7467"></td>
          <td id="LC7467" class="blob-code blob-code-inner js-file-line">         *c = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7468" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7468"></td>
          <td id="LC7468" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7469" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7469"></td>
          <td id="LC7469" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">stbi__at_eof</span>(s) || *c != <span class="pl-s"><span class="pl-pds">&#39;</span>#<span class="pl-pds">&#39;</span></span>)</td>
        </tr>
        <tr>
          <td id="L7470" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7470"></td>
          <td id="LC7470" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L7471" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7471"></td>
          <td id="LC7471" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7472" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7472"></td>
          <td id="LC7472" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span> (!<span class="pl-c1">stbi__at_eof</span>(s) &amp;&amp; *c != <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> &amp;&amp; *c != <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\r</span><span class="pl-pds">&#39;</span></span> )</td>
        </tr>
        <tr>
          <td id="L7473" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7473"></td>
          <td id="LC7473" class="blob-code blob-code-inner js-file-line">         *c = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7474" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7474"></td>
          <td id="LC7474" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7475" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7475"></td>
          <td id="LC7475" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7476" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7476"></td>
          <td id="LC7476" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7477" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7477"></td>
          <td id="LC7477" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_isdigit</span>(<span class="pl-k">char</span> c)</td>
        </tr>
        <tr>
          <td id="L7478" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7478"></td>
          <td id="LC7478" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7479" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7479"></td>
          <td id="LC7479" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> c &gt;= <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> &amp;&amp; c &lt;= <span class="pl-s"><span class="pl-pds">&#39;</span>9<span class="pl-pds">&#39;</span></span>;</td>
        </tr>
        <tr>
          <td id="L7480" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7480"></td>
          <td id="LC7480" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7481" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7481"></td>
          <td id="LC7481" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7482" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7482"></td>
          <td id="LC7482" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_getinteger</span>(stbi__context *s, <span class="pl-k">char</span> *c)</td>
        </tr>
        <tr>
          <td id="L7483" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7483"></td>
          <td id="LC7483" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7484" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7484"></td>
          <td id="LC7484" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> value = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7485" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7485"></td>
          <td id="LC7485" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7486" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7486"></td>
          <td id="LC7486" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">while</span> (!<span class="pl-c1">stbi__at_eof</span>(s) &amp;&amp; <span class="pl-c1">stbi__pnm_isdigit</span>(*c)) {</td>
        </tr>
        <tr>
          <td id="L7487" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7487"></td>
          <td id="LC7487" class="blob-code blob-code-inner js-file-line">      value = value*<span class="pl-c1">10</span> + (*c - <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7488" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7488"></td>
          <td id="LC7488" class="blob-code blob-code-inner js-file-line">      *c = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7489" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7489"></td>
          <td id="LC7489" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7490" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7490"></td>
          <td id="LC7490" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7491" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7491"></td>
          <td id="LC7491" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> value;</td>
        </tr>
        <tr>
          <td id="L7492" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7492"></td>
          <td id="LC7492" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7493" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7493"></td>
          <td id="LC7493" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7494" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7494"></td>
          <td id="LC7494" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span>      <span class="pl-smi">stbi__pnm_info</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7495" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7495"></td>
          <td id="LC7495" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7496" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7496"></td>
          <td id="LC7496" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> maxv, dummy;</td>
        </tr>
        <tr>
          <td id="L7497" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7497"></td>
          <td id="LC7497" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">char</span> c, p, t;</td>
        </tr>
        <tr>
          <td id="L7498" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7498"></td>
          <td id="LC7498" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7499" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7499"></td>
          <td id="LC7499" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!x) x = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7500" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7500"></td>
          <td id="LC7500" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!y) y = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7501" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7501"></td>
          <td id="LC7501" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (!comp) comp = &amp;dummy;</td>
        </tr>
        <tr>
          <td id="L7502" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7502"></td>
          <td id="LC7502" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7503" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7503"></td>
          <td id="LC7503" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L7504" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7504"></td>
          <td id="LC7504" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7505" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7505"></td>
          <td id="LC7505" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> Get identifier</span></td>
        </tr>
        <tr>
          <td id="L7506" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7506"></td>
          <td id="LC7506" class="blob-code blob-code-inner js-file-line">   p = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7507" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7507"></td>
          <td id="LC7507" class="blob-code blob-code-inner js-file-line">   t = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7508" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7508"></td>
          <td id="LC7508" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (p != <span class="pl-s"><span class="pl-pds">&#39;</span>P<span class="pl-pds">&#39;</span></span> || (t != <span class="pl-s"><span class="pl-pds">&#39;</span>5<span class="pl-pds">&#39;</span></span> &amp;&amp; t != <span class="pl-s"><span class="pl-pds">&#39;</span>6<span class="pl-pds">&#39;</span></span>)) {</td>
        </tr>
        <tr>
          <td id="L7509" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7509"></td>
          <td id="LC7509" class="blob-code blob-code-inner js-file-line">       <span class="pl-c1">stbi__rewind</span>(s);</td>
        </tr>
        <tr>
          <td id="L7510" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7510"></td>
          <td id="LC7510" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7511" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7511"></td>
          <td id="LC7511" class="blob-code blob-code-inner js-file-line">   }</td>
        </tr>
        <tr>
          <td id="L7512" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7512"></td>
          <td id="LC7512" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7513" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7513"></td>
          <td id="LC7513" class="blob-code blob-code-inner js-file-line">   *comp = (t == <span class="pl-s"><span class="pl-pds">&#39;</span>6<span class="pl-pds">&#39;</span></span>) ? <span class="pl-c1">3</span> : <span class="pl-c1">1</span>;  <span class="pl-c"><span class="pl-c">//</span> &#39;5&#39; is 1-component .pgm; &#39;6&#39; is 3-component .ppm</span></td>
        </tr>
        <tr>
          <td id="L7514" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7514"></td>
          <td id="LC7514" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7515" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7515"></td>
          <td id="LC7515" class="blob-code blob-code-inner js-file-line">   c = (<span class="pl-k">char</span>) <span class="pl-c1">stbi__get8</span>(s);</td>
        </tr>
        <tr>
          <td id="L7516" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7516"></td>
          <td id="LC7516" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__pnm_skip_whitespace</span>(s, &amp;c);</td>
        </tr>
        <tr>
          <td id="L7517" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7517"></td>
          <td id="LC7517" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7518" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7518"></td>
          <td id="LC7518" class="blob-code blob-code-inner js-file-line">   *x = <span class="pl-c1">stbi__pnm_getinteger</span>(s, &amp;c); <span class="pl-c"><span class="pl-c">//</span> read width</span></td>
        </tr>
        <tr>
          <td id="L7519" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7519"></td>
          <td id="LC7519" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__pnm_skip_whitespace</span>(s, &amp;c);</td>
        </tr>
        <tr>
          <td id="L7520" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7520"></td>
          <td id="LC7520" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7521" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7521"></td>
          <td id="LC7521" class="blob-code blob-code-inner js-file-line">   *y = <span class="pl-c1">stbi__pnm_getinteger</span>(s, &amp;c); <span class="pl-c"><span class="pl-c">//</span> read height</span></td>
        </tr>
        <tr>
          <td id="L7522" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7522"></td>
          <td id="LC7522" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__pnm_skip_whitespace</span>(s, &amp;c);</td>
        </tr>
        <tr>
          <td id="L7523" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7523"></td>
          <td id="LC7523" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7524" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7524"></td>
          <td id="LC7524" class="blob-code blob-code-inner js-file-line">   maxv = <span class="pl-c1">stbi__pnm_getinteger</span>(s, &amp;c);  <span class="pl-c"><span class="pl-c">//</span> read max value</span></td>
        </tr>
        <tr>
          <td id="L7525" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7525"></td>
          <td id="LC7525" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (maxv &gt; <span class="pl-c1">65535</span>)</td>
        </tr>
        <tr>
          <td id="L7526" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7526"></td>
          <td id="LC7526" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>max value &gt; 65535<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>PPM image supports only 8-bit and 16-bit images<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7527" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7527"></td>
          <td id="LC7527" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span> <span class="pl-k">if</span> (maxv &gt; <span class="pl-c1">255</span>)</td>
        </tr>
        <tr>
          <td id="L7528" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7528"></td>
          <td id="LC7528" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">16</span>;</td>
        </tr>
        <tr>
          <td id="L7529" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7529"></td>
          <td id="LC7529" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L7530" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7530"></td>
          <td id="LC7530" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">8</span>;</td>
        </tr>
        <tr>
          <td id="L7531" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7531"></td>
          <td id="LC7531" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7532" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7532"></td>
          <td id="LC7532" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7533" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7533"></td>
          <td id="LC7533" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__pnm_is16</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L7534" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7534"></td>
          <td id="LC7534" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7535" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7535"></td>
          <td id="LC7535" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__pnm_info</span>(s, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>, <span class="pl-c1">NULL</span>) == <span class="pl-c1">16</span>)</td>
        </tr>
        <tr>
          <td id="L7536" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7536"></td>
          <td id="LC7536" class="blob-code blob-code-inner js-file-line">	   <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7537" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7537"></td>
          <td id="LC7537" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7538" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7538"></td>
          <td id="LC7538" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7539" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7539"></td>
          <td id="LC7539" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7540" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7540"></td>
          <td id="LC7540" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7541" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7541"></td>
          <td id="LC7541" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__info_main</span>(stbi__context *s, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7542" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7542"></td>
          <td id="LC7542" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7543" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7543"></td>
          <td id="LC7543" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_JPEG</td>
        </tr>
        <tr>
          <td id="L7544" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7544"></td>
          <td id="LC7544" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__jpeg_info</span>(s, x, y, comp)) <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7545" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7545"></td>
          <td id="LC7545" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7546" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7546"></td>
          <td id="LC7546" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7547" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7547"></td>
          <td id="LC7547" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PNG</td>
        </tr>
        <tr>
          <td id="L7548" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7548"></td>
          <td id="LC7548" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__png_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7549" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7549"></td>
          <td id="LC7549" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7550" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7550"></td>
          <td id="LC7550" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7551" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7551"></td>
          <td id="LC7551" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_GIF</td>
        </tr>
        <tr>
          <td id="L7552" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7552"></td>
          <td id="LC7552" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__gif_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7553" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7553"></td>
          <td id="LC7553" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7554" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7554"></td>
          <td id="LC7554" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7555" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7555"></td>
          <td id="LC7555" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_BMP</td>
        </tr>
        <tr>
          <td id="L7556" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7556"></td>
          <td id="LC7556" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__bmp_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7557" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7557"></td>
          <td id="LC7557" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7558" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7558"></td>
          <td id="LC7558" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7559" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7559"></td>
          <td id="LC7559" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PSD</td>
        </tr>
        <tr>
          <td id="L7560" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7560"></td>
          <td id="LC7560" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__psd_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7561" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7561"></td>
          <td id="LC7561" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7562" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7562"></td>
          <td id="LC7562" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7563" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7563"></td>
          <td id="LC7563" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PIC</td>
        </tr>
        <tr>
          <td id="L7564" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7564"></td>
          <td id="LC7564" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__pic_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7565" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7565"></td>
          <td id="LC7565" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7566" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7566"></td>
          <td id="LC7566" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7567" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7567"></td>
          <td id="LC7567" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PNM</td>
        </tr>
        <tr>
          <td id="L7568" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7568"></td>
          <td id="LC7568" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__pnm_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7569" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7569"></td>
          <td id="LC7569" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7570" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7570"></td>
          <td id="LC7570" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7571" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7571"></td>
          <td id="LC7571" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_HDR</td>
        </tr>
        <tr>
          <td id="L7572" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7572"></td>
          <td id="LC7572" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__hdr_info</span>(s, x, y, comp))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7573" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7573"></td>
          <td id="LC7573" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7574" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7574"></td>
          <td id="LC7574" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7575" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7575"></td>
          <td id="LC7575" class="blob-code blob-code-inner js-file-line">   <span class="pl-c"><span class="pl-c">//</span> test tga last because it&#39;s a crappy test!</span></td>
        </tr>
        <tr>
          <td id="L7576" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7576"></td>
          <td id="LC7576" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_TGA</td>
        </tr>
        <tr>
          <td id="L7577" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7577"></td>
          <td id="LC7577" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__tga_info</span>(s, x, y, comp))</td>
        </tr>
        <tr>
          <td id="L7578" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7578"></td>
          <td id="LC7578" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7579" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7579"></td>
          <td id="LC7579" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7580" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7580"></td>
          <td id="LC7580" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unknown image type<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Image not of any known type, or corrupt<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7581" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7581"></td>
          <td id="LC7581" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7582" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7582"></td>
          <td id="LC7582" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7583" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7583"></td>
          <td id="LC7583" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">int</span> <span class="pl-smi">stbi__is_16_main</span>(stbi__context *s)</td>
        </tr>
        <tr>
          <td id="L7584" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7584"></td>
          <td id="LC7584" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7585" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7585"></td>
          <td id="LC7585" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PNG</td>
        </tr>
        <tr>
          <td id="L7586" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7586"></td>
          <td id="LC7586" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__png_is16</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7587" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7587"></td>
          <td id="LC7587" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7588" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7588"></td>
          <td id="LC7588" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7589" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7589"></td>
          <td id="LC7589" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PSD</td>
        </tr>
        <tr>
          <td id="L7590" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7590"></td>
          <td id="LC7590" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__psd_is16</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7591" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7591"></td>
          <td id="LC7591" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7592" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7592"></td>
          <td id="LC7592" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7593" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7593"></td>
          <td id="LC7593" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">ifndef</span> STBI_NO_PNM</td>
        </tr>
        <tr>
          <td id="L7594" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7594"></td>
          <td id="LC7594" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">if</span> (<span class="pl-c1">stbi__pnm_is16</span>(s))  <span class="pl-k">return</span> <span class="pl-c1">1</span>;</td>
        </tr>
        <tr>
          <td id="L7595" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7595"></td>
          <td id="LC7595" class="blob-code blob-code-inner js-file-line">   #<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L7596" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7596"></td>
          <td id="LC7596" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L7597" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7597"></td>
          <td id="LC7597" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7598" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7598"></td>
          <td id="LC7598" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7599" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7599"></td>
          <td id="LC7599" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> STBI_NO_STDIO</td>
        </tr>
        <tr>
          <td id="L7600" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7600"></td>
          <td id="LC7600" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_info</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *filename, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7601" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7601"></td>
          <td id="LC7601" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7602" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7602"></td>
          <td id="LC7602" class="blob-code blob-code-inner js-file-line">    FILE *f = <span class="pl-c1">stbi__fopen</span>(filename, <span class="pl-s"><span class="pl-pds">&quot;</span>rb<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7603" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7603"></td>
          <td id="LC7603" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> result;</td>
        </tr>
        <tr>
          <td id="L7604" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7604"></td>
          <td id="LC7604" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (!f) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t fopen<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unable to open file<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7605" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7605"></td>
          <td id="LC7605" class="blob-code blob-code-inner js-file-line">    result = <span class="pl-c1">stbi_info_from_file</span>(f, x, y, comp);</td>
        </tr>
        <tr>
          <td id="L7606" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7606"></td>
          <td id="LC7606" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(f);</td>
        </tr>
        <tr>
          <td id="L7607" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7607"></td>
          <td id="LC7607" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L7608" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7608"></td>
          <td id="LC7608" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7609" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7609"></td>
          <td id="LC7609" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7610" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7610"></td>
          <td id="LC7610" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_info_from_file</span>(FILE *f, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7611" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7611"></td>
          <td id="LC7611" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7612" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7612"></td>
          <td id="LC7612" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r;</td>
        </tr>
        <tr>
          <td id="L7613" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7613"></td>
          <td id="LC7613" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L7614" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7614"></td>
          <td id="LC7614" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">long</span> pos = <span class="pl-c1">ftell</span>(f);</td>
        </tr>
        <tr>
          <td id="L7615" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7615"></td>
          <td id="LC7615" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_file</span>(&amp;s, f);</td>
        </tr>
        <tr>
          <td id="L7616" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7616"></td>
          <td id="LC7616" class="blob-code blob-code-inner js-file-line">   r = <span class="pl-c1">stbi__info_main</span>(&amp;s,x,y,comp);</td>
        </tr>
        <tr>
          <td id="L7617" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7617"></td>
          <td id="LC7617" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fseek</span>(f,pos,SEEK_SET);</td>
        </tr>
        <tr>
          <td id="L7618" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7618"></td>
          <td id="LC7618" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L7619" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7619"></td>
          <td id="LC7619" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7620" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7620"></td>
          <td id="LC7620" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7621" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7621"></td>
          <td id="LC7621" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_is_16_bit</span>(<span class="pl-k">char</span> <span class="pl-k">const</span> *filename)</td>
        </tr>
        <tr>
          <td id="L7622" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7622"></td>
          <td id="LC7622" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7623" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7623"></td>
          <td id="LC7623" class="blob-code blob-code-inner js-file-line">    FILE *f = <span class="pl-c1">stbi__fopen</span>(filename, <span class="pl-s"><span class="pl-pds">&quot;</span>rb<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7624" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7624"></td>
          <td id="LC7624" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> result;</td>
        </tr>
        <tr>
          <td id="L7625" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7625"></td>
          <td id="LC7625" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (!f) <span class="pl-k">return</span> <span class="pl-c1">stbi__err</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t fopen<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Unable to open file<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L7626" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7626"></td>
          <td id="LC7626" class="blob-code blob-code-inner js-file-line">    result = <span class="pl-c1">stbi_is_16_bit_from_file</span>(f);</td>
        </tr>
        <tr>
          <td id="L7627" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7627"></td>
          <td id="LC7627" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">fclose</span>(f);</td>
        </tr>
        <tr>
          <td id="L7628" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7628"></td>
          <td id="LC7628" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L7629" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7629"></td>
          <td id="LC7629" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7630" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7630"></td>
          <td id="LC7630" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7631" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7631"></td>
          <td id="LC7631" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_is_16_bit_from_file</span>(FILE *f)</td>
        </tr>
        <tr>
          <td id="L7632" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7632"></td>
          <td id="LC7632" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7633" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7633"></td>
          <td id="LC7633" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">int</span> r;</td>
        </tr>
        <tr>
          <td id="L7634" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7634"></td>
          <td id="LC7634" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L7635" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7635"></td>
          <td id="LC7635" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">long</span> pos = <span class="pl-c1">ftell</span>(f);</td>
        </tr>
        <tr>
          <td id="L7636" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7636"></td>
          <td id="LC7636" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_file</span>(&amp;s, f);</td>
        </tr>
        <tr>
          <td id="L7637" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7637"></td>
          <td id="LC7637" class="blob-code blob-code-inner js-file-line">   r = <span class="pl-c1">stbi__is_16_main</span>(&amp;s);</td>
        </tr>
        <tr>
          <td id="L7638" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7638"></td>
          <td id="LC7638" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">fseek</span>(f,pos,SEEK_SET);</td>
        </tr>
        <tr>
          <td id="L7639" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7639"></td>
          <td id="LC7639" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> r;</td>
        </tr>
        <tr>
          <td id="L7640" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7640"></td>
          <td id="LC7640" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7641" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7641"></td>
          <td id="LC7641" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !STBI_NO_STDIO</span></td>
        </tr>
        <tr>
          <td id="L7642" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7642"></td>
          <td id="LC7642" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7643" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7643"></td>
          <td id="LC7643" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_info_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7644" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7644"></td>
          <td id="LC7644" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7645" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7645"></td>
          <td id="LC7645" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L7646" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7646"></td>
          <td id="LC7646" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L7647" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7647"></td>
          <td id="LC7647" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__info_main</span>(&amp;s,x,y,comp);</td>
        </tr>
        <tr>
          <td id="L7648" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7648"></td>
          <td id="LC7648" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7649" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7649"></td>
          <td id="LC7649" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7650" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7650"></td>
          <td id="LC7650" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_info_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *c, <span class="pl-k">void</span> *user, <span class="pl-k">int</span> *x, <span class="pl-k">int</span> *y, <span class="pl-k">int</span> *comp)</td>
        </tr>
        <tr>
          <td id="L7651" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7651"></td>
          <td id="LC7651" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7652" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7652"></td>
          <td id="LC7652" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L7653" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7653"></td>
          <td id="LC7653" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(&amp;s, (stbi_io_callbacks *) c, user);</td>
        </tr>
        <tr>
          <td id="L7654" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7654"></td>
          <td id="LC7654" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__info_main</span>(&amp;s,x,y,comp);</td>
        </tr>
        <tr>
          <td id="L7655" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7655"></td>
          <td id="LC7655" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7656" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7656"></td>
          <td id="LC7656" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7657" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7657"></td>
          <td id="LC7657" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_is_16_bit_from_memory</span>(stbi_uc <span class="pl-k">const</span> *buffer, <span class="pl-k">int</span> len)</td>
        </tr>
        <tr>
          <td id="L7658" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7658"></td>
          <td id="LC7658" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7659" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7659"></td>
          <td id="LC7659" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L7660" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7660"></td>
          <td id="LC7660" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_mem</span>(&amp;s,buffer,len);</td>
        </tr>
        <tr>
          <td id="L7661" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7661"></td>
          <td id="LC7661" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__is_16_main</span>(&amp;s);</td>
        </tr>
        <tr>
          <td id="L7662" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7662"></td>
          <td id="LC7662" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7663" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7663"></td>
          <td id="LC7663" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7664" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7664"></td>
          <td id="LC7664" class="blob-code blob-code-inner js-file-line">STBIDEF <span class="pl-k">int</span> <span class="pl-smi">stbi_is_16_bit_from_callbacks</span>(stbi_io_callbacks <span class="pl-k">const</span> *c, <span class="pl-k">void</span> *user)</td>
        </tr>
        <tr>
          <td id="L7665" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7665"></td>
          <td id="LC7665" class="blob-code blob-code-inner js-file-line">{</td>
        </tr>
        <tr>
          <td id="L7666" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7666"></td>
          <td id="LC7666" class="blob-code blob-code-inner js-file-line">   stbi__context s;</td>
        </tr>
        <tr>
          <td id="L7667" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7667"></td>
          <td id="LC7667" class="blob-code blob-code-inner js-file-line">   <span class="pl-c1">stbi__start_callbacks</span>(&amp;s, (stbi_io_callbacks *) c, user);</td>
        </tr>
        <tr>
          <td id="L7668" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7668"></td>
          <td id="LC7668" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">return</span> <span class="pl-c1">stbi__is_16_main</span>(&amp;s);</td>
        </tr>
        <tr>
          <td id="L7669" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7669"></td>
          <td id="LC7669" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L7670" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7670"></td>
          <td id="LC7670" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7671" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7671"></td>
          <td id="LC7671" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> STB_IMAGE_IMPLEMENTATION</span></td>
        </tr>
        <tr>
          <td id="L7672" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7672"></td>
          <td id="LC7672" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7673" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7673"></td>
          <td id="LC7673" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
        </tr>
        <tr>
          <td id="L7674" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7674"></td>
          <td id="LC7674" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   revision history:</span></td>
        </tr>
        <tr>
          <td id="L7675" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7675"></td>
          <td id="LC7675" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.20  (2019-02-07) support utf8 filenames in Windows; fix warnings and platform ifdefs</span></td>
        </tr>
        <tr>
          <td id="L7676" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7676"></td>
          <td id="LC7676" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.19  (2018-02-11) fix warning</span></td>
        </tr>
        <tr>
          <td id="L7677" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7677"></td>
          <td id="LC7677" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.18  (2018-01-30) fix warnings</span></td>
        </tr>
        <tr>
          <td id="L7678" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7678"></td>
          <td id="LC7678" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.17  (2018-01-29) change sbti__shiftsigned to avoid clang -O2 bug</span></td>
        </tr>
        <tr>
          <td id="L7679" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7679"></td>
          <td id="LC7679" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         1-bit BMP</span></td>
        </tr>
        <tr>
          <td id="L7680" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7680"></td>
          <td id="LC7680" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         *_is_16_bit api</span></td>
        </tr>
        <tr>
          <td id="L7681" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7681"></td>
          <td id="LC7681" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         avoid warnings</span></td>
        </tr>
        <tr>
          <td id="L7682" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7682"></td>
          <td id="LC7682" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.16  (2017-07-23) all functions have 16-bit variants;</span></td>
        </tr>
        <tr>
          <td id="L7683" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7683"></td>
          <td id="LC7683" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         STBI_NO_STDIO works again;</span></td>
        </tr>
        <tr>
          <td id="L7684" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7684"></td>
          <td id="LC7684" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         compilation fixes;</span></td>
        </tr>
        <tr>
          <td id="L7685" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7685"></td>
          <td id="LC7685" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         fix rounding in unpremultiply;</span></td>
        </tr>
        <tr>
          <td id="L7686" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7686"></td>
          <td id="LC7686" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         optimize vertical flip;</span></td>
        </tr>
        <tr>
          <td id="L7687" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7687"></td>
          <td id="LC7687" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         disable raw_len validation;</span></td>
        </tr>
        <tr>
          <td id="L7688" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7688"></td>
          <td id="LC7688" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         documentation fixes</span></td>
        </tr>
        <tr>
          <td id="L7689" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7689"></td>
          <td id="LC7689" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.15  (2017-03-18) fix png-1,2,4 bug; now all Imagenet JPGs decode;</span></td>
        </tr>
        <tr>
          <td id="L7690" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7690"></td>
          <td id="LC7690" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         warning fixes; disable run-time SSE detection on gcc;</span></td>
        </tr>
        <tr>
          <td id="L7691" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7691"></td>
          <td id="LC7691" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         uniform handling of optional &quot;return&quot; values;</span></td>
        </tr>
        <tr>
          <td id="L7692" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7692"></td>
          <td id="LC7692" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         thread-safe initialization of zlib tables</span></td>
        </tr>
        <tr>
          <td id="L7693" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7693"></td>
          <td id="LC7693" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.14  (2017-03-03) remove deprecated STBI_JPEG_OLD; fixes for Imagenet JPGs</span></td>
        </tr>
        <tr>
          <td id="L7694" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7694"></td>
          <td id="LC7694" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.13  (2016-11-29) add 16-bit API, only supported for PNG right now</span></td>
        </tr>
        <tr>
          <td id="L7695" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7695"></td>
          <td id="LC7695" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.12  (2016-04-02) fix typo in 2.11 PSD fix that caused crashes</span></td>
        </tr>
        <tr>
          <td id="L7696" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7696"></td>
          <td id="LC7696" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.11  (2016-04-02) allocate large structures on the stack</span></td>
        </tr>
        <tr>
          <td id="L7697" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7697"></td>
          <td id="LC7697" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         remove white matting for transparent PSD</span></td>
        </tr>
        <tr>
          <td id="L7698" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7698"></td>
          <td id="LC7698" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         fix reported channel count for PNG &amp; BMP</span></td>
        </tr>
        <tr>
          <td id="L7699" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7699"></td>
          <td id="LC7699" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         re-enable SSE2 in non-gcc 64-bit</span></td>
        </tr>
        <tr>
          <td id="L7700" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7700"></td>
          <td id="LC7700" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         support RGB-formatted JPEG</span></td>
        </tr>
        <tr>
          <td id="L7701" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7701"></td>
          <td id="LC7701" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         read 16-bit PNGs (only as 8-bit)</span></td>
        </tr>
        <tr>
          <td id="L7702" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7702"></td>
          <td id="LC7702" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.10  (2016-01-22) avoid warning introduced in 2.09 by STBI_REALLOC_SIZED</span></td>
        </tr>
        <tr>
          <td id="L7703" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7703"></td>
          <td id="LC7703" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.09  (2016-01-16) allow comments in PNM files</span></td>
        </tr>
        <tr>
          <td id="L7704" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7704"></td>
          <td id="LC7704" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         16-bit-per-pixel TGA (not bit-per-component)</span></td>
        </tr>
        <tr>
          <td id="L7705" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7705"></td>
          <td id="LC7705" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         info() for TGA could break due to .hdr handling</span></td>
        </tr>
        <tr>
          <td id="L7706" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7706"></td>
          <td id="LC7706" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         info() for BMP to shares code instead of sloppy parse</span></td>
        </tr>
        <tr>
          <td id="L7707" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7707"></td>
          <td id="LC7707" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         can use STBI_REALLOC_SIZED if allocator doesn&#39;t support realloc</span></td>
        </tr>
        <tr>
          <td id="L7708" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7708"></td>
          <td id="LC7708" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         code cleanup</span></td>
        </tr>
        <tr>
          <td id="L7709" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7709"></td>
          <td id="LC7709" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.08  (2015-09-13) fix to 2.07 cleanup, reading RGB PSD as RGBA</span></td>
        </tr>
        <tr>
          <td id="L7710" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7710"></td>
          <td id="LC7710" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.07  (2015-09-13) fix compiler warnings</span></td>
        </tr>
        <tr>
          <td id="L7711" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7711"></td>
          <td id="LC7711" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         partial animated GIF support</span></td>
        </tr>
        <tr>
          <td id="L7712" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7712"></td>
          <td id="LC7712" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         limited 16-bpc PSD support</span></td>
        </tr>
        <tr>
          <td id="L7713" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7713"></td>
          <td id="LC7713" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         #ifdef unused functions</span></td>
        </tr>
        <tr>
          <td id="L7714" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7714"></td>
          <td id="LC7714" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         bug with &lt; 92 byte PIC,PNM,HDR,TGA</span></td>
        </tr>
        <tr>
          <td id="L7715" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7715"></td>
          <td id="LC7715" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.06  (2015-04-19) fix bug where PSD returns wrong &#39;*comp&#39; value</span></td>
        </tr>
        <tr>
          <td id="L7716" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7716"></td>
          <td id="LC7716" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.05  (2015-04-19) fix bug in progressive JPEG handling, fix warning</span></td>
        </tr>
        <tr>
          <td id="L7717" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7717"></td>
          <td id="LC7717" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.04  (2015-04-15) try to re-enable SIMD on MinGW 64-bit</span></td>
        </tr>
        <tr>
          <td id="L7718" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7718"></td>
          <td id="LC7718" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.03  (2015-04-12) extra corruption checking (mmozeiko)</span></td>
        </tr>
        <tr>
          <td id="L7719" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7719"></td>
          <td id="LC7719" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         stbi_set_flip_vertically_on_load (nguillemot)</span></td>
        </tr>
        <tr>
          <td id="L7720" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7720"></td>
          <td id="LC7720" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         fix NEON support; fix mingw support</span></td>
        </tr>
        <tr>
          <td id="L7721" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7721"></td>
          <td id="LC7721" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.02  (2015-01-19) fix incorrect assert, fix warning</span></td>
        </tr>
        <tr>
          <td id="L7722" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7722"></td>
          <td id="LC7722" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.01  (2015-01-17) fix various warnings; suppress SIMD on gcc 32-bit without -msse2</span></td>
        </tr>
        <tr>
          <td id="L7723" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7723"></td>
          <td id="LC7723" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.00b (2014-12-25) fix STBI_MALLOC in progressive JPEG</span></td>
        </tr>
        <tr>
          <td id="L7724" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7724"></td>
          <td id="LC7724" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      2.00  (2014-12-25) optimize JPG, including x86 SSE2 &amp; NEON SIMD (ryg)</span></td>
        </tr>
        <tr>
          <td id="L7725" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7725"></td>
          <td id="LC7725" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         progressive JPEG (stb)</span></td>
        </tr>
        <tr>
          <td id="L7726" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7726"></td>
          <td id="LC7726" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         PGM/PPM support (Ken Miller)</span></td>
        </tr>
        <tr>
          <td id="L7727" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7727"></td>
          <td id="LC7727" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         STBI_MALLOC,STBI_REALLOC,STBI_FREE</span></td>
        </tr>
        <tr>
          <td id="L7728" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7728"></td>
          <td id="LC7728" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         GIF bugfix -- seemingly never worked</span></td>
        </tr>
        <tr>
          <td id="L7729" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7729"></td>
          <td id="LC7729" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         STBI_NO_*, STBI_ONLY_*</span></td>
        </tr>
        <tr>
          <td id="L7730" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7730"></td>
          <td id="LC7730" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.48  (2014-12-14) fix incorrectly-named assert()</span></td>
        </tr>
        <tr>
          <td id="L7731" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7731"></td>
          <td id="LC7731" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.47  (2014-12-14) 1/2/4-bit PNG support, both direct and paletted (Omar Cornut &amp; stb)</span></td>
        </tr>
        <tr>
          <td id="L7732" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7732"></td>
          <td id="LC7732" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         optimize PNG (ryg)</span></td>
        </tr>
        <tr>
          <td id="L7733" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7733"></td>
          <td id="LC7733" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         fix bug in interlaced PNG with user-specified channel count (stb)</span></td>
        </tr>
        <tr>
          <td id="L7734" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7734"></td>
          <td id="LC7734" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.46  (2014-08-26)</span></td>
        </tr>
        <tr>
          <td id="L7735" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7735"></td>
          <td id="LC7735" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix broken tRNS chunk (colorkey-style transparency) in non-paletted PNG</span></td>
        </tr>
        <tr>
          <td id="L7736" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7736"></td>
          <td id="LC7736" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.45  (2014-08-16)</span></td>
        </tr>
        <tr>
          <td id="L7737" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7737"></td>
          <td id="LC7737" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix MSVC-ARM internal compiler error by wrapping malloc</span></td>
        </tr>
        <tr>
          <td id="L7738" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7738"></td>
          <td id="LC7738" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.44  (2014-08-07)</span></td>
        </tr>
        <tr>
          <td id="L7739" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7739"></td>
          <td id="LC7739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              various warning fixes from Ronny Chevalier</span></td>
        </tr>
        <tr>
          <td id="L7740" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7740"></td>
          <td id="LC7740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.43  (2014-07-15)</span></td>
        </tr>
        <tr>
          <td id="L7741" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7741"></td>
          <td id="LC7741" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix MSVC-only compiler problem in code changed in 1.42</span></td>
        </tr>
        <tr>
          <td id="L7742" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7742"></td>
          <td id="LC7742" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.42  (2014-07-09)</span></td>
        </tr>
        <tr>
          <td id="L7743" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7743"></td>
          <td id="LC7743" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              don&#39;t define _CRT_SECURE_NO_WARNINGS (affects user code)</span></td>
        </tr>
        <tr>
          <td id="L7744" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7744"></td>
          <td id="LC7744" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fixes to stbi__cleanup_jpeg path</span></td>
        </tr>
        <tr>
          <td id="L7745" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7745"></td>
          <td id="LC7745" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              added STBI_ASSERT to avoid requiring assert.h</span></td>
        </tr>
        <tr>
          <td id="L7746" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7746"></td>
          <td id="LC7746" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.41  (2014-06-25)</span></td>
        </tr>
        <tr>
          <td id="L7747" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7747"></td>
          <td id="LC7747" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix search&amp;replace from 1.36 that messed up comments/error messages</span></td>
        </tr>
        <tr>
          <td id="L7748" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7748"></td>
          <td id="LC7748" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.40  (2014-06-22)</span></td>
        </tr>
        <tr>
          <td id="L7749" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7749"></td>
          <td id="LC7749" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix gcc struct-initialization warning</span></td>
        </tr>
        <tr>
          <td id="L7750" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7750"></td>
          <td id="LC7750" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.39  (2014-06-15)</span></td>
        </tr>
        <tr>
          <td id="L7751" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7751"></td>
          <td id="LC7751" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix to TGA optimization when req_comp != number of components in TGA;</span></td>
        </tr>
        <tr>
          <td id="L7752" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7752"></td>
          <td id="LC7752" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix to GIF loading because BMP wasn&#39;t rewinding (whoops, no GIFs in my test suite)</span></td>
        </tr>
        <tr>
          <td id="L7753" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7753"></td>
          <td id="LC7753" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              add support for BMP version 5 (more ignored fields)</span></td>
        </tr>
        <tr>
          <td id="L7754" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7754"></td>
          <td id="LC7754" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.38  (2014-06-06)</span></td>
        </tr>
        <tr>
          <td id="L7755" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7755"></td>
          <td id="LC7755" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              suppress MSVC warnings on integer casts truncating values</span></td>
        </tr>
        <tr>
          <td id="L7756" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7756"></td>
          <td id="LC7756" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix accidental rename of &#39;skip&#39; field of I/O</span></td>
        </tr>
        <tr>
          <td id="L7757" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7757"></td>
          <td id="LC7757" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.37  (2014-06-04)</span></td>
        </tr>
        <tr>
          <td id="L7758" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7758"></td>
          <td id="LC7758" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              remove duplicate typedef</span></td>
        </tr>
        <tr>
          <td id="L7759" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7759"></td>
          <td id="LC7759" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.36  (2014-06-03)</span></td>
        </tr>
        <tr>
          <td id="L7760" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7760"></td>
          <td id="LC7760" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              convert to header file single-file library</span></td>
        </tr>
        <tr>
          <td id="L7761" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7761"></td>
          <td id="LC7761" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              if de-iphone isn&#39;t set, load iphone images color-swapped instead of returning NULL</span></td>
        </tr>
        <tr>
          <td id="L7762" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7762"></td>
          <td id="LC7762" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.35  (2014-05-27)</span></td>
        </tr>
        <tr>
          <td id="L7763" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7763"></td>
          <td id="LC7763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              various warnings</span></td>
        </tr>
        <tr>
          <td id="L7764" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7764"></td>
          <td id="LC7764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix broken STBI_SIMD path</span></td>
        </tr>
        <tr>
          <td id="L7765" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7765"></td>
          <td id="LC7765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix bug where stbi_load_from_file no longer left file pointer in correct place</span></td>
        </tr>
        <tr>
          <td id="L7766" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7766"></td>
          <td id="LC7766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix broken non-easy path for 32-bit BMP (possibly never used)</span></td>
        </tr>
        <tr>
          <td id="L7767" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7767"></td>
          <td id="LC7767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              TGA optimization by Arseny Kapoulkine</span></td>
        </tr>
        <tr>
          <td id="L7768" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7768"></td>
          <td id="LC7768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.34  (unknown)</span></td>
        </tr>
        <tr>
          <td id="L7769" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7769"></td>
          <td id="LC7769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              use STBI_NOTUSED in stbi__resample_row_generic(), fix one more leak in tga failure case</span></td>
        </tr>
        <tr>
          <td id="L7770" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7770"></td>
          <td id="LC7770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.33  (2011-07-14)</span></td>
        </tr>
        <tr>
          <td id="L7771" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7771"></td>
          <td id="LC7771" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              make stbi_is_hdr work in STBI_NO_HDR (as specified), minor compiler-friendly improvements</span></td>
        </tr>
        <tr>
          <td id="L7772" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7772"></td>
          <td id="LC7772" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.32  (2011-07-13)</span></td>
        </tr>
        <tr>
          <td id="L7773" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7773"></td>
          <td id="LC7773" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              support for &quot;info&quot; function for all supported filetypes (SpartanJ)</span></td>
        </tr>
        <tr>
          <td id="L7774" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7774"></td>
          <td id="LC7774" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.31  (2011-06-20)</span></td>
        </tr>
        <tr>
          <td id="L7775" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7775"></td>
          <td id="LC7775" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              a few more leak fixes, bug in PNG handling (SpartanJ)</span></td>
        </tr>
        <tr>
          <td id="L7776" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7776"></td>
          <td id="LC7776" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.30  (2011-06-11)</span></td>
        </tr>
        <tr>
          <td id="L7777" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7777"></td>
          <td id="LC7777" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              added ability to load files via callbacks to accomidate custom input streams (Ben Wenger)</span></td>
        </tr>
        <tr>
          <td id="L7778" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7778"></td>
          <td id="LC7778" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              removed deprecated format-specific test/load functions</span></td>
        </tr>
        <tr>
          <td id="L7779" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7779"></td>
          <td id="LC7779" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              removed support for installable file formats (stbi_loader) -- would have been broken for IO callbacks anyway</span></td>
        </tr>
        <tr>
          <td id="L7780" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7780"></td>
          <td id="LC7780" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              error cases in bmp and tga give messages and don&#39;t leak (Raymond Barbiero, grisha)</span></td>
        </tr>
        <tr>
          <td id="L7781" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7781"></td>
          <td id="LC7781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix inefficiency in decoding 32-bit BMP (David Woo)</span></td>
        </tr>
        <tr>
          <td id="L7782" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7782"></td>
          <td id="LC7782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.29  (2010-08-16)</span></td>
        </tr>
        <tr>
          <td id="L7783" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7783"></td>
          <td id="LC7783" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              various warning fixes from Aurelien Pocheville</span></td>
        </tr>
        <tr>
          <td id="L7784" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7784"></td>
          <td id="LC7784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.28  (2010-08-01)</span></td>
        </tr>
        <tr>
          <td id="L7785" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7785"></td>
          <td id="LC7785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix bug in GIF palette transparency (SpartanJ)</span></td>
        </tr>
        <tr>
          <td id="L7786" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7786"></td>
          <td id="LC7786" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.27  (2010-08-01)</span></td>
        </tr>
        <tr>
          <td id="L7787" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7787"></td>
          <td id="LC7787" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              cast-to-stbi_uc to fix warnings</span></td>
        </tr>
        <tr>
          <td id="L7788" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7788"></td>
          <td id="LC7788" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.26  (2010-07-24)</span></td>
        </tr>
        <tr>
          <td id="L7789" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7789"></td>
          <td id="LC7789" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix bug in file buffering for PNG reported by SpartanJ</span></td>
        </tr>
        <tr>
          <td id="L7790" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7790"></td>
          <td id="LC7790" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.25  (2010-07-17)</span></td>
        </tr>
        <tr>
          <td id="L7791" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7791"></td>
          <td id="LC7791" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              refix trans_data warning (Won Chun)</span></td>
        </tr>
        <tr>
          <td id="L7792" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7792"></td>
          <td id="LC7792" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.24  (2010-07-12)</span></td>
        </tr>
        <tr>
          <td id="L7793" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7793"></td>
          <td id="LC7793" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              perf improvements reading from files on platforms with lock-heavy fgetc()</span></td>
        </tr>
        <tr>
          <td id="L7794" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7794"></td>
          <td id="LC7794" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              minor perf improvements for jpeg</span></td>
        </tr>
        <tr>
          <td id="L7795" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7795"></td>
          <td id="LC7795" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              deprecated type-specific functions so we&#39;ll get feedback if they&#39;re needed</span></td>
        </tr>
        <tr>
          <td id="L7796" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7796"></td>
          <td id="LC7796" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              attempt to fix trans_data warning (Won Chun)</span></td>
        </tr>
        <tr>
          <td id="L7797" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7797"></td>
          <td id="LC7797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.23    fixed bug in iPhone support</span></td>
        </tr>
        <tr>
          <td id="L7798" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7798"></td>
          <td id="LC7798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.22  (2010-07-10)</span></td>
        </tr>
        <tr>
          <td id="L7799" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7799"></td>
          <td id="LC7799" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              removed image *writing* support</span></td>
        </tr>
        <tr>
          <td id="L7800" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7800"></td>
          <td id="LC7800" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              stbi_info support from Jetro Lauha</span></td>
        </tr>
        <tr>
          <td id="L7801" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7801"></td>
          <td id="LC7801" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              GIF support from Jean-Marc Lienher</span></td>
        </tr>
        <tr>
          <td id="L7802" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7802"></td>
          <td id="LC7802" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              iPhone PNG-extensions from James Brown</span></td>
        </tr>
        <tr>
          <td id="L7803" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7803"></td>
          <td id="LC7803" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              warning-fixes from Nicolas Schulz and Janez Zemva (i.stbi__err. Janez (U+017D)emva)</span></td>
        </tr>
        <tr>
          <td id="L7804" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7804"></td>
          <td id="LC7804" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.21    fix use of &#39;stbi_uc&#39; in header (reported by jon blow)</span></td>
        </tr>
        <tr>
          <td id="L7805" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7805"></td>
          <td id="LC7805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.20    added support for Softimage PIC, by Tom Seddon</span></td>
        </tr>
        <tr>
          <td id="L7806" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7806"></td>
          <td id="LC7806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.19    bug in interlaced PNG corruption check (found by ryg)</span></td>
        </tr>
        <tr>
          <td id="L7807" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7807"></td>
          <td id="LC7807" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.18  (2008-08-02)</span></td>
        </tr>
        <tr>
          <td id="L7808" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7808"></td>
          <td id="LC7808" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix a threading bug (local mutable static)</span></td>
        </tr>
        <tr>
          <td id="L7809" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7809"></td>
          <td id="LC7809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.17    support interlaced PNG</span></td>
        </tr>
        <tr>
          <td id="L7810" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7810"></td>
          <td id="LC7810" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.16    major bugfix - stbi__convert_format converted one too many pixels</span></td>
        </tr>
        <tr>
          <td id="L7811" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7811"></td>
          <td id="LC7811" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.15    initialize some fields for thread safety</span></td>
        </tr>
        <tr>
          <td id="L7812" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7812"></td>
          <td id="LC7812" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.14    fix threadsafe conversion bug</span></td>
        </tr>
        <tr>
          <td id="L7813" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7813"></td>
          <td id="LC7813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              header-file-only version (#define STBI_HEADER_FILE_ONLY before including)</span></td>
        </tr>
        <tr>
          <td id="L7814" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7814"></td>
          <td id="LC7814" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.13    threadsafe</span></td>
        </tr>
        <tr>
          <td id="L7815" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7815"></td>
          <td id="LC7815" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.12    const qualifiers in the API</span></td>
        </tr>
        <tr>
          <td id="L7816" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7816"></td>
          <td id="LC7816" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.11    Support installable IDCT, colorspace conversion routines</span></td>
        </tr>
        <tr>
          <td id="L7817" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7817"></td>
          <td id="LC7817" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.10    Fixes for 64-bit (don&#39;t use &quot;unsigned long&quot;)</span></td>
        </tr>
        <tr>
          <td id="L7818" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7818"></td>
          <td id="LC7818" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              optimized upsampling by Fabian &quot;ryg&quot; Giesen</span></td>
        </tr>
        <tr>
          <td id="L7819" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7819"></td>
          <td id="LC7819" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.09    Fix format-conversion for PSD code (bad global variables!)</span></td>
        </tr>
        <tr>
          <td id="L7820" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7820"></td>
          <td id="LC7820" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.08    Thatcher Ulrich&#39;s PSD code integrated by Nicolas Schulz</span></td>
        </tr>
        <tr>
          <td id="L7821" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7821"></td>
          <td id="LC7821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.07    attempt to fix C++ warning/errors again</span></td>
        </tr>
        <tr>
          <td id="L7822" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7822"></td>
          <td id="LC7822" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.06    attempt to fix C++ warning/errors again</span></td>
        </tr>
        <tr>
          <td id="L7823" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7823"></td>
          <td id="LC7823" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.05    fix TGA loading to return correct *comp and use good luminance calc</span></td>
        </tr>
        <tr>
          <td id="L7824" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7824"></td>
          <td id="LC7824" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.04    default float alpha is 1, not 255; use &#39;void *&#39; for stbi_image_free</span></td>
        </tr>
        <tr>
          <td id="L7825" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7825"></td>
          <td id="LC7825" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.03    bugfixes to STBI_NO_STDIO, STBI_NO_HDR</span></td>
        </tr>
        <tr>
          <td id="L7826" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7826"></td>
          <td id="LC7826" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.02    support for (subset of) HDR files, float interface for preferred access to them</span></td>
        </tr>
        <tr>
          <td id="L7827" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7827"></td>
          <td id="LC7827" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.01    fix bug: possible bug in handling right-side up bmps... not sure</span></td>
        </tr>
        <tr>
          <td id="L7828" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7828"></td>
          <td id="LC7828" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              fix bug: the stbi__bmp_load() and stbi__tga_load() functions didn&#39;t work at all</span></td>
        </tr>
        <tr>
          <td id="L7829" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7829"></td>
          <td id="LC7829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      1.00    interface to zlib that skips zlib header</span></td>
        </tr>
        <tr>
          <td id="L7830" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7830"></td>
          <td id="LC7830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.99    correct handling of alpha in palette</span></td>
        </tr>
        <tr>
          <td id="L7831" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7831"></td>
          <td id="LC7831" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.98    TGA loader by lonesock; dynamically add loaders (untested)</span></td>
        </tr>
        <tr>
          <td id="L7832" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7832"></td>
          <td id="LC7832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.97    jpeg errors on too large a file; also catch another malloc failure</span></td>
        </tr>
        <tr>
          <td id="L7833" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7833"></td>
          <td id="LC7833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.96    fix detection of invalid v value - particleman@mollyrocket forum</span></td>
        </tr>
        <tr>
          <td id="L7834" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7834"></td>
          <td id="LC7834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.95    during header scan, seek to markers in case of padding</span></td>
        </tr>
        <tr>
          <td id="L7835" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7835"></td>
          <td id="LC7835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.94    STBI_NO_STDIO to disable stdio usage; rename all #defines the same</span></td>
        </tr>
        <tr>
          <td id="L7836" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7836"></td>
          <td id="LC7836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.93    handle jpegtran output; verbose errors</span></td>
        </tr>
        <tr>
          <td id="L7837" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7837"></td>
          <td id="LC7837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.92    read 4,8,16,24,32-bit BMP files of several formats</span></td>
        </tr>
        <tr>
          <td id="L7838" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7838"></td>
          <td id="LC7838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.91    output 24-bit Windows 3.0 BMP files</span></td>
        </tr>
        <tr>
          <td id="L7839" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7839"></td>
          <td id="LC7839" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.90    fix a few more warnings; bump version number to approach 1.0</span></td>
        </tr>
        <tr>
          <td id="L7840" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7840"></td>
          <td id="LC7840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.61    bugfixes due to Marc LeBlanc, Christopher Lloyd</span></td>
        </tr>
        <tr>
          <td id="L7841" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7841"></td>
          <td id="LC7841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.60    fix compiling as c++</span></td>
        </tr>
        <tr>
          <td id="L7842" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7842"></td>
          <td id="LC7842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.59    fix warnings: merge Dave Moore&#39;s -Wall fixes</span></td>
        </tr>
        <tr>
          <td id="L7843" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7843"></td>
          <td id="LC7843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.58    fix bug: zlib uncompressed mode len/nlen was wrong endian</span></td>
        </tr>
        <tr>
          <td id="L7844" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7844"></td>
          <td id="LC7844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.57    fix bug: jpg last huffman symbol before marker was &gt;9 bits but less than 16 available</span></td>
        </tr>
        <tr>
          <td id="L7845" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7845"></td>
          <td id="LC7845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.56    fix bug: zlib uncompressed mode len vs. nlen</span></td>
        </tr>
        <tr>
          <td id="L7846" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7846"></td>
          <td id="LC7846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.55    fix bug: restart_interval not initialized to 0</span></td>
        </tr>
        <tr>
          <td id="L7847" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7847"></td>
          <td id="LC7847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.54    allow NULL for &#39;int *comp&#39;</span></td>
        </tr>
        <tr>
          <td id="L7848" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7848"></td>
          <td id="LC7848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.53    fix bug in png 3-&gt;4; speedup png decoding</span></td>
        </tr>
        <tr>
          <td id="L7849" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7849"></td>
          <td id="LC7849" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.52    png handles req_comp=3,4 directly; minor cleanup; jpeg comments</span></td>
        </tr>
        <tr>
          <td id="L7850" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7850"></td>
          <td id="LC7850" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.51    obey req_comp requests, 1-component jpegs return as 1-component,</span></td>
        </tr>
        <tr>
          <td id="L7851" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7851"></td>
          <td id="LC7851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              on &#39;test&#39; only check type, not whether we support this variant</span></td>
        </tr>
        <tr>
          <td id="L7852" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7852"></td>
          <td id="LC7852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      0.50  (2006-11-19)</span></td>
        </tr>
        <tr>
          <td id="L7853" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7853"></td>
          <td id="LC7853" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              first released version</span></td>
        </tr>
        <tr>
          <td id="L7854" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7854"></td>
          <td id="LC7854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
        </tr>
        <tr>
          <td id="L7855" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7855"></td>
          <td id="LC7855" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7856" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7856"></td>
          <td id="LC7856" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L7857" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7857"></td>
          <td id="LC7857" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">/*</span></span></td>
        </tr>
        <tr>
          <td id="L7858" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7858"></td>
          <td id="LC7858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">------------------------------------------------------------------------------</span></td>
        </tr>
        <tr>
          <td id="L7859" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7859"></td>
          <td id="LC7859" class="blob-code blob-code-inner js-file-line"><span class="pl-c">This software is available under 2 licenses -- choose whichever you prefer.</span></td>
        </tr>
        <tr>
          <td id="L7860" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7860"></td>
          <td id="LC7860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">------------------------------------------------------------------------------</span></td>
        </tr>
        <tr>
          <td id="L7861" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7861"></td>
          <td id="LC7861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">ALTERNATIVE A - MIT License</span></td>
        </tr>
        <tr>
          <td id="L7862" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7862"></td>
          <td id="LC7862" class="blob-code blob-code-inner js-file-line"><span class="pl-c">Copyright (c) 2017 Sean Barrett</span></td>
        </tr>
        <tr>
          <td id="L7863" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7863"></td>
          <td id="LC7863" class="blob-code blob-code-inner js-file-line"><span class="pl-c">Permission is hereby granted, free of charge, to any person obtaining a copy of</span></td>
        </tr>
        <tr>
          <td id="L7864" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7864"></td>
          <td id="LC7864" class="blob-code blob-code-inner js-file-line"><span class="pl-c">this software and associated documentation files (the &quot;Software&quot;), to deal in</span></td>
        </tr>
        <tr>
          <td id="L7865" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7865"></td>
          <td id="LC7865" class="blob-code blob-code-inner js-file-line"><span class="pl-c">the Software without restriction, including without limitation the rights to</span></td>
        </tr>
        <tr>
          <td id="L7866" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7866"></td>
          <td id="LC7866" class="blob-code blob-code-inner js-file-line"><span class="pl-c">use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies</span></td>
        </tr>
        <tr>
          <td id="L7867" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7867"></td>
          <td id="LC7867" class="blob-code blob-code-inner js-file-line"><span class="pl-c">of the Software, and to permit persons to whom the Software is furnished to do</span></td>
        </tr>
        <tr>
          <td id="L7868" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7868"></td>
          <td id="LC7868" class="blob-code blob-code-inner js-file-line"><span class="pl-c">so, subject to the following conditions:</span></td>
        </tr>
        <tr>
          <td id="L7869" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7869"></td>
          <td id="LC7869" class="blob-code blob-code-inner js-file-line"><span class="pl-c">The above copyright notice and this permission notice shall be included in all</span></td>
        </tr>
        <tr>
          <td id="L7870" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7870"></td>
          <td id="LC7870" class="blob-code blob-code-inner js-file-line"><span class="pl-c">copies or substantial portions of the Software.</span></td>
        </tr>
        <tr>
          <td id="L7871" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7871"></td>
          <td id="LC7871" class="blob-code blob-code-inner js-file-line"><span class="pl-c">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></td>
        </tr>
        <tr>
          <td id="L7872" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7872"></td>
          <td id="LC7872" class="blob-code blob-code-inner js-file-line"><span class="pl-c">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></td>
        </tr>
        <tr>
          <td id="L7873" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7873"></td>
          <td id="LC7873" class="blob-code blob-code-inner js-file-line"><span class="pl-c">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></td>
        </tr>
        <tr>
          <td id="L7874" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7874"></td>
          <td id="LC7874" class="blob-code blob-code-inner js-file-line"><span class="pl-c">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></td>
        </tr>
        <tr>
          <td id="L7875" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7875"></td>
          <td id="LC7875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></td>
        </tr>
        <tr>
          <td id="L7876" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7876"></td>
          <td id="LC7876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></td>
        </tr>
        <tr>
          <td id="L7877" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7877"></td>
          <td id="LC7877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">SOFTWARE.</span></td>
        </tr>
        <tr>
          <td id="L7878" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7878"></td>
          <td id="LC7878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">------------------------------------------------------------------------------</span></td>
        </tr>
        <tr>
          <td id="L7879" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7879"></td>
          <td id="LC7879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">ALTERNATIVE B - Public Domain (www.unlicense.org)</span></td>
        </tr>
        <tr>
          <td id="L7880" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7880"></td>
          <td id="LC7880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">This is free and unencumbered software released into the public domain.</span></td>
        </tr>
        <tr>
          <td id="L7881" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7881"></td>
          <td id="LC7881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">Anyone is free to copy, modify, publish, use, compile, sell, or distribute this</span></td>
        </tr>
        <tr>
          <td id="L7882" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7882"></td>
          <td id="LC7882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">software, either in source code form or as a compiled binary, for any purpose,</span></td>
        </tr>
        <tr>
          <td id="L7883" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7883"></td>
          <td id="LC7883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">commercial or non-commercial, and by any means.</span></td>
        </tr>
        <tr>
          <td id="L7884" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7884"></td>
          <td id="LC7884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">In jurisdictions that recognize copyright laws, the author or authors of this</span></td>
        </tr>
        <tr>
          <td id="L7885" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7885"></td>
          <td id="LC7885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">software dedicate any and all copyright interest in the software to the public</span></td>
        </tr>
        <tr>
          <td id="L7886" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7886"></td>
          <td id="LC7886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">domain. We make this dedication for the benefit of the public at large and to</span></td>
        </tr>
        <tr>
          <td id="L7887" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7887"></td>
          <td id="LC7887" class="blob-code blob-code-inner js-file-line"><span class="pl-c">the detriment of our heirs and successors. We intend this dedication to be an</span></td>
        </tr>
        <tr>
          <td id="L7888" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7888"></td>
          <td id="LC7888" class="blob-code blob-code-inner js-file-line"><span class="pl-c">overt act of relinquishment in perpetuity of all present and future rights to</span></td>
        </tr>
        <tr>
          <td id="L7889" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7889"></td>
          <td id="LC7889" class="blob-code blob-code-inner js-file-line"><span class="pl-c">this software under copyright law.</span></td>
        </tr>
        <tr>
          <td id="L7890" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7890"></td>
          <td id="LC7890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></td>
        </tr>
        <tr>
          <td id="L7891" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7891"></td>
          <td id="LC7891" class="blob-code blob-code-inner js-file-line"><span class="pl-c">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></td>
        </tr>
        <tr>
          <td id="L7892" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7892"></td>
          <td id="LC7892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></td>
        </tr>
        <tr>
          <td id="L7893" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7893"></td>
          <td id="LC7893" class="blob-code blob-code-inner js-file-line"><span class="pl-c">AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN</span></td>
        </tr>
        <tr>
          <td id="L7894" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7894"></td>
          <td id="LC7894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION</span></td>
        </tr>
        <tr>
          <td id="L7895" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7895"></td>
          <td id="LC7895" class="blob-code blob-code-inner js-file-line"><span class="pl-c">WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></td>
        </tr>
        <tr>
          <td id="L7896" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7896"></td>
          <td id="LC7896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">------------------------------------------------------------------------------</span></td>
        </tr>
        <tr>
          <td id="L7897" class="blob-num js-line-number js-code-nav-line-number" data-line-number="7897"></td>
          <td id="LC7897" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">*/</span></span></td>
        </tr>
  </table>
</div>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 color-bg-default border color-border-default rounded-1" aria-label="Inline file action toolbar">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
    </summary>
    <details-menu>

      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se ml-2 mt-2"
      style="width:220px"
      >
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" aria-label="Copy lines">
            Copy lines
          </clipboard-copy>
        </li>
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" aria-label="Copy permalink">
            Copy permalink
          </clipboard-copy>
        </li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/nothings/stb/blame/af1a5bc352164740c1cc1354942b1c6b72eacb8a/stb_image.h">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/nothings/stb/issues/new">Reference in new issue</a></li>
          <li><a class="dropdown-item" id="js-new-discussion" role="menuitem" href="/nothings/stb/discussions/new">Reference in new discussion</a></li>
      </ul>
    </details-menu>
  </details>

  </div>

    </div>


  

  <details class="details-reset details-overlay details-overlay-dark" id="jumpto-line-details-dialog">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" action="" accept-charset="UTF-8" method="get">
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
        <button data-close-dialog="" type="submit" data-view-component="true" class="btn">
  
  Go
  

</button>
</form>    </details-dialog>
  </details>


</div>



  </div>
</div>

    </main>
  </div>

  </div>

            
<div class="footer container-xl width-full p-responsive" role="contentinfo">
  <div class="position-relative d-flex flex-row-reverse flex-lg-row flex-wrap flex-lg-nowrap flex-justify-center flex-lg-justify-between pt-6 pb-2 mt-6 f6 color-fg-muted border-top color-border-muted ">
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
      <li class="mr-3 mr-lg-0">&copy; 2021 GitHub, Inc.</li>
        <li class="mr-3 mr-lg-0"><a href="https://docs.github.com/en/github/site-policy/github-terms-of-service" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to terms&quot;,&quot;label&quot;:&quot;text:terms&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="d6e12a3b7f9b4a12d223c57c6a7241e9dcca1edb1a304f3d4e9b1a6b17ebbc53" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}">Terms</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://docs.github.com/en/github/site-policy/github-privacy-statement" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="d767352b701c1596007cbd932313fb450a3850742389ba36ed8d80d22d833761" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}">Privacy</a></li>
        <li class="mr-3 mr-lg-0"><a data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="d34d1141bf1bf5aadaca00e225f6bfd6e2b7540a7450bbc2e3ac1676861f3a6c" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}" href="https://github.com/security">Security</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://www.githubstatus.com/" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="40d315726a40137039f0faebea67a543f381abd1611aeb00d2dabea57144d422" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:Docs" href="https://docs.github.com">Docs</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon d-none d-lg-block mx-lg-4" href="https://github.com">
      <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-mark-github">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
        <li class="mr-3 mr-lg-0"><a href="https://support.github.com?tags=dotcom-footer" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="1878f94db264c878fb2412617e3c563d0fe8f25656bca002968875b2670aede5" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}">Contact GitHub</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Pricing&quot;,&quot;label&quot;:&quot;text:Pricing&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="199a1fc4d48c77fbb5d9b68a04b5b14db09344d7ef8cd94d95d09deed23b2ecb" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Pricing&quot;,&quot;label&quot;:&quot;text:Pricing&quot;}">Pricing</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://docs.github.com" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to api&quot;,&quot;label&quot;:&quot;text:api&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="819e399730854c227c32f99b0d38717fc2a803f5ecc92937efee168962d86786" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to api&quot;,&quot;label&quot;:&quot;text:api&quot;}">API</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://services.github.com" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to training&quot;,&quot;label&quot;:&quot;text:training&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="1c07b67e772a182911cc13a9e1b57291582b215d00acd4b4e47a3bff4b346a43" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to training&quot;,&quot;label&quot;:&quot;text:training&quot;}">Training</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-hydro-click="{&quot;event_type&quot;:&quot;analytics.event&quot;,&quot;payload&quot;:{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to blog&quot;,&quot;label&quot;:&quot;text:blog&quot;,&quot;originating_url&quot;:&quot;https://github.com/nothings/stb/blob/master/stb_image.h&quot;,&quot;user_id&quot;:5924123}}" data-hydro-click-hmac="58d6bb57d0b9b1406b38f42a6da59e0055038c9c4b6c6ad83259ab8e298615db" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to blog&quot;,&quot;label&quot;:&quot;text:blog&quot;}">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>
    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 color-fg-muted"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error" hidden>
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
    </button>
    You can’t perform that action at this time.
  </div>

  <div class="js-stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large" style="width:360px;">
  </div>
</div>

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>


    <style>
      .user-mention[href$="/guilhermepo2"] {
        color: var(--color-user-mention-fg);
        background-color: var(--color-user-mention-bg);
        border-radius: 2px;
        margin-left: -2px;
        margin-right: -2px;
        padding: 0 2px;
      }
    </style>


  </body>
</html>

