name: engine build
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build-and-test:
    name:  >-
      CI
      ${{ matrix.os }}
      ${{ matrix.compiler }}
      ${{ matrix.optimized && 'release' || 'debug' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [msvc,clang]
        os: [windows-latest,macos-latest]
        optimized: [true, false]
        exclude:
        - os: macos-latest
          compiler: msvc
        - os: windows-latest
          compiler: clang      
        include:
        - compiler: clang
          CC: clang
          CXX: clang++
        - compiler: msvc
          CC: 
          CXX: 
        - os: windows-latest
          TOOLCHAIN_FILE: /cmake/toolchain/windows/windows-msvc.cmake
        - os: macos-latest
          TOOLCHAIN_FILE: /cmake/toolchain/macos/macos-clang.cmake

    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build
      CMAKE_BUILD_TYPE: ${{ matrix.optimized && 'Release' || 'Debug' }}
      CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}${{ matrix.TOOLCHAIN_FILE }}
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      BINARY_SUFFIX: ${{ startsWith(matrix.os, 'windows') && '.exe' || '' }}
      BINARY_PATH: >-
        ${{ format(
        startsWith(matrix.os, 'windows') && '{0}\build\{1}\' || '{0}/build/',
        github.workspace,
        matrix.optimized && 'Release' || 'Debug') }}
        
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        
    - name: Generate build config
      run: >-
        cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}"
        -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}
        -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/install_test/
        -DCMAKE_TOOLCHAIN_FILE=${{ env.CMAKE_TOOLCHAIN_FILE }}

    - name: Build
      run: >-
        cmake --build "${{ env.CMAKE_BUILD_DIR }}"
        --config "${{ env.CMAKE_BUILD_TYPE }}"
